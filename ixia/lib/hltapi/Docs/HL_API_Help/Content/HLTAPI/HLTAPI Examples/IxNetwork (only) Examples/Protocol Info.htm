<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxNetwork (only) Examples|TCL_Samples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>Protocol Info (Protocol_info.tcl)</title>
        <link href="../../../Resources/Stylesheets/Advanced_Information_Manager.css" rel="stylesheet" type="text/css" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxNetwork (only) Examples/Protocol Info.htm">Open topic with navigation</a>
        </p>
        <h3>Protocol Info (Protocol_info.tcl)</h3>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Description:</p>
        <p class="CodeBlock">#    This sample creates one topology with one device group containing one     #</p>
        <p class="CodeBlock"># IPv4 stack and uses protocol_info command to retrive information about the   #</p>
        <p class="CodeBlock"># Ethernet and IPv4 protocols sessions.                                        #</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Package require Ixia</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">if {[catch {package require Ixia} retCode]} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - [info script] - $retCode"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># chassis, card, port configuration</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">set chassis_ip 10.215.180.121</p>
        <p class="CodeBlock">set ixnetwork_tcl_server localhost</p>
        <p class="CodeBlock">set port_list [list 2/1 2/2]</p>
        <p class="CodeBlock">set test_name                   [info script]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># START - Connect to the chassis</p>
        <p class="CodeBlock"># Connect to the IxNetwork Tcl Server &amp; chassis, reset to factory defaults and take ownership		   #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">set connect_status [::ixiangpf::connect             \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-reset                                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-device $chassis_ip                             \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-port_list $port_list                           \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-ixnetwork_tcl_server $ixnetwork_tcl_server     \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget connect_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget connect_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">puts "End connecting to chassis ..."</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">set port_handle1 [keylget connect_status port_handle.$chassis_ip.[lindex $port_list 0]]</p>
        <p class="CodeBlock">set port_handle2 [keylget connect_status port_handle.$chassis_ip.[lindex $port_list 1]]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Configure Topology, Device Group #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Creating topology"</p>
        <p class="CodeBlock">set topology_status [::ixiangpf::topology_config             \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-topology_name      {Topology 1}                         \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-port_handle        [list $port_handle1 $port_handle2]   \</p>
        <p class="CodeBlock" style="margin-left: 25px;">]</p>
        <p class="CodeBlock">if {[keylget topology_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget topology_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">set topology_handle [keylget topology_status topology_handle]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">puts "Creating device group"</p>
        <p class="CodeBlock">set device_group_status [::ixiangpf::topology_config      \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-topology_handle              $topology_handle        \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-device_group_name            {Device Group 1}        \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-device_group_multiplier      10                      \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-device_group_enabled         1                       \</p>
        <p class="CodeBlock" style="margin-left: 25px;">]</p>
        <p class="CodeBlock">if {[keylget device_group_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget device_group_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">set deviceGroup_handle [keylget device_group_status device_group_handle]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Create Ethernet Stack for the Device Group                                  #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Creating ethernet stack"</p>
        <p class="CodeBlock">set ethernet_status [::ixiangpf::interface_config            \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-protocol_name                {Ethernet 1}               \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-protocol_handle              $deviceGroup_handle        \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-mtu                          1500                       \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-src_mac_addr                 00.aa.bb.cc.00.01          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-src_mac_addr_step            00.00.00.00.00.01          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan                         1                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan_id                      1                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan_id_step                 1                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan_id_count                1                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan_tpid                    0x8100                     \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan_user_priority           0                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-vlan_user_priority_step      0                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-use_vpn_parameters           0                          \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-site_id                      0                          \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget ethernet_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget ethernet_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">set ethernet_handle [keylget ethernet_status ethernet_handle]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Create IPv4 Stack on top of Ethernet Stack                                   #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Creating IPv4 stack"</p>
        <p class="CodeBlock">set ipv4_status [::ixiangpf::interface_config                  \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-protocol_name                     {IPv4 1}                \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-protocol_handle                   $ethernet_handle        \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-ipv4_resolve_gateway              0                       \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-ipv4_manual_gateway_mac           00.00.00.00.00.01       \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-ipv4_manual_gateway_mac_step      00.00.00.00.00.00       \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-gateway                           100.1.0.1               \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-gateway_step                      0.0.1.0                 \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-intf_ip_addr                      100.1.0.2               \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-intf_ip_addr_step                 0.0.1.0                 \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-netmask                           255.255.255.0           \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if {[keylget ipv4_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget ipv4_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">set ipv4_handle [keylget ipv4_status ipv4_handle]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Start protocols                                                              #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Starting protocols"</p>
        <p class="CodeBlock">set start_status [::ixiangpf::test_control  \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-action         start_all_protocols     \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget start_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget start_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">puts "Waiting for protocols to start"</p>
        <p class="CodeBlock">after 10000</p>
        <p class="CodeBlock">update idletasks</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Retrieve information about the number of Ethernet sessions that are in each state : up, down, not_started #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Retrieving aggregate statistics for ethernet sessions"</p>
        <p class="CodeBlock">set protocol_status [::ixiangpf::protocol_info  \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-mode           aggregate                   \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-handle         $ethernet_handle            \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget protocol_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget protocol_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">puts "_________________________________________"</p>
        <p class="CodeBlock">puts "Statistics about ethernet sessions state"</p>
        <p class="CodeBlock">puts "   Sessions down: [keylget protocol_status $ethernet_handle.aggregate.sessions_down]"</p>
        <p class="CodeBlock">puts "   Sessions up: [keylget protocol_status $ethernet_handle.aggregate.sessions_up]"</p>
        <p class="CodeBlock">puts "   Sessions not started: [keylget protocol_status $ethernet_handle.aggregate.sessions_not_started]"</p>
        <p class="CodeBlock">puts "   Sessions total: [keylget protocol_status $ethernet_handle.aggregate.sessions_total]"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Retrieve information about the number of Ethernet sessions that are in each state : up, down, not_started     #</p>
        <p class="CodeBlock"># Due to the use of port_filter information will be returned only for the sesions configured on the first port  #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Retrieving aggregate statistics for ethernet session configured on the first port"</p>
        <p class="CodeBlock">set protocol_status [::ixiangpf::protocol_info  \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-mode           aggregate                   \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-handle         $ethernet_handle            \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-port_filter    $port_handle1               \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget protocol_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget protocol_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">puts "______________________________________________________"</p>
        <p class="CodeBlock">puts "Statistics about ethernet sessions state on first port"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">puts "   Sessions down: [keylget protocol_status $ethernet_handle.aggregate.$port_handle1.sessions_down]"</p>
        <p class="CodeBlock">puts "   Sessions up: [keylget protocol_status $ethernet_handle.aggregate.$port_handle1.sessions_up]"</p>
        <p class="CodeBlock">puts "   Sessions not started: [keylget protocol_status $ethernet_handle.aggregate.$port_handle1.sessions_not_started]"</p>
        <p class="CodeBlock">puts "   Sessions total: [keylget protocol_status $ethernet_handle.aggregate.$port_handle1.sessions_total]"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Retrieve the handles of IPv4 sessions that are in each state : up, down, not_started                    #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Retriving handles of IPv4 sessions"</p>
        <p class="CodeBlock">set protocol_status [::ixiangpf::protocol_info  \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-mode           handles                     \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-handle         $ipv4_handle                \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget protocol_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget protocol_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">puts "_________________________"</p>
        <p class="CodeBlock">puts "Handles of IPv4 sessions "</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">puts "   Sessions up handles: "</p>
        <p class="CodeBlock">foreach item [keylget protocol_status $ipv4_handle.handles.sessions_up] {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "    $item"</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">puts "   Sessions total handles: "</p>
        <p class="CodeBlock">foreach item [keylget protocol_status $ipv4_handle.handles.sessions_total] {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "    $item"</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Retrieve the handles of IPv4 sessions that are in each state : up, down, not_started                    #</p>
        <p class="CodeBlock"># Due to the use of port_filter, only the handles of the sessions on the second port will be returned     #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">puts "Retriving handles of IPv4 sessions configured on port 2"</p>
        <p class="CodeBlock">set protocol_status [::ixiangpf::protocol_info  \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-mode           handles                     \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-handle         $ipv4_handle                \</p>
        <p class="CodeBlock" style="margin-left: 25px;">-port_filter    $port_handle2               \</p>
        <p class="CodeBlock">]</p>
        <p class="CodeBlock">if {[keylget protocol_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "FAIL - $test_name - [keylget protocol_status log]"</p>
        <p class="CodeBlock" style="margin-left: 25px;">return 0</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">puts "______________________________________"</p>
        <p class="CodeBlock">puts "Handles of IPv4 sessions, second port "</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">puts "   Sessions up handles: "</p>
        <p class="CodeBlock">foreach item [keylget protocol_status $ipv4_handle.handles.$port_handle2.sessions_up] {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "       $item"</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">puts "   Sessions total handles: "</p>
        <p class="CodeBlock">foreach item [keylget protocol_status $ipv4_handle.handles.$port_handle2.sessions_total] {</p>
        <p class="CodeBlock" style="margin-left: 25px;">puts "       $item"</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">return 1</p>
    </body>
</html>