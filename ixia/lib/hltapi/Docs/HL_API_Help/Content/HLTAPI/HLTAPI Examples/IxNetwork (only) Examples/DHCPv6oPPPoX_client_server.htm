<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxNetwork (only) Examples|PERL_Samples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>BGP (BGP_L2_VPN_sites.tcl)</title>
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxNetwork (only) Examples/DHCPv6oPPPoX_client_server.htm">Open topic with navigation</a>
        </p>
        <h3>DHCPv4 Client/Server: Stacks over PPPoX Configurations (HLP_DHCPv6oPPPoX_client_server.pl)</h3>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Description: #</p>
        <p class="CodeBlock"># The script configures on two back to back ports DHCPv4 Client/Server #</p>
        <p class="CodeBlock"># stacks over PPPoX configurations.#</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Module: #</p>
        <p class="CodeBlock"># The sample was tested on an 10G LSM XM8S module. #</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># Source all libraries in the beginning</p>
        <p class="CodeBlock">use warnings;</p>
        <p class="CodeBlock">use strict;</p>
        <p class="CodeBlock">use bignum;</p>
        <p class="CodeBlock">use Carp;</p>
        <p class="CodeBlock">use Cwd 'abs_path';</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># use lib where the HLPAPI files are located</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">use lib "C:/Program Files (x86)/Ixia/hltapi/4.90.0.67/TclScripts/lib/hltapi/library/common/ixia_hl_lib-7.30";</p>
        <p class="CodeBlock">use lib "C:/Program Files (x86)/Ixia/hltapi/4.90.0.67/TclScripts/lib/hltapi/library/common/ixiangpf/perl";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">use ixiahlt {</p>
        <p class="CodeBlock">IXIA_VERSION =&gt; 'HLTSET166',</p>
        <p class="CodeBlock">TclAutoPath =&gt; ['C:/Program Files (x86)/Ixia/IxOS/6.70.0.33','C:/Program Files (x86)/Ixia/hltapi/4.90.0.67/TclScripts/lib/hltapi/library/common/ixia_hl_lib-7.30','C:/Program Files (x86)/Ixia/hltapi/4.90.0.67/TclScripts/lib', 'C:/Program Files (x86)/Ixia/IxNetwork/7.30.0.225-EB/TclScripts/lib/ixTcl1.0','C:/Program Files (x86)/Ixia/IxNetwork/7.30.0.225-EB/TclScripts/lib/IxTclNetwork'],</p>
        <p class="CodeBlock">};</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">use ixiahlt;</p>
        <p class="CodeBlock">use ixiaixn;</p>
        <p class="CodeBlock">use ixiangpf;</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># Declare the Chassis IP address and the Ports that will be used</p>
        <p class="CodeBlock">my $test_name              = "DHCPoL2TP";</p>
        <p class="CodeBlock">my $chassis                = "10.205.15.75";</p>
        <p class="CodeBlock">my $tcl_server             = "10.205.15.75";</p>
        <p class="CodeBlock">my @port_list              = ("1/7", "1/8");</p>
        <p class="CodeBlock">my $ixnetwork_tcl_server   = "localhost";</p>
        <p class="CodeBlock">my $wait_time              = 5;</p>
        <p class="CodeBlock">my $test_dir_path          = abs_path();</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $PASSED				   = '0';</p>
        <p class="CodeBlock">my $FAILED				   = '1';</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $_result_			   = '';</p>
        <p class="CodeBlock">my @status_keys			   = ();</p>
        <p class="CodeBlock">my $status                 = '';</p>
        <p class="CodeBlock">my $port_handle            = '';</p>
        <p class="CodeBlock">my @portHandleList         = ();</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Function to catch the errors and print it on the screen                      #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">sub catch_error {</p>
        <p class="CodeBlock">if (ixiangpf::status_item('status') != 1) {</p>
        <p class="CodeBlock">print ("\n#################################################### \n");</p>
        <p class="CodeBlock">print ("ERROR: \n$test_name : ". ixiangpf::status_item('log'));</p>
        <p class="CodeBlock">print ("\n#################################################### \n");</p>
        <p class="CodeBlock">return $FAILED</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">sub main {</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># START - Connect to the chassis</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">$_result_ = ixiangpf::connect ({</p>
        <p class="CodeBlock">reset                  =&gt; '1',</p>
        <p class="CodeBlock">device                 =&gt; $chassis,</p>
        <p class="CodeBlock">ixnetwork_tcl_server   =&gt; $ixnetwork_tcl_server,</p>
        <p class="CodeBlock">tcl_server             =&gt; $tcl_server,</p>
        <p class="CodeBlock">port_list              =&gt; \@port_list,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$port_handle = ixiangpf::status_item('port_handle');</p>
        <p class="CodeBlock">$status = ixiangpf::status_item('status');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">foreach my $port (@port_list) {</p>
        <p class="CodeBlock">$port_handle = ixiangpf::status_item("port_handle.$chassis.$port");</p>
        <p class="CodeBlock">push(@portHandleList, $port_handle);</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $port_1 = $portHandleList[0];</p>
        <p class="CodeBlock">my $port_2 = $portHandleList[1];</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print ("\nIxia port handles are @portHandleList ...\n");</p>
        <p class="CodeBlock">print ("End connecting to chassis ...\n");</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># Create the PPP server topology</p>
        <p class="CodeBlock">print "\n\nCreating PPP servers...";</p>
        <p class="CodeBlock">$_result_ = ixiangpf::topology_config ({</p>
        <p class="CodeBlock">topology_name      =&gt; "PPP Servers Topology",</p>
        <p class="CodeBlock">port_handle        =&gt; $port_1,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $topology_1_handle = ixiangpf::status_item('topology_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::topology_config ({</p>
        <p class="CodeBlock">topology_handle              =&gt; "$topology_1_handle",</p>
        <p class="CodeBlock">device_group_name            =&gt; "PPP Servers",</p>
        <p class="CodeBlock">device_group_multiplier      =&gt; "2",</p>
        <p class="CodeBlock">device_group_enabled         =&gt; "1",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $deviceGroup_1_handle = ixiangpf::status_item('device_group_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::interface_config ({</p>
        <p class="CodeBlock">protocol_handle              =&gt; $deviceGroup_1_handle,</p>
        <p class="CodeBlock">mtu                          =&gt; "1500",</p>
        <p class="CodeBlock">vlan                         =&gt; "0",</p>
        <p class="CodeBlock">use_vpn_parameters           =&gt; "0",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $ethernet_1_handle = ixiangpf::status_item('ethernet_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $multivalue_7_status = ixiangpf::multivalue_config ({</p>
        <p class="CodeBlock">pattern                 =&gt; "single_value",</p>
        <p class="CodeBlock">single_value            =&gt; "0",</p>
        <p class="CodeBlock">nest_step               =&gt; "1",</p>
        <p class="CodeBlock">nest_owner              =&gt; "$topology_1_handle",</p>
        <p class="CodeBlock">nest_enabled            =&gt; "0",</p>
        <p class="CodeBlock">overlay_value           =&gt; "1",</p>
        <p class="CodeBlock">overlay_value_step      =&gt; "0",</p>
        <p class="CodeBlock">overlay_index           =&gt; "1",</p>
        <p class="CodeBlock">overlay_index_step      =&gt; "0",</p>
        <p class="CodeBlock">overlay_count           =&gt; "1",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $multivalue_7_handle = ixiangpf::status_item('multivalue_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $multivalue_9_status = ixiangpf::multivalue_config ({</p>
        <p class="CodeBlock">pattern                 =&gt; "single_value",</p>
        <p class="CodeBlock">single_value            =&gt; "0",</p>
        <p class="CodeBlock">nest_step               =&gt; "1",</p>
        <p class="CodeBlock">nest_owner              =&gt; "$topology_1_handle",</p>
        <p class="CodeBlock">nest_enabled            =&gt; "0",</p>
        <p class="CodeBlock">overlay_value           =&gt; "1",</p>
        <p class="CodeBlock">overlay_value_step      =&gt; "0",</p>
        <p class="CodeBlock">overlay_index           =&gt; "2",</p>
        <p class="CodeBlock">overlay_index_step      =&gt; "0",</p>
        <p class="CodeBlock">overlay_count           =&gt; "1",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $multivalue_9_handle = ixiangpf::status_item('multivalue_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::pppox_config ({</p>
        <p class="CodeBlock">port_role                            =&gt; "network",</p>
        <p class="CodeBlock">handle                               =&gt; $ethernet_1_handle,</p>
        <p class="CodeBlock">enable_mru_negotiation               =&gt; "0",</p>
        <p class="CodeBlock">desired_mru_rate                     =&gt; "1492",</p>
        <p class="CodeBlock">enable_max_payload                   =&gt; "0",</p>
        <p class="CodeBlock">server_ipv6_ncp_configuration        =&gt; "clientmay",</p>
        <p class="CodeBlock">server_ipv4_ncp_configuration        =&gt; "clientmay",</p>
        <p class="CodeBlock">num_sessions                         =&gt; "5",</p>
        <p class="CodeBlock">auth_req_timeout                     =&gt; "10",</p>
        <p class="CodeBlock">config_req_timeout                   =&gt; "10",</p>
        <p class="CodeBlock">echo_req                             =&gt; "0",</p>
        <p class="CodeBlock">echo_rsp                             =&gt; "1",</p>
        <p class="CodeBlock">ip_cp                                =&gt; "ipv6_cp",</p>
        <p class="CodeBlock">ipcp_req_timeout                     =&gt; "10",</p>
        <p class="CodeBlock">max_auth_req                         =&gt; "20",</p>
        <p class="CodeBlock">max_terminate_req                    =&gt; "3",</p>
        <p class="CodeBlock">password                             =&gt; "pwd",</p>
        <p class="CodeBlock">username                             =&gt; "user",</p>
        <p class="CodeBlock">mode                                 =&gt; "add",</p>
        <p class="CodeBlock">auth_mode                            =&gt; "pap",</p>
        <p class="CodeBlock">echo_req_interval                    =&gt; "10",</p>
        <p class="CodeBlock">max_configure_req                    =&gt; "3",</p>
        <p class="CodeBlock">max_ipcp_req                         =&gt; "3",</p>
        <p class="CodeBlock">ac_name                              =&gt; "ixia",</p>
        <p class="CodeBlock">enable_domain_group_map              =&gt; "0",</p>
        <p class="CodeBlock">enable_server_signal_iwf             =&gt; "0",</p>
        <p class="CodeBlock">enable_server_signal_loop_char       =&gt; "0",</p>
        <p class="CodeBlock">enable_server_signal_loop_encap      =&gt; "0",</p>
        <p class="CodeBlock">enable_server_signal_loop_id         =&gt; "0",</p>
        <p class="CodeBlock">ipv6_pool_prefix_len                 =&gt; "48",</p>
        <p class="CodeBlock">ppp_local_ip_step                    =&gt; "0.0.0.1",</p>
        <p class="CodeBlock">ppp_local_iid_step                   =&gt; "1",</p>
        <p class="CodeBlock">ppp_peer_iid_step                    =&gt; "1",</p>
        <p class="CodeBlock">ppp_peer_ip_step                     =&gt; "0.0.0.1",</p>
        <p class="CodeBlock">send_dns_options                     =&gt; "$multivalue_7_handle",</p>
        <p class="CodeBlock">server_dns_options                   =&gt; "disable_extension",</p>
        <p class="CodeBlock">server_dns_primary_address           =&gt; "10.10.10.10",</p>
        <p class="CodeBlock">server_dns_secondary_address         =&gt; "11.11.11.11",</p>
        <p class="CodeBlock">server_netmask_options               =&gt; "disable_extension",</p>
        <p class="CodeBlock">server_netmask                       =&gt; "255.255.255.0",</p>
        <p class="CodeBlock">server_wins_options                  =&gt; "disable_extension",</p>
        <p class="CodeBlock">server_wins_primary_address          =&gt; "10.10.10.10",</p>
        <p class="CodeBlock">server_wins_secondary_address        =&gt; "11.11.11.11",</p>
        <p class="CodeBlock">accept_any_auth_value                =&gt; "$multivalue_9_handle",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $pppoxserver_1_handle = ixiangpf::status_item('pppox_server_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nDONE creating PPP servers.\n\n";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># Create PPP Clients</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nCreating PPP clients...\n";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::topology_config ({</p>
        <p class="CodeBlock">topology_name      =&gt; "PPP Clients Topology",</p>
        <p class="CodeBlock">port_handle        =&gt; $port_2,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $topology_2_handle = ixiangpf::status_item('topology_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::topology_config ({</p>
        <p class="CodeBlock">topology_handle              =&gt; $topology_2_handle,</p>
        <p class="CodeBlock">device_group_name            =&gt; "PPP Clients",</p>
        <p class="CodeBlock">device_group_multiplier      =&gt; "5",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $deviceGroup_2_handle = ixiangpf::status_item('device_group_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $multivalue_12_status = ixiangpf::multivalue_config ({</p>
        <p class="CodeBlock">pattern                      =&gt; "repeatable_random",</p>
        <p class="CodeBlock">nest_step                    =&gt; "1",</p>
        <p class="CodeBlock">nest_owner                   =&gt; "$topology_2_handle",</p>
        <p class="CodeBlock">nest_enabled                 =&gt; "0",</p>
        <p class="CodeBlock">repeatable_random_seed       =&gt; "1",</p>
        <p class="CodeBlock">repeatable_random_count      =&gt; "4000000",</p>
        <p class="CodeBlock">repeatable_random_fixed      =&gt; "5",</p>
        <p class="CodeBlock">repeatable_random_mask       =&gt; "25",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $multivalue_12_handle = ixiangpf::status_item('multivalue_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::pppox_config ({</p>
        <p class="CodeBlock">port_role                            =&gt; "access",</p>
        <p class="CodeBlock">handle                               =&gt; $deviceGroup_2_handle,</p>
        <p class="CodeBlock">unlimited_redial_attempts            =&gt; "0",</p>
        <p class="CodeBlock">enable_mru_negotiation               =&gt; "0",</p>
        <p class="CodeBlock">desired_mru_rate                     =&gt; "1492",</p>
        <p class="CodeBlock">max_payload                          =&gt; "1700",</p>
        <p class="CodeBlock">enable_max_payload                   =&gt; "0",</p>
        <p class="CodeBlock">client_ipv6_ncp_configuration        =&gt; "learned",</p>
        <p class="CodeBlock">client_ipv4_ncp_configuration        =&gt; "learned",</p>
        <p class="CodeBlock">lcp_enable_accm                      =&gt; "0",</p>
        <p class="CodeBlock">lcp_accm                             =&gt; "ffffffff",</p>
        <p class="CodeBlock">ac_select_mode                       =&gt; "first_responding",</p>
        <p class="CodeBlock">auth_req_timeout                     =&gt; "10",</p>
        <p class="CodeBlock">config_req_timeout                   =&gt; "10",</p>
        <p class="CodeBlock">echo_req                             =&gt; "0",</p>
        <p class="CodeBlock">echo_rsp                             =&gt; "1",</p>
        <p class="CodeBlock">ip_cp                                =&gt; "ipv6_cp",</p>
        <p class="CodeBlock">ipcp_req_timeout                     =&gt; "10",</p>
        <p class="CodeBlock">max_auth_req                         =&gt; "20",</p>
        <p class="CodeBlock">max_padi_req                         =&gt; "5",</p>
        <p class="CodeBlock">max_padr_req                         =&gt; "5",</p>
        <p class="CodeBlock">max_terminate_req                    =&gt; "3",</p>
        <p class="CodeBlock">padi_req_timeout                     =&gt; "10",</p>
        <p class="CodeBlock">padr_req_timeout                     =&gt; "10",</p>
        <p class="CodeBlock">password                             =&gt; "pwd",</p>
        <p class="CodeBlock">chap_secret                          =&gt; "secret",</p>
        <p class="CodeBlock">username                             =&gt; "user",</p>
        <p class="CodeBlock">chap_name                            =&gt; "user",</p>
        <p class="CodeBlock">mode                                 =&gt; "add",</p>
        <p class="CodeBlock">auth_mode                            =&gt; "pap",</p>
        <p class="CodeBlock">echo_req_interval                    =&gt; "10",</p>
        <p class="CodeBlock">max_configure_req                    =&gt; "3",</p>
        <p class="CodeBlock">max_ipcp_req                         =&gt; "3",</p>
        <p class="CodeBlock">actual_rate_downstream               =&gt; "10",</p>
        <p class="CodeBlock">actual_rate_upstream                 =&gt; "10",</p>
        <p class="CodeBlock">data_link                            =&gt; "ethernet",</p>
        <p class="CodeBlock">enable_domain_group_map              =&gt; "0",</p>
        <p class="CodeBlock">enable_client_signal_iwf             =&gt; "0",</p>
        <p class="CodeBlock">enable_client_signal_loop_char       =&gt; "0",</p>
        <p class="CodeBlock">enable_client_signal_loop_encap      =&gt; "0",</p>
        <p class="CodeBlock">enable_client_signal_loop_id         =&gt; "0",</p>
        <p class="CodeBlock">intermediate_agent_encap1            =&gt; "untagged_eth",</p>
        <p class="CodeBlock">intermediate_agent_encap2            =&gt; "na",</p>
        <p class="CodeBlock">ppp_local_iid                        =&gt; "0:11:11:11:0:0:0:1",</p>
        <p class="CodeBlock">ppp_local_ip                         =&gt; "1.1.1.1",</p>
        <p class="CodeBlock">redial_timeout                       =&gt; "10",</p>
        <p class="CodeBlock">service_type                         =&gt; "any",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $pppoxclient_1_handle = ixiangpf::status_item('pppox_client_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $multivalue_13_status = ixiangpf::multivalue_config ({</p>
        <p class="CodeBlock">pattern                =&gt; "distributed",</p>
        <p class="CodeBlock">distributed_value      =&gt; "1",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $multivalue_13_handle = ixiangpf::status_item('multivalue_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $multivalue_14_status = ixiangpf::multivalue_config ({</p>
        <p class="CodeBlock">pattern                =&gt; "distributed",</p>
        <p class="CodeBlock">distributed_value      =&gt; "10",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $multivalue_14_handle = ixiangpf::status_item('multivalue_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $multivalue_15_status = ixiangpf::multivalue_config ({</p>
        <p class="CodeBlock">pattern                =&gt; "distributed",</p>
        <p class="CodeBlock">distributed_value      =&gt; "10",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $multivalue_15_handle = ixiangpf::status_item('multivalue_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::pppox_config ({</p>
        <p class="CodeBlock">port_role                                =&gt; "access",</p>
        <p class="CodeBlock">handle                                   =&gt; "/globals",</p>
        <p class="CodeBlock">mode                                     =&gt; "add",</p>
        <p class="CodeBlock">ipv6_global_address_mode                 =&gt; "icmpv6",</p>
        <p class="CodeBlock">ra_timeout                               =&gt; "30",</p>
        <p class="CodeBlock">create_interfaces                        =&gt; "0",</p>
        <p class="CodeBlock">attempt_rate                             =&gt; "200",</p>
        <p class="CodeBlock">attempt_max_outstanding                  =&gt; "400",</p>
        <p class="CodeBlock">attempt_interval                         =&gt; "1000",</p>
        <p class="CodeBlock">attempt_enabled                          =&gt; "1",</p>
        <p class="CodeBlock">attempt_scale_mode                       =&gt; "port",</p>
        <p class="CodeBlock">disconnect_rate                          =&gt; "200",</p>
        <p class="CodeBlock">disconnect_max_outstanding               =&gt; "400",</p>
        <p class="CodeBlock">disconnect_interval                      =&gt; "1000",</p>
        <p class="CodeBlock">disconnect_enabled                       =&gt; "1",</p>
        <p class="CodeBlock">disconnect_scale_mode                    =&gt; "port",</p>
        <p class="CodeBlock">enable_session_lifetime                  =&gt; "0",</p>
        <p class="CodeBlock">min_lifetime                             =&gt; "$multivalue_13_handle",</p>
        <p class="CodeBlock">max_lifetime                             =&gt; "$multivalue_14_handle",</p>
        <p class="CodeBlock">enable_session_lifetime_restart          =&gt; "0",</p>
        <p class="CodeBlock">max_session_lifetime_restarts            =&gt; "$multivalue_15_handle",</p>
        <p class="CodeBlock">unlimited_session_lifetime_restarts      =&gt; "0",</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nDONE creating and configuring PPP clients.\n\n";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># DHCPv6 Client Stack</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::emulation_dhcp_group_config    ({</p>
        <p class="CodeBlock">handle                      	=&gt; $pppoxclient_1_handle         ,</p>
        <p class="CodeBlock">mode                    		=&gt; 'create'        ,</p>
        <p class="CodeBlock">dhcp_range_ip_type              =&gt; 'ipv6'        ,</p>
        <p class="CodeBlock">dhcp6_range_duid_enterprise_id  =&gt; '15'        ,</p>
        <p class="CodeBlock">dhcp6_range_duid_type           =&gt; 'duid_en'        ,</p>
        <p class="CodeBlock">dhcp6_range_duid_vendor_id      =&gt; '20'        ,</p>
        <p class="CodeBlock">dhcp6_range_duid_vendor_id_increment    =&gt; '2'        ,</p>
        <p class="CodeBlock">dhcp_range_renew_timer          =&gt; '10'        ,</p>
        <p class="CodeBlock">dhcp6_use_pd_global_address     =&gt; '1'        ,</p>
        <p class="CodeBlock">protocol_name                	=&gt; 'Ixia DHCPv6'    ,</p>
        <p class="CodeBlock">dhcp6_range_ia_type        		=&gt; 'iana_iapd'        ,</p>
        <p class="CodeBlock">dhcp6_range_ia_t2            	=&gt; '40000'        ,</p>
        <p class="CodeBlock">dhcp6_range_ia_t1            	=&gt; '30000'        ,</p>
        <p class="CodeBlock">dhcp6_range_ia_id_increment     =&gt; '2'        ,</p>
        <p class="CodeBlock">dhcp6_range_ia_id            	=&gt; '20'        ,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $dhcpclient_1_handle = ixiangpf::status_item('dhcpv6client_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nDONE creating and configuring DHCPv6 clients.\n\n";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># DHCPv6 Server Stack</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::emulation_dhcp_server_config  ({</p>
        <p class="CodeBlock">handle                             =&gt; $pppoxserver_1_handle            ,</p>
        <p class="CodeBlock">mode                    		   =&gt; 'create'                ,</p>
        <p class="CodeBlock">dhcp6_ia_type                      =&gt; 'iana_iapd'                ,</p>
        <p class="CodeBlock">protocol_name                      =&gt; 'Ixia DHCPv6 Server'        ,</p>
        <p class="CodeBlock">ip_dns1                            =&gt; '11:0:0:0:0:0:0:1'            ,</p>
        <p class="CodeBlock">ip_dns2                            =&gt; '22:0:0:0:0:0:0:1'            ,</p>
        <p class="CodeBlock">ip_version                         =&gt; '6'                    ,</p>
        <p class="CodeBlock">ipaddress_count                    =&gt; '1'                    ,</p>
        <p class="CodeBlock">ipaddress_pool                     =&gt; '5:a::1'                ,</p>
        <p class="CodeBlock">ipaddress_pool_prefix_length       =&gt; '64'                    ,</p>
        <p class="CodeBlock">lease_time                         =&gt; '86400'                ,</p>
        <p class="CodeBlock">pool_address_increment             =&gt; '0:0:0:0:0:0:0:1'            ,</p>
        <p class="CodeBlock">start_pool_prefix                  =&gt; '55:aa::'                ,</p>
        <p class="CodeBlock">pool_prefix_increment              =&gt; '1:0:0:0:0:0:0:0'            ,</p>
        <p class="CodeBlock">pool_prefix_size                   =&gt; '1'                    ,</p>
        <p class="CodeBlock">prefix_length                      =&gt; '64'                    ,</p>
        <p class="CodeBlock">custom_renew_time                  =&gt; '34560'                              ,</p>
        <p class="CodeBlock">custom_rebind_time                 =&gt; '55296'                              ,</p>
        <p class="CodeBlock">use_custom_times                   =&gt; '1'                                  ,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">my $dhcp_server_1_handle = ixiangpf::status_item('dhcpv6server_handle');</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">sleep(3);</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nDONE creating and configuring DHCPv6 servers.\n\n";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::test_control({</p>
        <p class="CodeBlock">action	=&gt;	'start_protocol',</p>
        <p class="CodeBlock">handle	=&gt;	$deviceGroup_1_handle,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">sleep(20);</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::test_control({</p>
        <p class="CodeBlock">action	=&gt;	'start_protocol',</p>
        <p class="CodeBlock">handle	=&gt;	$pppoxclient_1_handle,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">$_result_ = ixiangpf::test_control({</p>
        <p class="CodeBlock">action	=&gt;	'start_protocol',</p>
        <p class="CodeBlock">handle	=&gt;	$dhcpclient_1_handle,</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">sleep(20);</p>
        <p class="CodeBlock">$_result_ = ixiangpf::emulation_dhcp_stats({</p>
        <p class="CodeBlock">handle				=&gt;	$dhcpclient_1_handle,</p>
        <p class="CodeBlock">mode				=&gt;	'aggregate_stats',</p>
        <p class="CodeBlock">dhcp_version		=&gt;	'dhcp6',</p>
        <p class="CodeBlock">execution_timeout	=&gt;	'60',</p>
        <p class="CodeBlock">});</p>
        <p class="CodeBlock">&amp;catch_error();</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">@status_keys = ixiangpf::status_item_keys();</p>
        <p class="CodeBlock">print "\nThe aggragted DHCPv4 client statistics are:\n";</p>
        <p class="CodeBlock">my $client_aggregate_stats = ixiangpf::get_result_hash();</p>
        <p class="CodeBlock">ixiangpf::PrintHash($client_aggregate_stats);</p>
        <p class="CodeBlock">print "\n";</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">return $PASSED;</p>
        <p class="CodeBlock">}</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">my $test_result = main(@ARGV);</p>
        <p class="CodeBlock">print "\nTest execution complete.\nStatus: $test_result\n";</p>
    </body>
</html>