<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxNetwork (only) Examples|PYTHON_Samples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>DHCP Client Server (HLPy_DHCP_client_server.py)</title>
        <link href="../../../Resources/Stylesheets/Advanced_Information_Manager.css" rel="stylesheet" type="text/css" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxNetwork (only) Examples/DHCP_client_server.htm">Open topic with navigation</a>
        </p>
        <h3>DHCP Client Server (DHCP_client_server.py)</h3>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Description:</p>
        <p class="CodeBlock">#    This script configures a scenario with 2 topologies:     #</p>
        <p class="CodeBlock"># - Topology 1 with LAC and DHCPv6 Client</p>
        <p class="CodeBlock"># - Topology 2 with LNS and DHCPv6 Server</p>
        <p class="CodeBlock"># The script does:   #</p>
        <p class="CodeBlock"># - start/stop protocol</p>
        <p class="CodeBlock"># - collect and display DHCP statistics</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Module:</p>
        <p class="CodeBlock"># The sample was tested on a 10GE LSM XM3 module.</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">import sys, os</p>
        <p class="CodeBlock">import time, re</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># Append paths to python APIs</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># sys.path.append('/path/to/hltapi/library/common/ixiangpf/python')</p>
        <p class="CodeBlock"># sys.path.append('/path/to/ixnetwork/api/python')</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">from ixiatcl import IxiaTcl</p>
        <p class="CodeBlock">from ixiahlt import IxiaHlt</p>
        <p class="CodeBlock">from ixiangpf import IxiaNgpf</p>
        <p class="CodeBlock">from ixiaerror import IxiaError</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ixiatcl = IxiaTcl()</p>
        <p class="CodeBlock">ixiahlt = IxiaHlt(ixiatcl)</p>
        <p class="CodeBlock">ixiangpf = IxiaNgpf(ixiahlt)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">try:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('', {})</p>
        <p class="CodeBlock">except (NameError,):</p>
        <p class="CodeBlock" style="margin-left: 25px;">def ixnHLT_errorHandler(cmd, retval):</p>
        <p class="CodeBlock" style="margin-left: 50px;">global ixiatcl</p>
        <p class="CodeBlock" style="margin-left: 50px;">err = ixiatcl.tcl_error_info()</p>
        <p class="CodeBlock" style="margin-left: 50px;">log = retval['log']</p>
        <p class="CodeBlock" style="margin-left: 50px;">additional_info = '&gt; command: %s\n&gt; tcl errorInfo: %s\n&gt; log: %s' % (cmd, err, log)</p>
        <p class="CodeBlock" style="margin-left: 50px;">raise IxiaError(IxiaError.COMMAND_FAIL, additional_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">def printDict(obj, nested_level=0, output=sys.stdout):</p>
        <p class="CodeBlock" style="margin-left: 25px;">spacing = '   '</p>
        <p class="CodeBlock" style="margin-left: 25px;">if type(obj) == dict:</p>
        <p class="CodeBlock" style="margin-left: 50px;">print &gt;&gt; output, '%s' % ((nested_level) * spacing)</p>
        <p class="CodeBlock" style="margin-left: 50px;">for k, v in obj.items():</p>
        <p class="CodeBlock" style="margin-left: 75px;">if hasattr(v, '__iter__'):</p>
        <p class="CodeBlock" style="margin-left: 100px;">print &gt;&gt; output, '%s%s:' % ((nested_level + 1) * spacing, k)</p>
        <p class="CodeBlock" style="margin-left: 75px;">printDict(v, nested_level + 1, output)</p>
        <p class="CodeBlock" style="margin-left: 75px;">else:</p>
        <p class="CodeBlock" style="margin-left: 100px;">print &gt;&gt; output, '%s%s: %s' % ((nested_level + 1) * spacing, k, v)</p>
        <p class="CodeBlock" style="margin-left: 50px;">print &gt;&gt; output, '%s' % (nested_level * spacing)</p>
        <p class="CodeBlock" style="margin-left: 25px;">elif type(obj) == list:</p>
        <p class="CodeBlock" style="margin-left: 50px;">print &gt;&gt; output, '%s[' % ((nested_level) * spacing)</p>
        <p class="CodeBlock" style="margin-left: 50px;">for v in obj:</p>
        <p class="CodeBlock" style="margin-left: 75px;">if hasattr(v, '__iter__'):</p>
        <p class="CodeBlock" style="margin-left: 100px;">printDict(v, nested_level + 1, output)</p>
        <p class="CodeBlock" style="margin-left: 75px;">else:</p>
        <p class="CodeBlock" style="margin-left: 100px;">print &gt;&gt; output, '%s%s' % ((nested_level + 1) * spacing, v)</p>
        <p class="CodeBlock" style="margin-left: 50px;">print &gt;&gt; output, '%s]' % ((nested_level) * spacing)</p>
        <p class="CodeBlock" style="margin-left: 25px;">else:</p>
        <p class="CodeBlock" style="margin-left: 50px;">print &gt;&gt; output, '%s%s' % (nested_level * spacing, obj)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">chassis_ip              = '10.205.15.184'</p>
        <p class="CodeBlock">ixnetwork_tcl_server    = 'localhost'</p>
        <p class="CodeBlock">port_list               = '9/1 9/9'</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># CONNECT AND PORT HANDLES</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">print('\n\nConnect to IxNetwork Tcl Server and get port handles...\n\n')</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">connect_status = ixiangpf.connect(</p>
        <p class="CodeBlock" style="margin-left: 25px;">reset                  = 1,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device                 = chassis_ip,</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_list              = port_list,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnetwork_tcl_server   = ixnetwork_tcl_server,</p>
        <p class="CodeBlock" style="margin-left: 25px;">tcl_server             = chassis_ip,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if connect_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('connect', connect_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">port_handle = connect_status['vport_list']</p>
        <p class="CodeBlock">port_0 = port_handle.split(' ')[0]</p>
        <p class="CodeBlock">port_1 = port_handle.split(' ')[1]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">####################### Create Topologies ###################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_status = ixiangpf.topology_config(</p>
        <p class="CodeBlock">topology_name           =   "DHCPv4 Client"                    ,</p>
        <p class="CodeBlock">port_handle             =   port_0                             ,</p>
        <p class="CodeBlock">device_group_multiplier =    '10'                                 ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if topology_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('topology_config', topology_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "Configured topology 1"</p>
        <p class="CodeBlock">deviceGroup_first_handle = topology_status ['device_group_handle']</p>
        <p class="CodeBlock">top_1 = topology_status['topology_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">####################### Topology 2 ###################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_status = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name            =	"DHCPv4 Server"                     ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle              =	port_1    	                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier  =	 	'1'		                        ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if topology_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('topology_config', topology_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "Configured topology 2"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">deviceGroup_second_handle = topology_status['device_group_handle']</p>
        <p class="CodeBlock">top_handle = topology_status['topology_handle']</p>
        <p class="CodeBlock">top_2 = topology_status['topology_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock" style="text-align: left;"># Configure dhcp_client and server #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">############## configure dhcp client ##############################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_status = ixiangpf.emulation_dhcp_group_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle      =  deviceGroup_first_handle                         ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name 		=		"Dhcp_client"                     ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mac_addr  =   '0000.0000.ffff'                                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mac_addr_step		=		'00.00.00.00.00.02'	                  ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">use_rapid_commit = '0'                                              ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">enable_stateless = '0'                                              ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">num_sessions     =  '30'                                           ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id		=				'100'			                      ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_step		=			'20'			                      ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority		=		'2'			                  ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp4_broadcast   = '1'                                            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_range_use_first_server = '1'                                   ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_range_renew_timer = '20'                                       ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_range_ip_type       =      'ipv4'                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vendor_id                =          'any'                          ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_group_config', dhcp_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_client = dhcp_status['dhcpv4client_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_status = ixiangpf.emulation_dhcp_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle 			=	dhcp_client                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode			=		'modify'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">release_rate	=			'65'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">msg_timeout		=		'5'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">request_rate	=			'7'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">retry_count		=		'2'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">interval_stop	=			'5'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">interval_start		=		'6'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">min_lifetime		=		'10'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">max_restarts		=		'20'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">max_lifetime		=		'30'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">enable_restart		=		'1'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">enable_lifetime		=	'0'	                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">client_port             =       '119'                              ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">skip_release_on_stop    =       '1'                                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">renew_on_link_up        =       '1'                                ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_config', dhcp_status)</p>
        <p class="CodeBlock" style="margin-left: 25px;">&#160;</p>
        <p class="CodeBlock" style="margin-left: 25px;">############## configure dhcp server ##############################</p>
        <p class="CodeBlock" style="margin-left: 25px;">&#160;</p>
        <p class="CodeBlock">dhcp_status = ixiangpf.emulation_dhcp_server_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle				=	deviceGroup_second_handle              ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">count				=	'5'			                            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">lease_time             =   '86400'                                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_count		=	'10'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_dns1		=		'10.10.10.10'		                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_dns1_step	=			'0.0.0.1'			                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_dns2		=		'20.20.20.20'		                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_dns2_step	=			'0.0.1.0'			                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool		=		'20.20.100.100'	                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool_step		=	'0.0.0.1'			                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool_prefix_length =		'12'			                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool_prefix_step	=	'1'			                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_offer_router_address	=	'20.20.200.200'	                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_offer_router_address_step 	= '0.0.0.1'			            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_address		=		'5.5.5.5'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_step		=		'0.0.0.1'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_gateway		=		'6.6.6.6'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_gateway_step		=	'0.0.0.1'			                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_prefix_length	=		'12'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ip_prefix_step		=		'1'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">local_mac              =         '0000.0001.0001'                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">local_mac_outer_step   =       '0000.0001.0000'                   ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">local_mtu		=		'800'			                            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id			=		'100'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_step		=		'10'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name		=	"DHCP4 Server modified"                   ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">use_rapid_commit		=	'1'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">pool_address_increment	=	'30.30.30.30'		                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">pool_address_increment_step =		'0.0.0.2'			            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ping_timeout		=		'10'			                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ping_check		=		'1'			                            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">echo_relay_info     =       '1'                                   ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">enable_resolve_gateway	=	'0'								  	,</p>
        <p class="CodeBlock" style="margin-left: 25px;">manual_gateway_mac	=	    '00bd.2340.0000'					  	,</p>
        <p class="CodeBlock" style="margin-left: 25px;">manual_gateway_mac_step =	'0000.0000.0001'					  	,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_config', dhcp_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_server = dhcp_status['dhcpv4server_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Modify dhcp server #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_status = ixiangpf.emulation_dhcp_server_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle			=			dhcp_server    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode      = 'modify'                          ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">lease_time  =               '86400'           ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_count		=	'10'		        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool		=		'100.1.0.2'       ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool_step	=	'0.1.0.0'         ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipaddress_pool_prefix_length =	'16'          ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name		=		"Dhcpv4_Server" ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_config', dhcp_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># start dhcp_client and server #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">print "Starting dhcp server...."</p>
        <p class="CodeBlock">control_status = ixiangpf.emulation_dhcp_server_control(</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_handle = 			dhcp_server 		                           ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">action = 'collect'								                           ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if control_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_control', control_status)</p>
        <p class="CodeBlock">print "Starting dhcp client...."</p>
        <p class="CodeBlock">control_status = ixiangpf.emulation_dhcp_control(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle 			=	dhcp_client                            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">action = 'bind'						                            ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if control_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_control', control_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">time.sleep(30)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Retrieve statistics                                 #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">print "Retrieve statistics"</p>
        <p class="CodeBlock">dhcp_stats_0 = ixiangpf.emulation_dhcp_server_stats(</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle   = port_1	                                           ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">action 	= 'collect'				                                   ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">execution_timeout = '60'                                              ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_stats_0['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_stats', dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nDHCP Server aggregate statistics:\n\n"</p>
        <p class="CodeBlock">printDict(dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_stats_0 = ixiangpf.emulation_dhcp_server_stats(</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_handle = dhcp_server	                                           ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">action =	'collect'				                                       ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">execution_timeout = '60'                                                  ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_stats_0['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_stats', dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nDHCP Server per session statistics:\n\n"</p>
        <p class="CodeBlock">printDict(dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_stats_0 = ixiangpf.emulation_dhcp_stats(</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle  = port_0	                                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode         = 'aggregate_stats'					            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_version =	'dhcp4'				                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">execution_timeout = '60'                                       ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_stats_0['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_stats', dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nDHCP Client aggregate statistics:\n\n"</p>
        <p class="CodeBlock">printDict(dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_stats_0 = ixiangpf.emulation_dhcp_stats(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle  = dhcp_client	                                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode     =     'aggregate_stats'					                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_version =	'dhcp4'				                            ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">execution_timeout = '60'                                           ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_stats_0['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_stats', dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nDHCP Client aggregate statistics:\n\n"</p>
        <p class="CodeBlock">printDict(dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_stats_0 = ixiangpf.emulation_dhcp_stats(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle   = dhcp_client	                                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode       =    'session'					                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_version  =	'dhcp4'				                        ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">execution_timeout  = '60'                                       ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_stats_0['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_stats', dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nDHCP Client per session statistics:\n\n"</p>
        <p class="CodeBlock">printDict(dhcp_stats_0)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># Stop protocols        #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">############ stop server ################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "Stopping server...."</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">control_status = ixiangpf.emulation_dhcp_server_control(</p>
        <p class="CodeBlock" style="margin-left: 25px;">dhcp_handle 	=		dhcp_server 		                           ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">action = 'abort'								                           ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if control_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_control', control_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">############ stop all protocol on port 1 ################</p>
        <p class="CodeBlock">stop_item_status = ixiangpf.test_control(</p>
        <p class="CodeBlock" style="margin-left: 25px;">action	= 'stop_protocol'		                                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle	= deviceGroup_second_handle                              ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if stop_item_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('test_control', stop_item_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">time.sleep(10)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################ stop client ###################################</p>
        <p class="CodeBlock">print "Stopping client...."</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">control_status = ixiangpf.emulation_dhcp_control(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle 			=	dhcp_client                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">action = 'abort'						                             ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if control_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_control', control_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">stop_item_status = ixiangpf.test_control(</p>
        <p class="CodeBlock" style="margin-left: 25px;">action	= 'stop_protocol'		                                    ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle	= deviceGroup_first_handle                             ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if stop_item_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('test_control', stop_item_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">time.sleep(1)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># delete topology                                                              #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">time.sleep(10)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">######### delete dhcp client ###########################</p>
        <p class="CodeBlock">print "Deleting dhcp server topology..."</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_status = ixiangpf.emulation_dhcp_server_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle 		=		dhcp_server                                ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode			=		'reset'	                                    ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_server_config', dhcp_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">########### delete dhcp server ############################</p>
        <p class="CodeBlock">print "Deleting dhcp client topology..."</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dhcp_status = ixiangpf.emulation_dhcp_group_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle 			=	dhcp_client                               ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode			=		'reset'	                                   ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dhcp_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('emulation_dhcp_group_config', dhcp_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">############## delete both topology ###################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_status = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode                    =   'destroy'                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name           =   "DHCPv4 Client"                     ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_handle          =   top_1                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier  =   '10'                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_enabled     =   '0'                                  ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_handle      =   deviceGroup_first_handle          ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if topology_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('topology_config', topology_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_status = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode                    =   'destroy'                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name           =   "DHCPv4 Server"                     ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_handle         =    top_2                             ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier =    '10'                                 ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_enabled    =    '0'                                  ,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_handle     =    deviceGroup_second_handle         ,</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if topology_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('topology_config', topology_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"># CLEANUP SESSION #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">cleanup_status = ixiangpf.cleanup_session(reset='1')</p>
        <p class="CodeBlock">if cleanup_status['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ixnHLT_errorHandler('cleanup_session', cleanup_status)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print('\n\nIxNetwork session is closed...\n\n')</p>
        <p class="CodeBlock">print('!!! TEST is PASSED !!!')</p>
    </body>
</html>