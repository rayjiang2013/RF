<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxOS Examples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>Capture (Capture_b2b_simple.tcl)</title>
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxOS Examples/Capture_b2b_simple.htm">Open topic with navigation</a>
        </p>
        <h3><a name="top"></a>Capture_b2b_simple</h3>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546692"></a>
                                                                               #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546693"></a>
          # Description: #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546694"></a>
          # This sample creates an IPv4 stream with increasing frame length. #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546695"></a>
          # Configures buffers triggers and filters to capture only frames within a #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546696"></a>
          # a small length range. #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546697"></a>
          # Starts the capture then it starts the streams, collects statistics and #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546698"></a>
          # returns the capture buffer in a keyed list. #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546699"></a>
                                                                               #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546700"></a>
          # Module: #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546701"></a>
          # The sample was tested on a LM1000STXS4 module. #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546702"></a>
                                                                               #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546703"></a>
          ################################################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546704"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546705"></a>
          package require Ixia</p>
        <p class="CodeBlock"><a name="0_pgfId-3546706"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546707"></a>
          set test_name [info script]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546708"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546709"></a>
          set chassisIP sylvester</p>
        <p class="CodeBlock"><a name="0_pgfId-3546710"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546711"></a>
          ########</p>
        <p class="CodeBlock"><a name="0_pgfId-3546712"></a>
          # IpV4 #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546713"></a>
          ########</p>
        <p class="CodeBlock"><a name="0_pgfId-3546714"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546715"></a>
          set ipV4_port_list "3/1 3/2"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546716"></a>
          set ipV4_ixia_list "1.1.1.2 1.1.1.1"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546717"></a>
          set ipV4_gateway_list "1.1.1.1 1.1.1.2"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546718"></a>
          set ipV4_netmask_list "255.255.255.0 255.255.255.0"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546719"></a>
          set ipV4_mac_list "0000.debb.0001 0000.debb.0002"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546720"></a>
          set ipV4_version_list "4 4"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546721"></a>
          set ipV4_autoneg_list "1 1"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546722"></a>
          set ipV4_duplex_list "full full"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546723"></a>
          set ipV4_speed_list "ether100 ether100"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546724"></a>
          set ipV4_port_rx_mode "capture capture"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546725"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546726"></a>
          #################################################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546727"></a>
                               START TEST #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546728"></a>
          #################################################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546729"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546730"></a>
          # Connect to the chassis,reset to factory defaults and take ownership</p>
        <p class="CodeBlock"><a name="0_pgfId-3546731"></a>
          set connect_status [ixia::connect \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546732"></a>
                  -reset \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546733"></a>
                  -device $chassisIP \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546734"></a>
                  -port_list $ipV4_port_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546735"></a>
                  -username ixiaApiUser ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546736"></a>
          if {[keylget connect_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546737"></a>
              return "FAIL - $test_name - [keylget connect_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546738"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546739"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546740"></a>
          set port_handle_tx [keylget connect_status \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546741"></a>
                  port_handle.$chassisIP.[lindex $ipV4_port_list 0]]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546742"></a>
          set port_handle_rx [keylget connect_status \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546743"></a>
                  port_handle.$chassisIP.[lindex $ipV4_port_list 1]]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546744"></a>
          set port_handle [list $port_handle_tx $port_handle_rx]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546745"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546746"></a>
          ########################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546747"></a>
          # Configure interface in the test #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546748"></a>
          # IPv4 #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546749"></a>
          ########################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546750"></a>
          set interface_status [ixia::interface_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546751"></a>
                  -port_handle $port_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546752"></a>
                  -intf_ip_addr $ipV4_ixia_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546753"></a>
                  -gateway $ipV4_gateway_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546754"></a>
                  -netmask $ipV4_netmask_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546755"></a>
                  -autonegotiation $ipV4_autoneg_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546756"></a>
                  -duplex $ipV4_duplex_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546757"></a>
                  -src_mac_addr $ipV4_mac_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546758"></a>
                  -speed $ipV4_speed_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546759"></a>
                  -port_rx_mode $ipV4_port_rx_mode \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546760"></a>
                  ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546761"></a>
          if {[keylget interface_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546762"></a>
              return "FAIL - $test_name - [keylget interface_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546763"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546764"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546765"></a>
          ##################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546766"></a>
          # Configure streams on TX port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546767"></a>
          ##################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546768"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546769"></a>
          # Configure the streams on the first IpV4 port</p>
        <p class="CodeBlock"><a name="0_pgfId-3546770"></a>
          set traffic_status [ixia::traffic_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546771"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546772"></a>
                  -port_handle $port_handle_tx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546773"></a>
                  -l3_protocol ipv4 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546774"></a>
                  -ip_src_addr 12.1.1.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546775"></a>
                  -ip_src_mode increment \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546776"></a>
                  -ip_src_step 0.0.0.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546777"></a>
                  -ip_src_count 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546778"></a>
                  -ip_dst_addr 13.1.1.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546779"></a>
                  -ip_dst_mode increment \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546780"></a>
                  -ip_dst_step 0.0.0.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546781"></a>
                  -ip_dst_count 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546782"></a>
                  -l3_length 42 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546783"></a>
                  -rate_percent 100 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546784"></a>
                  -mac_dst_mode discovery \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546785"></a>
                  -length_mode increment \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546786"></a>
                  -frame_size_min	 20 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546787"></a>
                  -frame_size_max	 10000 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546788"></a>
                  -frame_size_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546789"></a>
                  ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546790"></a>
          if {[keylget traffic_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546791"></a>
              return "FAIL - $test_name - [keylget traffic_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546792"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546793"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546794"></a>
          # Clear stats before sending traffic</p>
        <p class="CodeBlock"><a name="0_pgfId-3546795"></a>
          set clear_stats_status [ixia::traffic_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546796"></a>
                  -port_handle $port_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546797"></a>
                  -action clear_stats \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546798"></a>
          		]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546799"></a>
          if {[keylget clear_stats_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546800"></a>
              return "FAIL - $test_name - [keylget clear_stats_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546801"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546802"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546803"></a>
          ####################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546804"></a>
          # Configure triggers and filters #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546805"></a>
          ####################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546806"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546807"></a>
          set config_status [::ixia::packet_config_buffers \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546808"></a>
          	-port_handle $port_handle_rx	 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546809"></a>
          	-capture_mode trigger \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546810"></a>
          	]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546811"></a>
          if {[keylget config_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546812"></a>
              return "FAIL - $test_name - [keylget config_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546813"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546814"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546815"></a>
          set config_status [::ixia::packet_config_filter \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546816"></a>
          	-port_handle $port_handle_rx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546817"></a>
          	]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546818"></a>
          if {[keylget config_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546819"></a>
              return "FAIL - $test_name - [keylget config_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546820"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546821"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546822"></a>
          set size_from 62</p>
        <p class="CodeBlock"><a name="0_pgfId-3546823"></a>
          set size_to 67</p>
        <p class="CodeBlock"><a name="0_pgfId-3546824"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546825"></a>
          set config_status [::ixia::packet_config_triggers \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546826"></a>
              -port_handle $port_handle_rx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546827"></a>
              -capture_trigger 1		 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546828"></a>
              -capture_trigger_framesize	 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546829"></a>
              -capture_trigger_framesize_from $size_from \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546830"></a>
              -capture_trigger_framesize_to $size_to \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546831"></a>
              -capture_filter 1		 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546832"></a>
              -capture_filter_framesize 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546833"></a>
              -capture_filter_framesize_from $size_from \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546834"></a>
              -capture_filter_framesize_to $size_to \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546835"></a>
              -uds1 1		 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546836"></a>
              -uds1_framesize 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546837"></a>
              -uds1_framesize_from $size_from \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546838"></a>
              -uds1_framesize_to $size_to \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546839"></a>
              -uds2 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546840"></a>
              -uds2_framesize 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546841"></a>
              -uds2_framesize_from 68 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546842"></a>
              -uds2_framesize_to 10000 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546843"></a>
              ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546844"></a>
          if {[keylget config_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546845"></a>
              return "FAIL - $test_name - [keylget config_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546846"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546847"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546848"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546849"></a>
          # Start capture on port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546850"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546851"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546852"></a>
          puts "Starting capture.."</p>
        <p class="CodeBlock"><a name="0_pgfId-3546853"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546854"></a>
          set start_status [::ixia::packet_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546855"></a>
                  -port_handle $port_handle_rx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546856"></a>
          	-action start		 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546857"></a>
          	]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546858"></a>
          if {[keylget start_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546859"></a>
              return "FAIL - $test_name - [keylget start_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546860"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546861"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546862"></a>
          puts "Capturing...."</p>
        <p class="CodeBlock"><a name="0_pgfId-3546863"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546864"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546865"></a>
          # Start traffic on port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546866"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546867"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546868"></a>
          set traffic_control_status [ixia::traffic_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546869"></a>
                  -port_handle $port_handle_tx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546870"></a>
                  -action run ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546871"></a>
          if {[keylget traffic_control_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546872"></a>
              return "FAIL - $test_name - [keylget traffic_control_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546873"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546874"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546875"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546876"></a>
          after 3000</p>
        <p class="CodeBlock"><a name="0_pgfId-3546877"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546878"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546879"></a>
          # Stop traffic on port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546880"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546881"></a>
          puts "Stopped"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546882"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546883"></a>
          set traffic_control_status [ixia::traffic_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546884"></a>
                  -port_handle $port_handle_tx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546885"></a>
                  -action stop ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546886"></a>
          if {[keylget traffic_control_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546887"></a>
              return "FAIL - $test_name - [keylget traffic_control_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546888"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546889"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546890"></a>
          set portz [list [list 1 3 1] [list 1 3 2]]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546891"></a>
          puts "waiting traffic to stop"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546892"></a>
          ixCheckTransmitDone portz</p>
        <p class="CodeBlock"><a name="0_pgfId-3546893"></a>
          puts "traffic stopped"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546894"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546895"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546896"></a>
          # Stop capture on port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546897"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546898"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546899"></a>
          puts "Stopping capture..."</p>
        <p class="CodeBlock"><a name="0_pgfId-3546900"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546901"></a>
          set stop_status [::ixia::packet_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546902"></a>
                  -port_handle $port_handle_tx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546903"></a>
          	-action stop		\</p>
        <p class="CodeBlock"><a name="0_pgfId-3546904"></a>
          	]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546905"></a>
          if {[keylget stop_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546906"></a>
              return "FAIL - $test_name - [keylget stop_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546907"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546908"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546909"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546910"></a>
          # Get capture and statistics to keyed list #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546911"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546912"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546913"></a>
          set stats_status [::ixia::packet_stats \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546914"></a>
                  -port_handle $port_handle_rx \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546915"></a>
                  -format var \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546916"></a>
          	]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546917"></a>
          if {[keylget stats_status status] != $::SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546918"></a>
              return "FAIL - $test_name - [keylget stats_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546919"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546920"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546921"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546922"></a>
          # Print aggregate stats #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546923"></a>
          #########################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546924"></a>
          puts "Aggregate capture stats on port $port_handle_rx:"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546925"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546926"></a>
          set key $port_handle_rx.aggregate</p>
        <p class="CodeBlock"><a name="0_pgfId-3546927"></a>
          set aggregate_keys [keylkeys stats_status $key]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546928"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546929"></a>
          foreach aggregate_key $aggregate_keys {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546930"></a>
              puts [format "%5s %20s" $aggregate_key [keylget stats_status \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546931"></a>
                      $key.$aggregate_key]]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546932"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546933"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546934"></a>
          #################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546935"></a>
          # Print frame stats and capture #</p>
        <p class="CodeBlock"><a name="0_pgfId-3546936"></a>
          #################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3546937"></a>
          puts "\nPer frame capture stats on port $port_handle_rx:"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546938"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546939"></a>
          set key $port_handle_rx.frame</p>
        <p class="CodeBlock"><a name="0_pgfId-3546940"></a>
          set all_frames [keylkeys stats_status $key]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546941"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546942"></a>
          foreach single_frame $all_frames {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546943"></a>
              set this_key $key.$single_frame</p>
        <p class="CodeBlock"><a name="0_pgfId-3546944"></a>
              set this_frame_keys [keylkeys stats_status $this_key]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546945"></a>
              puts "\nFrame: $single_frame"</p>
        <p class="CodeBlock"><a name="0_pgfId-3546946"></a>
              foreach frame_key $this_frame_keys {</p>
        <p class="CodeBlock"><a name="0_pgfId-3546947"></a>
                  puts [format "%s %20s" $frame_key [keylget stats_status \</p>
        <p class="CodeBlock"><a name="0_pgfId-3546948"></a>
                          $this_key.$frame_key]]</p>
        <p class="CodeBlock"><a name="0_pgfId-3546949"></a>
              }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546950"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3546951"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3546686"></a>
          return "SUCCESS - $test_name - [clock format [clock seconds]]"</p>
    </body>
</html>