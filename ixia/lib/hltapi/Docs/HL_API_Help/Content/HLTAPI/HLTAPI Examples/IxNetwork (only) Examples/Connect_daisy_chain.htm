<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxNetwork (only) Examples|PYTHON_Samples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>Connect Daisy Chain (connect_daisy_chain_ngpf.py)</title>
        <link href="../../../Resources/Stylesheets/Advanced_Information_Manager.css" rel="stylesheet" type="text/css" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxNetwork (only) Examples/Connect_daisy_chain.htm">Open topic with navigation</a>
        </p>
        <h1>Connect Daisy Chain (connect_daisy_chain_ngpf.py)</h1>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">#                                                                              #</p>
        <p class="CodeBlock"># Description:                                                                 #</p>
        <p class="CodeBlock">#    This sample connects to a daisy chained topology and sets the chain	   #</p>
        <p class="CodeBlock">#    sequence and cable length for each slave, using the ixiangpf namespace.   #</p>
        <p class="CodeBlock"># Module:                                                                      #</p>
        <p class="CodeBlock">#    The sample was tested on a LSM XMVDC16NG module.                          #</p>
        <p class="CodeBlock">#                                                                              #</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">from pprint import pprint</p>
        <p class="CodeBlock">import os, sys</p>
        <p class="CodeBlock">import time</p>
        <p class="CodeBlock">import pdb</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># sys.path.append('/path/to/hltapi/library/common/ixiangpf/python')</p>
        <p class="CodeBlock"># sys.path.append('/path/to/ixnetwork/api/python')</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">from ixiatcl import IxiaTcl</p>
        <p class="CodeBlock">from ixiahlt import IxiaHlt</p>
        <p class="CodeBlock">from ixiangpf import IxiaNgpf</p>
        <p class="CodeBlock">from ixiaerror import IxiaError</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ixiatcl = IxiaTcl()</p>
        <p class="CodeBlock">ixiahlt = IxiaHlt(ixiatcl)</p>
        <p class="CodeBlock">ixiangpf = IxiaNgpf(ixiahlt)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dirname, filename = os.path.split(os.path.abspath(__file__))</p>
        <p class="CodeBlock">print dirname</p>
        <p class="CodeBlock">print filename</p>
        <p class="CodeBlock">logname = dirname + '\\log.log'</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">chassis_ip = ["ixro-hlt-xm2-02", "ixro-hlt-xm2-03","ixro-hlt-xm2-09"]</p>
        <p class="CodeBlock">tcl_server = "localhost"</p>
        <p class="CodeBlock">ixnetwork_tcl_server = 'localhost'</p>
        <p class="CodeBlock">port_list = [['2/1'], ['2/3'], ['2/1']]</p>
        <p class="CodeBlock">master_chassis = ['none',"ixro-hlt-xm2-02","ixro-hlt-xm2-02"]</p>
        <p class="CodeBlock">chain_cables_length = [0,6,3]</p>
        <p class="CodeBlock">chain_type = 'daisy'</p>
        <p class="CodeBlock">chain_seq = [1,3,2]</p>
        <p class="CodeBlock">cfgErrors = 0</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "Printing connection variables ... "</p>
        <p class="CodeBlock">print "test_name = %s" % filename</p>
        <p class="CodeBlock">print 'chassis_ip =  %s' % chassis_ip</p>
        <p class="CodeBlock">print "tcl_server = %s " % tcl_server</p>
        <p class="CodeBlock">print "ixnetwork_tcl_server = %s" % ixnetwork_tcl_server</p>
        <p class="CodeBlock">print "port_list = %s " % port_list</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">######################################</p>
        <p class="CodeBlock" style="margin-left: 4px;">##  CONNECT WITHOUT SESSION RESUME  ##</p>
        <p class="CodeBlock">######################################</p>
        <p class="CodeBlock">connect_result = ixiangpf.connect(</p>
        <p class="CodeBlock" style="margin-left: 50px;">ixnetwork_tcl_server = ixnetwork_tcl_server,</p>
        <p class="CodeBlock" style="margin-left: 50px;">tcl_server = tcl_server,</p>
        <p class="CodeBlock" style="margin-left: 50px;">device = chassis_ip,</p>
        <p class="CodeBlock" style="margin-left: 50px;">port_list = port_list,</p>
        <p class="CodeBlock" style="margin-left: 50px;">break_locks = 1,</p>
        <p class="CodeBlock" style="margin-left: 50px;">reset = 1,</p>
        <p class="CodeBlock" style="margin-left: 50px;">master_device = master_chassis,</p>
        <p class="CodeBlock" style="margin-left: 50px;">chain_sequence = chain_seq,</p>
        <p class="CodeBlock" style="margin-left: 50px;">chain_cables_length = chain_cables_length,</p>
        <p class="CodeBlock" style="margin-left: 25px;">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if connect_result['status'] != '1':</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL:"</p>
        <p class="CodeBlock" style="margin-left: 25px;">print connect_result['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">print " Printing connection result"</p>
        <p class="CodeBlock">pprint(connect_result)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">check_master = connect_result['connection']['chassis'][chassis_ip[0]]['is_master_chassis']</p>
        <p class="CodeBlock">check_slave1 = connect_result['connection']['chassis'][chassis_ip[1]]['is_master_chassis']</p>
        <p class="CodeBlock">check_slave2 = connect_result['connection']['chassis'][chassis_ip[2]]['is_master_chassis']</p>
        <p class="CodeBlock">check_master_of_slave1 = connect_result['connection']['chassis'][chassis_ip[1]]['chassis_chain']['master_device']</p>
        <p class="CodeBlock">check_master_of_slave2 = connect_result['connection']['chassis'][chassis_ip[2]]['chassis_chain']['master_device']</p>
        <p class="CodeBlock">cable_length1 = connect_result['connection']['chassis'][chassis_ip[1]]['chassis_chain']['cable_length']</p>
        <p class="CodeBlock">cable_length2 = connect_result['connection']['chassis'][chassis_ip[2]]['chassis_chain']['cable_length']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "Master set is : %s\n" % check_master_of_slave1</p>
        <p class="CodeBlock">if check_slave1 == '0':</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "First slave is %s\n" % chassis_ip[1]</p>
        <p class="CodeBlock">if check_slave2 == '0':</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "Second slave is %s\n" % chassis_ip[2]</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ports = connect_result['vport_list'].split()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">top_1 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name      = "{Topology 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle        = ports[0],</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if top_1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL:"</p>
        <p class="CodeBlock" style="margin-left: 25px;">print top_1['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">top_1_handle = top_1['topology_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dg_1 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_handle              = top_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_name            = "{Device Group 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier      = "10",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_enabled         = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dg_1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % dg_1['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dg_1_handle = dg_1['device_group_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_1 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "00.11.01.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "00.00.00.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "00.00.01.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = top_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv_1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % dg_1['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_1_handle = mv_1['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">intf_dg1 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                = "{Ethernet 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle              = dg_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mtu                          = "1500",</p>
        <p class="CodeBlock" style="margin-left: 25px;">src_mac_addr                 = mv_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan                         = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id                      = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_step                 = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_count                = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_tpid                    = "0x8100",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority_step      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">use_vpn_parameters           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">site_id                      = "0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if intf_dg1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % intf_dg1['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">eth_1_handle = intf_dg1['ethernet_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_2 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "100.1.0.2",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "0.0.1.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = top_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % mv_2['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_2_handle = mv_2['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_3 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "100.1.0.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "0.0.1.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = top_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv_3['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % mv_3['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_3_handle = mv_3['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">intf_dg1_2 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                     = "{IPv4 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle                   = eth_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_resolve_gateway              = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac           = "00.00.00.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac_step      = "00.00.00.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">gateway                           = mv_3_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">intf_ip_addr                      = mv_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">netmask                           = "255.255.255.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if intf_dg1_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % intf_dg1_2['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_1_handle = intf_dg1_2['ipv4_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">top_2 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name      = "{Topology 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle        = ports[1],</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if top_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % top_2['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">top_2_handle = top_2['topology_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dg_2 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_handle              = top_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_name            = "{Device Group 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier      = "10",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_enabled         = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if dg_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % dg_2['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">dg_2_handle = dg_2['device_group_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_4 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "00.12.01.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "00.00.00.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "00.00.01.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = top_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv_4['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % mv_4['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_4_handle = mv_4['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">intf_dg2 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                = "{Ethernet 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle              = dg_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mtu                          = "1500",</p>
        <p class="CodeBlock" style="margin-left: 25px;">src_mac_addr                 = mv_4_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan                         = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id                      = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_step                 = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_count                = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_tpid                    = "0x8100",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority_step      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">use_vpn_parameters           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">site_id                      = "0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if intf_dg2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % intf_dg2['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">eth_2_handle = intf_dg2['ethernet_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_5 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "101.1.0.2",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "0.0.1.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = top_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv_5['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % mv_5['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_5_handle = mv_5['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_6 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "101.1.0.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "0.0.1.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = top_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv_6['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % mv_6['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv_6_handle = mv_6['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">intf_dg2_2 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                     = "{IPv4 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle                   = eth_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_resolve_gateway              = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac           = "00.00.00.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac_step      = "00.00.00.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">gateway                           = mv_6_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">intf_ip_addr                      = mv_5_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">netmask                           = "255.255.255.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if intf_dg2_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL: %sn" % intf_dg2_2['log']</p>
        <p class="CodeBlock" style="margin-left: 25px;">quit()</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_2_handle = intf_dg2_2['ipv4_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if cfgErrors &gt; 0:</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "FAIL - The script has a total of %d errors\n" % cfgErrors</p>
        <p class="CodeBlock">else :</p>
        <p class="CodeBlock" style="margin-left: 25px;">print "SUCCESS -  The script has ended with no errors!\n"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock" style="margin-left: 25px;"># _result_ = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 50px;"># protocol_handle                    = "/globals",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># arp_on_linkup                      = "0",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># single_arp_per_gateway             = "1",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_send_arp_rate                 = "200",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_send_arp_interval             = "1000",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_send_arp_max_outstanding      = "400",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_send_arp_scale_mode           = "port",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_attempt_enabled               = "0",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_attempt_rate                  = "200",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_attempt_interval              = "1000",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_attempt_scale_mode            = "port",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_diconnect_enabled             = "0",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_disconnect_rate               = "200",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_disconnect_interval           = "1000",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_disconnect_scale_mode         = "port",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ipv4_re_send_arp_on_link_up        = "true",</p>
        <p class="CodeBlock" style="margin-left: 25px;"># )</p>
        <p class="CodeBlock" style="margin-left: 25px;"># if _result_['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ixnHLT_errorHandler('interface_config', _result_)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock" style="margin-left: 25px;"># _result_ = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 50px;"># protocol_handle                     = "/globals",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_attempt_enabled            = "0",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_attempt_rate               = "200",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_attempt_interval           = "1000",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_attempt_scale_mode         = "port",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_diconnect_enabled          = "0",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_disconnect_rate            = "200",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_disconnect_interval        = "1000",</p>
        <p class="CodeBlock" style="margin-left: 50px;"># ethernet_disconnect_scale_mode      = "port",</p>
        <p class="CodeBlock" style="margin-left: 25px;"># )</p>
        <p class="CodeBlock" style="margin-left: 25px;"># if _result_['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;"># ixnHLT_errorHandler('interface_config', _result_)</p>
    </body>
</html>