##Procedure Header
# 
# Name:
#     ixia::fcoe_fwd_config
# 
# Description:
#     Performs fcoe_fwd configuration.
#     Configuration parameters for one FCoE Forwarder interface.
#     
# 
# Synopsis:
#     ixia::fcoe_fwd_config
#          -mode CHOICES create add modify delete
#          -parent_handle ANY
#         [-handle ANY]
#         [-style ANY]
#         [-b2b_rx_size RANGE 64 - 4095 DEFAULT 2112]
#         [-enabled CHOICES true false  DEFAULT true]
#         [-fabric_name ANY  DEFAULT B0:00:0E:FC:00:00:00:00]
#         [-fc_map ANY  DEFAULT 0E.FC.00]
#         [-fdisc_reject_interval RANGE 0 - 9999 DEFAULT 0]
#         [-fip_addressing_mode CHOICES fabric-provided server-provided both DEFAULT fabric-provided]
#         [-fip_advertisement_period RANGE 0 - 90000 DEFAULT 8000]
#         [-fip_clear_vlink_on_expire ??? (ixn value fipClearVlinkOnExpire)]
#         [-fip_clear_vlink_port_ids ??? (ixn value fipClearVlinkPortIds)]
#         [-fip_enabled CHOICES true false  DEFAULT true]
#         [-fip_fka_dbit CHOICES true false  DEFAULT false]
#         [-fip_priority RANGE 0 - 255 DEFAULT 128]
#         [-fip_version CHOICES 0 1 DEFAULT 1]
#         [-fip_vlan_discovery CHOICES true false  DEFAULT false]
#         [-fip_vnport_keep_alive_period RANGE 0 - 3600000 DEFAULT 90000]
#         [-flogi_reject_interval RANGE 0 - 9999 DEFAULT 0]
#         [-logo_reject_interval RANGE 0 - 9999 DEFAULT 0]
#         [-mac_range_count RANGE 1 - 1000000000 DEFAULT 1]
#         [-mac_range_enabled CHOICES true false  DEFAULT true]
#         [-mac_range_increment_by ANY  DEFAULT 00:00:00:00:00:01]
#         [-mac_range_mac ANY  DEFAULT aa:bb:cc:00:00:00]
#         [-mac_range_mtu RANGE 500 - 9500 DEFAULT 1500]
#         [-mac_range_name ANY  DEFAULT {}]
#         [-name ANY  DEFAULT {}]
#         [-name_server CHOICES true false  DEFAULT true]
#         [-name_server_commands INTLIST  DEFAULT {}]
#         [-operating_mode CHOICES VF_PORT F_PORT DEFAULT {}]
#         [-plogi_reject_interval RANGE 0 - 9999 DEFAULT 0]
#         [-switch_name ANY  DEFAULT A0:00:0E:FC:00:00:00:00]
#         [-vlan_ids ANY  DEFAULT {}]
#         [-vlan_range_enabled CHOICES true false  DEFAULT true]
#         [-vlan_range_first_id RANGE 0 - 4094 DEFAULT 1]
#         [-vlan_range_id_incr_mode CHOICES 0 1 2 DEFAULT 2]
#         [-vlan_range_increment RANGE 0 - 4095 DEFAULT 1]
#         [-vlan_range_increment_step RANGE 1 - 1000000000 DEFAULT 1]
#         [-vlan_range_inner_enable CHOICES true false  DEFAULT false]
#         [-vlan_range_inner_first_id RANGE 0 - 4094 DEFAULT 1]
#         [-vlan_range_inner_increment RANGE 0 - 4095 DEFAULT 1]
#         [-vlan_range_inner_increment_step RANGE 1 - 1000000000 DEFAULT 1]
#         [-vlan_range_inner_priority RANGE 0 - 7 DEFAULT 1]
#         [-vlan_range_inner_tpid CHOICES 0x8100 0x88a8 0x9100 0x9200 0x9300 DEFAULT 0x8100]
#         [-vlan_range_inner_unique_count RANGE 1 - 4094 DEFAULT 4094]
#         [-vlan_range_name ANY  DEFAULT {}]
#         [-vlan_range_priority RANGE 0 - 7 DEFAULT 1]
#         [-vlan_range_tpid CHOICES 0x8100 0x88a8 0x9100 0x9200 0x9300 DEFAULT 0x8100]
#         [-vlan_range_unique_count RANGE 1 - 4094 DEFAULT 4094]
#         [-vlan_range_vlan_id_info NODE ]
# 
# Arguments:
# -mode
#     create - creates and configures a new object
#     add - adds a child object to the one specified by the -handle param
#     modify - modified attributes on the given object by the -handle param
#     delete - deletes the object given by the -handle param
#     
# -parent_handle
#     The parent handle used for creating this object. Has the form: //vport
#     
# -handle
#     A handle returned via a ::<namespace>::fcoe_fwd_config command. This is used for mode modify.
#     
# -style
#     The IxNetwork object typepath that is created after the command is run. Is optional in most cases. Only applies to modes create/add.
#     
# -b2b_rx_size (PropertyInt)
#     The buffer-to-buffer receive data field size in bytes.
#     (DEFAULT = 2112)
#     
# -enabled (PropertyBoolean)
#     Disabled ranges won't be configured nor validated.
#     (DEFAULT = true)
#     
# -fabric_name (PropertyString)
#     The Fabric Name value assigned to this interface.
#     (DEFAULT = B0:00:0E:FC:00:00:00:00)
#     
# -fc_map (PropertyString)
#     The MAC Address Prefix associated to local FC fabric.
#     (DEFAULT = 0E.FC.00)
#     
# -fdisc_reject_interval (PropertyInt)
#     When the user enters N, IxNetwork FCF will send out one LS_RJT for every N-th FDISC request.
#     If N = 0, no FDISC request will be rejected.
#     If N = 1, every FDISC request will be rejected.
#     If N = 10, then the first 9 FDISC requests will be accepted, and the 10th will be rejected.
#     (DEFAULT = 0)
#     
# -fip_addressing_mode (PropertyString)
#     The MAC Addressing Mode supported by this interface.
#     (DEFAULT = fabric-provided) Valid choices are:
#     fabric-provided - FPMA
#     server-provided - SPMA
#     both - Both
#     
#     
# -fip_advertisement_period (PropertyInt)
#     The interval in milliseconds between periodic Discovery Advertisements.
#     It is also used to monitor the interval between ENodes FIP Keep-Alive frames.
#     A value of 0 milliseconds indicates that no Keep-Alive message is expected.
#     (DEFAULT = 8000)
#     
# -fip_clear_vlink_on_expire
#     (DEFAULT = ??)
#     
# -fip_clear_vlink_port_ids
#     (DEFAULT = ??)
#     
# -fip_enabled (PropertyBoolean)
#     Select this option to respond to general FIP requests.
#     (DEFAULT = true)
#     
# -fip_fka_dbit (PropertyBoolean)
#     When the D bit is set, the VF_Port will not verify periodic reception
#     of ENode FIP Keep-Alive and VN_Port FIP Keep-Alive frames.
#     (DEFAULT = false)
#     
# -fip_priority (PropertyInt)
#     The FIP Priority value sent with Discovery Advertisements.
#     (DEFAULT = 128)
#     
# -fip_version (PropertyString)
#     The FIP version to use.
#     (DEFAULT = 1) Valid choices are:
#     0 - {Version 0}
#     1 - {Version 1}
#     
#     
# -fip_vlan_discovery (PropertyBoolean)
#     Select this option to respond to FIP VLAN Discovery requests.
#     (DEFAULT = false)
#     
# -fip_vnport_keep_alive_period (PropertyInt)
#     The interval in milliseconds between periodic VN_Port FIP Keep-Alive frames.
#     A value of 0 milliseconds indicates that no Keep-Alive message is expected.
#     (DEFAULT = 90000)
#     
# -flogi_reject_interval (PropertyInt)
#     When the user enters N, IxNetwork FCF will send out one LS_RJT for every N-th FLOGI request.
#     If N = 0, no FLOGI request will be rejected.
#     If N = 1, every FLOGI request will be rejected.
#     If N = 10, then the first 9 FLOGI requests will be accepted, and the 10th will be rejected.
#     (DEFAULT = 0)
#     
# -logo_reject_interval (PropertyInt)
#     When the user enters N, IxNetwork FCF will send out one LS_RJT for every N-th LOGO request.
#     If N = 0, no LOGO request will be rejected.
#     If N = 1, every LOGO request will be rejected.
#     If N = 10, then the first 9 LOGO requests will be accepted, and the 10th will be rejected.
#     (DEFAULT = 0)
#     
# -mac_range_count (PropertyInt)
#     The total number of interfaces to be created for the range.
#     (DEFAULT = 1)
#     
# -mac_range_enabled (PropertyBoolean)
#     Disabled ranges won't be configured nor validated.
#     (DEFAULT = true)
#     
# -mac_range_increment_by (PropertyString)
#     When a range of multiple MACs is created with this plugin, this value
#     is the incrementor used to create the addresses in the range.
#     This property is used in conjunction with 'MAC Address' as a base value.
#     Incrementor used when the plugin creates a range of MACs.
#     (DEFAULT = 00:00:00:00:00:01)
#     
# -mac_range_mac (PropertyString)
#     When a range of multiple MACs is created with this plugin, this value
#     is the base value used to create the addresses in the range.
#     This property is used in conjunction with 'Increment' as an incrementor.
#     Base value used when the plugin creates a MAC address.
#     (DEFAULT = aa:bb:cc:00:00:00)
#     
# -mac_range_mtu (PropertyInt)
#     Maximum Transmission Unit.
#     The largest packet that a given network medium can carry.
#     Ethernet, for example, has a fixed MTU of 1500 bytes without and 9500 bytes with Jumbo frame support.
#     ATM has a fixed MTU of 48 bytes and PPP has a negotiated MTU that is usually between 500 and 2000 bytes.
#     (DEFAULT = 1500)
#     
# -mac_range_name (PropertyString)
#     Name of range
#     (DEFAULT = {})
#     
# -name (PropertyString)
#     Name of range
#     (DEFAULT = {})
#     
# -name_server (PropertyBoolean)
#     Select this option to respond to Name Service requests.
#     (DEFAULT = true)
#     
# -name_server_commands (PropertyIntList)
#     Signifies the Name Server Commands that will be accepted by the forwarder.
#     (DEFAULT = {})
#     
# -operating_mode (PropertyString)
#     Describes the operating mode for this interface.
#     (DEFAULT = {}) Valid choices are:
#     VF_PORT - VF_PORT
#     F_PORT - F_PORT
#     
#     
# -plogi_reject_interval (PropertyInt)
#     When the user enters N, IxNetwork FCF will send out one LS_RJT for every N-th PLOGI request.
#     If N = 0, no PLOGI request will be rejected.
#     If N = 1, every PLOGI request will be rejected.
#     If N = 10, then the first 9 PLOGI requests will be accepted, and the 10th will be rejected.
#     (DEFAULT = 0)
#     
# -switch_name (PropertyString)
#     The Switch Name value assigned to this interface.
#     (DEFAULT = A0:00:0E:FC:00:00:00:00)
#     
# -vlan_ids (PropertyString)
#     The VLAN ID list sent with VLAN Notifications (e.g. 10,20).
#     Discovery Advertisements will be periodically sent for each VLAN ID specified in this list.
#     (DEFAULT = {})
#     
# -vlan_range_enabled (PropertyBoolean)
#     Disabled ranges won't be configured nor validated.
#     (DEFAULT = true)
#     
# -vlan_range_first_id (PropertyInt)
#     The first ID to be used for the first VLAN tag.
#     (DEFAULT = 1)
#     
# -vlan_range_id_incr_mode (PropertyInt)
#     Method used to increment VLAN IDs.
#     May take the following values: 0 (First VLAN first), 1 (Last VLAN first), 2 (All).
#     (DEFAULT = 2) Valid choices are:
#     0 - {Outer First}
#     1 - {Inner First}
#     2 - All
#     
#     
# -vlan_range_increment (PropertyInt)
#     Amount of increment per increment step for first VLAN. E.g. increment step = 10 and increment = 2 means increment VLAN ID by 2 for every 10 IPs
#     (DEFAULT = 1)
#     
# -vlan_range_increment_step (PropertyInt)
#     Frequency of first VLAN ID increment. E.g., value of 10 means increment VLAN ID once for every 10 IP addresses.
#     (DEFAULT = 1)
#     
# -vlan_range_inner_enable (PropertyBoolean)
#     Enable the inner VLAN.
#     (DEFAULT = false)
#     
# -vlan_range_inner_first_id (PropertyInt)
#     The first ID to be used for the inner VLAN tag.
#     (DEFAULT = 1)
#     
# -vlan_range_inner_increment (PropertyInt)
#     Amount of increment per increment step for Inner VLAN. E.g. increment step = 10 and increment = 2 means increment VLAN ID by 2 for every 10 IPs
#     (DEFAULT = 1)
#     
# -vlan_range_inner_increment_step (PropertyInt)
#     Frequency of inner VLAN ID increment. E.g., value of 10 means increment VLAN ID once for every 10 IP addresses.
#     (DEFAULT = 1)
#     
# -vlan_range_inner_priority (PropertyInt)
#     The 802.1Q priority to be used for the inner VLAN tag.
#     (DEFAULT = 1)
#     
# -vlan_range_inner_tpid (PropertyString)
#     The TPID value in the inner VLAN Tag.
#     (DEFAULT = 0x8100) Valid choices are:
#     0x8100 - 0x8100
#     0x88a8 - 0x88a8
#     0x9100 - 0x9100
#     0x9200 - 0x9200
#     0x9300 - 0x9300
#     
#     
# -vlan_range_inner_unique_count (PropertyInt)
#     Number of unique inner VLAN IDs to use.
#     (DEFAULT = 4094)
#     
# -vlan_range_name (PropertyString)
#     Name of range
#     (DEFAULT = {})
#     
# -vlan_range_priority (PropertyInt)
#     The 802.1Q priority to be used for the outer VLAN tag.
#     (DEFAULT = 1)
#     
# -vlan_range_tpid (PropertyString)
#     The TPID value in the outer VLAN Tag.
#     (DEFAULT = 0x8100) Valid choices are:
#     0x8100 - 0x8100
#     0x88a8 - 0x88a8
#     0x9100 - 0x9100
#     0x9200 - 0x9200
#     0x9300 - 0x9300
#     
#     
# -vlan_range_unique_count (PropertyInt)
#     Number of unique first VLAN IDs to use.
#     (DEFAULT = 4094)
#     
# -vlan_range_vlan_id_info (VlanIdInfo sub element)
#     Contains extra VLANs
#     (DEFAULT = {})
#     
# 
# Return Values:
#     A keyed list.
#     key:status     value:$::SUCCESS | $::FAILURE
#     key:handles    value:fcoe_fwd handles
#     key:log        value:When status is failure, contains more information
#     
# 
# See Also:
#     External documentation on Tclx keyed lists

##Procedure Header
# 
# Name:
#     ixia::fcoe_fwd_control
# 
# Description:
#     Perform control plane operations on an endpoint created
#     by a ixia::fcoe_fwd_config command
#     
# 
# Synopsis:
#     ixia::fcoe_fwd_control
#         -handle ANY
#         -action CHOICES abort abort_async start/connect stop/disconnect
#     
# 
# Arguments:
#     -handle
#         A handle returned via a ::<namespace>::fcoe_fwd_config 
#         command. This is the object on which the action will take place.
#     -action
#         Action to be executed. Valid choices are:
#         abort   - abort all sessions on the same port with the target 
#                   endpoint designated by -handle. The control is 
#                   returned when the operation is completed.
#         abort_async   - abort all sessions on the same port with the target 
#                   endpoint designated by -handle. The control is 
#                   returned immediately. The operation is executed in the background.
#         start/connect - start and/or negotiate session for the target endpoint
#                   designated by -handle.
#         stop/disconnect - stop and/or release session for the target endpoint
#                   designated by -handle.
#     
# 
# Return Values:
#     A keyed list.
#     key:status     value:$::SUCCESS | $::FAILURE
#     key:log        value:When status is failure, contains more information
#     
# 
# Notes:
#     This command applies only to IxNetwork.
#     

##Procedure Header
# 
# Name:
#     ixia::fcoe_fwd_stats
# 
# Description:
#     Retrieve statistics plane on an endpoint created
#     by a ixia::fcoe_fwd_config command
#     
# 
# Synopsis:
#     "ixia::fcoe_fwd_stats"
#         -port_handle ANY
#     
# 
# Arguments:
#     -port_handle
#         The port handle for which the fcoe_fwd stats need to 
#         be retrieved
#     
# 
# Return Values:
#     A keyed list.
#     key:status     value:$::SUCCESS | $::FAILURE
#     key:log        value:When status is failure, contains more information
#     
#     key:[<port_handle.>].gen.port_name value:Port Name
#     key:[<port_handle.>].gen.vnports_registered value:VN_Ports Registered
#     key:[<port_handle.>].gen.ns_requests_rx value:NS Requests Rx
#     key:[<port_handle.>].gen.ns_acceptstx value:NS Accepts Tx
#     key:[<port_handle.>].gen.ns_rejects_tx value:NS Rejects Tx
#     key:[<port_handle.>].gen.scr_requests_x value:SCR Requests Rx
#     key:[<port_handle.>].gen.scr_accepts_tx value:SCR Accepts Tx
#     key:[<port_handle.>].gen.scr_rejects_tx value:SCR Rejects Tx
#     key:[<port_handle.>].gen.flogi_requests_rx value:FLOGI Requests Rx
#     key:[<port_handle.>].gen.flogi_ls_acc_tx value:FLOGI LS_ACC Tx
#     key:[<port_handle.>].gen.flogi_ls_rjt_tx value:FLOGI LS_RJT Tx
#     key:[<port_handle.>].gen.fdisc_requests_rx value:FDISC Requests Rx
#     key:[<port_handle.>].gen.fdisc_ls_acc_tx value:FDISC LS_ACC Tx
#     key:[<port_handle.>].gen.fdisc_ls_rjt_tx value:FDISC LS_RJT Tx
#     key:[<port_handle.>].gen.flogo_requests_rx value:FLOGO Requests Rx
#     key:[<port_handle.>].gen.flogo_ls_acc_tx value:FLOGO LS_ACC Tx
#     key:[<port_handle.>].gen.flogo_ls_rjt_tx value:FLOGO LS_RJT Tx
#     key:[<port_handle.>].gen.plogi_requests_rx value:PLOGI Requests Rx
#     key:[<port_handle.>].gen.plogi_ls_acc_tx value:PLOGI LS_ACC Tx
#     key:[<port_handle.>].gen.plogi_ls_rjt_tx value:PLOGI LS_RJT Tx
#     key:[<port_handle.>].gen.plogo_requests_rx value:PLOGO Requests Rx
#     key:[<port_handle.>].gen.plogo_ls_acc_tx value:PLOGO LS_ACC Tx
#     key:[<port_handle.>].gen.plogo_ls_rjt_tx value:PLOGO LS_RJT Tx
#     key:[<port_handle.>].gen.plogi_requests_tx value:PLOGI Requests Tx
#     key:[<port_handle.>].gen.plogi_ls_acc_rx value:PLOGI LS_ACC Rx
#     key:[<port_handle.>].gen.plogi_ls_rjt_rx value:PLOGI LS_RJT Rx
#     key:[<port_handle.>].gen.plogo_requests_tx value:PLOGO Requests Tx
#     key:[<port_handle.>].gen.plogo_ls_acc_rx value:PLOGO LS_ACC Rx
#     key:[<port_handle.>].gen.plogo_ls_rjt_rx value:PLOGO LS_RJT Rx
#     key:[<port_handle.>].gen.disc_solicits_rx value:Discovery Solicitations Rx
#     key:[<port_handle.>].gen.disc_adverts_tx value:Discovery Advertisements Tx
#     key:[<port_handle.>].gen.vlan_requests_rx value:VLAN Requests Rx
#     key:[<port_handle.>].gen.vlan_notifications_tx value:VLAN Notifications Tx
#     key:[<port_handle.>].gen.unsol_disc_adverts_tx value:Unsolicited Discovery Advertisements Tx
#     key:[<port_handle.>].gen.enode_keep_alives_rx value:ENode Keep-Alives Rx
#     key:[<port_handle.>].gen.enode_keep_alives_miss value:ENode Keep-Alives Miss
#     key:[<port_handle.>].gen.unexp_enode_keep_alives_rx value:Unexpected ENode Keep-Alives Rx
#     key:[<port_handle.>].gen.vnport_keep_alives_rx value:VN_Port Keep-Alives Rx
#     key:[<port_handle.>].gen.vnport_keepalives_miss value:VN_Port Keep-Alives Miss
#     key:[<port_handle.>].gen.unexp_vnport_keep_alives_rx value:Unexpected VN_Port Keep-Alives Rx
#     key:[<port_handle.>].gen.clear_vlink_vnports value:Clear Virtual Links VN_Ports
#     key:[<port_handle.>].gen.clear_vlink_tx value:Clear Virtual Links Tx
#     key:[<port_handle.>].gen.clear_vlink_rx value:Clear Virtual Links Rx
#     
#     

