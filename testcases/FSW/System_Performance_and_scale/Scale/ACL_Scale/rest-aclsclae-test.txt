# -*- coding: robot -*-
| *Setting* | *Value *|
| Documentation | Fortiswitch RESTful API Test cases |
| Default Tags | SCALE | REST |
| Resource | rest-resources.txt |
| Suite Setup | Suite Setup Keyword |  ${testbed} | ${tbinfo} | ${tbtopo} |
| Suite Teardown | Suite Teardown Keyword |
| Test Timeout | 90 minutes |

| *Variables*  | *Value* |

| *Test Cases*  | *Value* | *Value* | *Value* |
#Testcase 1
| ACL Scale Drop Test |
| | [Documentation] | ACL Scale Test |
#| | [tags] | Scale Drop |
# Post ACL drop
| | Log | \n\t Configure ${ACL_Check_id5} ACL drop action via rest api | console=yes |
| | ${Url Cmd} | Set Variable | /api/v2/cmdb/switch.acl/policy |
| | :FOR | ${i} | IN RANGE | ${ACL_initial_id} | ${ACL_total_id}+1 |  
| |  | ${Payload} | Create Dictionary | id=${i} |
| | | ${temp} | Create Dictionary | drop=enable |
| | | Set To Dictionary | ${Payload} | action=${temp} |
| | | ${dist_mac} | increment_mac | ${Initial Dst Mac} | ${i} |
| | | ${temp} | Create Dictionary | dst-mac=${dist_mac} |
| | | Set To Dictionary | ${Payload} | classifier=${temp} |
| | | ${ingress_dict} | Create Dictionary | member-name=${Dut Port1} |
| | | ${ingress_list} | Create List | ${ingress_dict} |
| | | Set to Dictionary | ${Payload} | ingress-interface=${ingress_list} |
| | | ${json} = | Create Dictionary | json=${Payload} |
#| | | Log | \n ${Payload} | console=yes |
| | | ${Post Info} | REST.post | ${Url Cmd} | ${json} | ${Rest Login} |
#| | | Log | \n ${Post Info} | console=yes |
| | Log | \n\t Configure ${ACL_Check_id5} ACL drop action via rest api done| console=yes |

# Send 30 seconds real traffic
| | Log | \n\t Send 30 seconds real traffic | console=yes |
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Check ixia packet loss  
| | Log | \n\t Check traffic on FLOW${ACL_Check_id1}, FLOW${ACL_Check_id2}, FLOW${ACL_Check_id3}, FLOW${ACL_Check_id4}, AND FLOW${ACL_Check_id5} | console=yes |       
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id1} | ${ACL_Check_id1}+1 |
| | | ${dist_mac1} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id2} | ${ACL_Check_id2}+1 |
| | | ${dist_mac2} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id3} | ${ACL_Check_id3}+1 |
| | | ${dist_mac3} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id4} | ${ACL_Check_id4}+1 |
| | | ${dist_mac4} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id5} | ${ACL_Check_id5}+1 |
| | | ${dist_mac5} | increment_mac | ${Initial Dst Mac} | ${i} |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac1} | rx |
| | ${Port2 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac2} | rx |
| | ${Port3 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac3} | rx |
| | ${Port4 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac4} | rx |
| | ${Port5 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac5} | rx |
| | ${Port6 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port7 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | Log To Console | \n\t ACL drop dst on the ${ACL_Check_id1} flow traffic count:${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t ACL drop dst on the ${ACL_Check_id2} flow traffic count:${Port1 Tx} -- ${Port3 Rx} |
| | Log To Console | \n\t ACL drop dst on the ${ACL_Check_id3} flow traffic count:${Port1 Tx} -- ${Port4 Rx} |
| | Log To Console | \n\t ACL drop dst on the ${ACL_Check_id4} flow traffic count:${Port1 Tx} -- ${Port5 Rx} |
| | Log To Console | \n\t ACL drop dst on the ${ACL_Check_id5} flow traffic count:${Port1 Tx} -- ${Port6 Rx} |
| | Log To Console | \n\t ${Flow_id} Flow traffic total counts:${Port1 Tx} -- ${Port7 Rx} |
| | Should Be Equal As Numbers | ${Port7 Rx} | 0 | 'ACL Drop Error' |
| | Log | \n\t ${ACL_total_id} ACL drop action works | console=yes |
| | Log To Console | \n\tPASSED, NO TRAFFIC LOSS |

# Delete ACL Config
| | Log | \n\t Delete ACL configurations | console=yes |
| | ${Url Cmd} | Set Variable | /api/v2/cmdb/switch.acl/policy |
| | :FOR | ${i} | IN RANGE | ${ACL_initial_id} | ${ACL_total_id}+1 |  
| | | ${out} | Run Keyword | REST.Delete | ${Url Cmd}/${i} | ${Rest Login} |
| | Log | \n\t Delete 500 ACL configurations done | console=yes |

# Send 20 seconds real traffic after ACL deleted
| | Log | \n\t Send 20 seconds real traffic | console=yes |
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Check ixia packet loss  
| | Log | \n\t Check traffic on FLOW${ACL_Check_id1}, FLOW${ACL_Check_id2}, FLOW${ACL_Check_id3}, FLOW${ACL_Check_id4}, AND FLOW${ACL_Check_id5} | console=yes |       
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id1} | ${ACL_Check_id1}+1 |
| | | ${dist_mac1} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id2} | ${ACL_Check_id2}+1 |
| | | ${dist_mac2} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id3} | ${ACL_Check_id3}+1 |
| | | ${dist_mac3} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id4} | ${ACL_Check_id4}+1 |
| | | ${dist_mac4} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id5} | ${ACL_Check_id5}+1 |
| | | ${dist_mac5} | increment_mac | ${Initial Dst Mac} | ${i} |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac1} | rx |
| | ${Port2 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac2} | rx |
| | ${Port3 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac3} | rx |
| | ${Port4 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac4} | rx |
| | ${Port5 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac5} | rx |
| | ${Port6 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port7 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id1} flow traffic count:${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id2} flow traffic count:${Port1 Tx} -- ${Port3 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id3} flow traffic count:${Port1 Tx} -- ${Port4 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id4} flow traffic count:${Port1 Tx} -- ${Port5 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id5} flow traffic count:${Port1 Tx} -- ${Port6 Rx} |
| | Log To Console | \n\t ${Flow_id} Flow traffic total counts:${Port1 Tx} -- ${Port7 Rx} |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port7 Rx} | 0.99 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, NO TRAFFIC LOSS |
| | Log To Console | \n\tACL Scale Drop Testcase Complete |
| | Sleep | 5 seconds |

#Testcase 2
| Scale Count Test |
| | [Documentation] | Scale Count Test |
#| | [tags] | Count Scale |

# https login to FortiSwitch
| | ${Rest Login Status} | REST.Login | ${Dut Mgmt Ip} |
| | ${Rest Login} | Get From Dictionary | ${Rest Login Status} | ${Dut Mgmt Ip} |
| | Set Suite Variable | ${Rest Login} | ${Rest Login} |
# Post ACL count
| | Log | \n\t Configure ${ACL_total_id} ACL count action via rest api | console=yes |
| | ${Url Cmd} | Set Variable | /api/v2/cmdb/switch.acl/policy |
| | :FOR | ${i} | IN RANGE | ${ACL_initial_id} | ${ACL_total_id}+1 |  
| |  | ${Payload} | Create Dictionary | id=${i} |
| | | ${temp} | Create Dictionary | count=enable |
| | | Set To Dictionary | ${Payload} | action=${temp} |
| | | ${dist_mac} | increment_mac | ${Initial Dst Mac} | ${i} |
| | | ${temp} | Create Dictionary | dst-mac=${dist_mac} |
| | | Set To Dictionary | ${Payload} | classifier=${temp} |
| | | ${ingress_dict} | Create Dictionary | member-name=${Dut Port1} |
| | | ${ingress_list} | Create List | ${ingress_dict} |
| | | Set to Dictionary | ${Payload} | ingress-interface=${ingress_list} |
| | | ${json} = | Create Dictionary | json=${Payload} |
#| | | Log | \n ${Payload} | console=yes |
| | | ${Post Info} | REST.post | ${Url Cmd} | ${json} | ${Rest Login} |
#| | | Log | \n ${Post Info} | console=yes |
| | Log | \n\t Configure ${ACL_total_id} ACL count action via rest api done | console=yes |

# Send 30 seconds real traffic
| | Log | \n\t Send 30 seconds real traffic | console=yes |
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
| | Sleep | 5 seconds |

# Check ixia packet loss   
| | Log | \n\t Check traffic on FLOW${ACL_Check_id1}, FLOW${ACL_Check_id2}, FLOW${ACL_Check_id3}, FLOW${ACL_Check_id4}, AND FLOW${ACL_Check_id5} | console=yes |      
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id1} | ${ACL_Check_id1}+1 |
| | | ${dist_mac1} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id2} | ${ACL_Check_id2}+1 |
| | | ${dist_mac2} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id3} | ${ACL_Check_id3}+1 |
| | | ${dist_mac3} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id4} | ${ACL_Check_id4}+1 |
| | | ${dist_mac4} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id5} | ${ACL_Check_id5}+1 |
| | | ${dist_mac5} | increment_mac | ${Initial Dst Mac} | ${i} |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac1} | rx |
| | ${Port2 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac2} | rx |
| | ${Port3 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac3} | rx |
| | ${Port4 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac4} | rx |
| | ${Port5 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac5} | rx |
| | ${Port6 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port7 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
#| | Log | \n\t  ${Port1 Count} | console=yes |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id1} flow traffic count:${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id2} flow traffic count:${Port1 Tx} -- ${Port3 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id3} flow traffic count:${Port1 Tx} -- ${Port4 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id4} flow traffic count:${Port1 Tx} -- ${Port5 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id5} flow traffic count:${Port1 Tx} -- ${Port6 Rx} |
| | Log To Console | \n\t 500 Flow traffic total counts:${Port1 Tx} -- ${Port7 Rx} |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port7 Rx} | 0.99 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, NO TRAFFIC LOSS |

# Delete ACL Config
| | Log | \n\t Delete ACL configurations | console=yes |
| | ${Url Cmd} | Set Variable | /api/v2/cmdb/switch.acl/policy |
| | :FOR | ${i} | IN RANGE | ${ACL_initial_id} | ${ACL_total_id}+1 |  
#| | | Log | ${i} | console=yes |
| | | ${out} | Run Keyword | REST.Delete | ${Url Cmd}/${i} | ${Rest Login} |
#| | | Log | ${out} | console=yes |
| | Log | \n\t Delete ACL configurations done | console=yes |
| | Sleep | 5 seconds |
| | Log To Console | \n\tACL Scale Drop Testcase Complete |

#Testcase 3
| ACL Scale Specific Flow Test |
| | [Documentation] | ACL Scale Specific Flow Test |
#| | [tags] | Specific Flow |

# https login to FortiSwitch
| | ${Rest Login Status} | REST.Login | ${Dut Mgmt Ip} |
| | ${Rest Login} | Get From Dictionary | ${Rest Login Status} | ${Dut Mgmt Ip} |
| | Set Suite Variable | ${Rest Login} | ${Rest Login} |
# Post ACL drop
| | Log | \n\t Configure ACL drop action from flow ${ACL_Check_id2} to flow ${ACL_Check_id4} via rest api | console=yes |
| | ${Url Cmd} | Set Variable | /api/v2/cmdb/switch.acl/policy |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id2} | ${ACL_Check_id4}+1 |  
| |  | ${Payload} | Create Dictionary | id=${i} |
| | | ${temp} | Create Dictionary | drop=enable |
| | | Set To Dictionary | ${Payload} | action=${temp} |
| | | ${dist_mac} | increment_mac | ${Initial Dst Mac} | ${i} |
| | | ${temp} | Create Dictionary | dst-mac=${dist_mac} |
| | | Set To Dictionary | ${Payload} | classifier=${temp} |
| | | ${ingress_dict} | Create Dictionary | member-name=${Dut Port1} |
| | | ${ingress_list} | Create List | ${ingress_dict} |
| | | Set to Dictionary | ${Payload} | ingress-interface=${ingress_list} |
| | | ${json} = | Create Dictionary | json=${Payload} |
#| | | Log | \n ${Payload} | console=yes |
| | | ${Post Info} | REST.post | ${Url Cmd} | ${json} | ${Rest Login} |
#| | | Log | \n ${Post Info} | console=yes |
| | Log | \n\t Configure ACL drop action from flow ${ACL_Check_id2} to flow ${ACL_Check_id4} via rest api DONE | console=yes |

# Send 30 seconds real traffic
| | Log | \n\t Send 30 seconds traffic | console=yes |
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Check ixia packet loss
| | Log | \n\t Check traffic on FLOW${ACL_Check_id1}, FLOW${ACL_Check_id2}, FLOW${ACL_Check_id3}, FLOW${ACL_Check_id4}, AND FLOW${ACL_Check_id5} | console=yes |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id1} | ${ACL_Check_id1}+1 |
| | | ${dist_mac1} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id2} | ${ACL_Check_id2}+1 |
| | | ${dist_mac2} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id3} | ${ACL_Check_id3}+1 |
| | | ${dist_mac3} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id4} | ${ACL_Check_id4}+1 |
| | | ${dist_mac4} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id5} | ${ACL_Check_id5}+1 |
| | | ${dist_mac5} | increment_mac | ${Initial Dst Mac} | ${i} |

| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac1} | rx |
| | ${Port2 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac2} | rx |
| | ${Port3 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac3} | rx |
| | ${Port4 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac4} | rx |
| | ${Port5 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac5} | rx |
| | ${Port6 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port10 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
#| | Log | \n\t  ${Port1 Count} | console=yes |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id1} flow traffic count:${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id2} flow traffic count:${Port1 Tx} -- ${Port3 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id3} flow traffic count:${Port1 Tx} -- ${Port4 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id4} flow traffic count:${Port1 Tx} -- ${Port5 Rx} |
| | Log To Console | \n\t ACL count dst on the ${ACL_Check_id5} flow traffic count:${Port1 Tx} -- ${Port6 Rx} |
| | Log To Console | \n\t ACL count dst total flow traffic count:${Port1 Tx} -- ${Port10 Rx} |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port10 Rx} | 0.59 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, NO TRAFFIC LOSS |

# Delete ACL Config
| | Log | \n\t Delete ACL configurations | console=yes |
| | ${Url Cmd} | Set Variable | /api/v2/cmdb/switch.acl/policy |
| | :FOR | ${i} | IN RANGE | ${ACL_initial_id} | ${ACL_total_id}+1 |  
| | | ${out} | Run Keyword | REST.Delete | ${Url Cmd}/${i} | ${Rest Login} |
| | Log | \n\t Delete 500 ACL configurations done | console=yes |


# Send 30 seconds real traffic after acl deleted
| | Log | \n\t Send 30 seconds real traffic | console=yes |
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Check ixia packet loss  
| | Log | \n\t Check traffic on FLOW${ACL_Check_id1}, FLOW${ACL_Check_id2}, FLOW${ACL_Check_id3}, FLOW${ACL_Check_id4}, AND FLOW${ACL_Check_id5} | console=yes |       
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id1} | ${ACL_Check_id1}+1 |
| | | ${dist_mac1} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id2} | ${ACL_Check_id2}+1 |
| | | ${dist_mac2} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id3} | ${ACL_Check_id3}+1 |
| | | ${dist_mac3} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id4} | ${ACL_Check_id4}+1 |
| | | ${dist_mac4} | increment_mac | ${Initial Dst Mac} | ${i} |
| | :FOR | ${i} | IN RANGE | ${ACL_Check_id5} | ${ACL_Check_id5}+1 |
| | | ${dist_mac5} | increment_mac | ${Initial Dst Mac} | ${i} |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac1} | rx |
| | ${Port2 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac2} | rx |
| | ${Port3 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac3} | rx |
| | ${Port4 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac4} | rx |
| | ${Port5 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Flow Stats | ${Ixia Port2} TI0-'${Ixia Stream Name}' ${Ixia Port1 Mac}-${dist_mac5} | rx |
| | ${Port6 Rx} | Get Nested Diction |  ${Port2 Count} | flow_count.total_pkts |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port7 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id1} flow traffic count:${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id2} flow traffic count:${Port1 Tx} -- ${Port3 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id3} flow traffic count:${Port1 Tx} -- ${Port4 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id4} flow traffic count:${Port1 Tx} -- ${Port5 Rx} |
| | Log To Console | \n\t After ACL configuration deleted Check the ${ACL_Check_id5} flow traffic count:${Port1 Tx} -- ${Port6 Rx} |
| | Log To Console | \n\t ${Flow_id} Flow traffic total counts:${Port1 Tx} -- ${Port7 Rx} |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port7 Rx} | 0.97 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, NO TRAFFIC LOSS |

| | Log To Console | \n\tACL Specific Flow Testcase Complete|
