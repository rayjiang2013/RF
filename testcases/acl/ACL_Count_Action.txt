.# -*- coding: robot -*-
| *Setting* | *Value *|
| Documentation | Configure FSW via a telnet Console, then configure device with count action |
| Default Tags | ACL | ACL_Count_Action |
| Resource | ACL_DC_Action_resources.txt |
| Suite Setup | Suite Setup Keyword |  ${testbed} | ${tbinfo} | ${tbtopo} |
| Suite Teardown | Suite Teardown Keyword |
| Test Timeout | 20 minutes |

| *Variables*  | *Value* |

| *Test Cases*  | *Value* | *Value* | *Value* |
#Testcase 1
| Action: Count, Classifier:Dst IP |
| | [Documentation] | Action: Count, Classifier:Dst IP |
| | [tags] | count_case1 |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set dst-ip-prefix ${Ixia Port2 Ip}/32
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Log To Console | 'Sleep For 10 Seconds' |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port2 Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort1 Tx: ${Port1 Tx} -- Counter Value: ${packet_value_int} |

| | ${Test Result} | PacketDiff | ${packet_value} | ${Port2 Rx} | 0.97 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |



#change port2-port3
| | [Documentation] | Action: Count, Classifier:Dst IP |
| | @{Testcase Configure Data2}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set dst-ip-prefix ${Ixia Port3 Ip}/32
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data2}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data2} |
| | Log To Console | 'Sleep For 10 Seconds' |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port3 Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort1 Tx: ${Port1 Tx} -- Counter Value: ${packet_value_int} |

| | ${Test Result} | PacketDiff | ${packet_value} | ${Port3 Rx} | 0.97 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data2} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'Action: Count, Classifier:Dst IP Test Case Complete' |


#Testcase 2
| Action: Count, Classifier:Src IP |
| | [Documentation] | Action: Count, Classifier:Src IP |
#| | [tags] | count_case2 |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set src-ip-prefix ${Ixia Port1 Ip}/32
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Log To Console | 'Sleep For 10 Seconds' |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.95 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort1 Tx: ${Port1 Tx} -- Counter Value: ${packet_value_int} |

| | Should Be Equal As Numbers | ${packet_value} | ${Port1 Tx} | 'Traffic loss' |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'Action: Count, Classifier:Src IP Test Case Complete' |


#Testcase 3
| Action: Count, Classifier:Src Mac |
| | [Documentation] | Action: Count, Classifier:Src Mac |
#| | [tags] | count_case3 |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set src-mac ${Ixia Port1 Mac}
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Log To Console | 'Sleep For 10 Seconds' |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.95 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort1 Tx: ${Port1 Tx} -- Counter Value: ${packet_value_int} |

| | Should Be Equal As Numbers | ${packet_value} | ${Port1 Tx} | 'Traffic loss' |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |


# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'Action: Count, Classifier:Src Mac Test Case Complete' |


#Testcase 4
| Action: Count, Classifier:vlan-id |
| | [Documentation] | Action: Count, Classifier:vlan-id |
#| | [tags] | count_case4 |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set vlan-id 4000
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Log To Console | 'Sleep For 10 Seconds' |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.95 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort1 Tx: ${Port1 Tx} -- Counter Value: ${packet_value_int} |

| | Should Be Equal As Numbers | ${packet_value} | ${Port1 Tx} | 'Traffic loss' |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |


# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'Action: Count, Classifier:vlan-id Test Case Complete' |



| *Keywords* |
| Echo Message | [Arguments] | ${message to say} |
| | [Documentation] | Echo passing message |
| | Log To Console | ${message to say} |

