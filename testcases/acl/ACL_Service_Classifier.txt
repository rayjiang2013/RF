# -*- coding: robot -*-
| *Setting* | *Value *|
| Documentation | Configure FSW via a telnet Console, then configure device with service classify |
| Default Tags | ACL | ACL_service |
| Resource | ACL_Services_resources.txt |
| Suite Setup | Suite Setup Keyword |  ${testbed} | ${tbinfo} | ${tbtopo} |
| Suite Teardown | Suite Teardown Keyword |
| Test Timeout | 20 minutes |

| *Variables*  | *Value* |

| *Test Cases*  | *Value* | *Value* | *Value* |
#Testcase 1
| Action: Drop, Classifier:service:udp_deny/tcp_deny |
#| | [Tags] | ACL-SERVICES-CASE1 |
| | [Documentation] | Test Case 1 |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl service custom
| | | ... |     edit  "udp_deny"
| | | ... | 		set udp-portrange 2000
| | | ... |     end
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set drop enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set service "udp_deny"
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
# Check packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | Should Be Equal As Numbers | ${Port2 Rx} | 0 | 'ACL Drop/Service Error' |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, Drop/service Action -> Port2Rx All Packets Dropped |

#| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
#| | ${Header} | Set Variable | ID Packets Bytes description |
#| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
#| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
#| | Log To Console | \n\tParsed_dict=${Parsed_dict} |


# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'ACL Drop Test Case Complete' |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.98 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, DE-CONFIGURE SUCCESS, NO TRAFFIC LOSS |

#change service from udp to tcp
| | @{Testcase Configure Data2}= | Set Variable |
| | | ... | config switch acl service custom
| | | ... |     edit  "tcp_deny"
| | | ... | 		set tcp-portrange 4000
| | | ... |     end
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set drop enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set service "tcp_deny"
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data2}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data2} |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
# Check packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |
| | Log To Console | \n\t${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t${Port1 Tx} -- ${Port3 Rx} |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |
| | Should Be Equal As Numbers | ${Port3 Rx} | 0 | 'ACL Service_tcp Error' |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, Drop Action -> Port3Rx All Packets Dropped |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'ACL Drop Test Case Complete' |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.98 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, DE-CONFIGURE SUCCESS, NO TRAFFIC LOSS |

#Testcase 2
| Action: Count, Classifier:service:udp_count/tcp_count |
#| | [Tags] | ACL-SERVICE2 |
| | [Documentation] | Action: Count, Classifier:service:udp_deny/tcp_deny |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl service custom
| | | ... |     edit  "udp_count"
| | | ... | 		set udp-portrange 2000
| | | ... |     end
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set service "udp_count"
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
# Check packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |
| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port2 Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, NO TRAFFIC LOSS |

# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort2 Rx: ${Port2 Rx} -- Counter Value: ${packet_value_int} |

| | ${Test Result} | PacketDiff | ${packet_value} | ${Port3 Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'ACL udp_count passed' |

#change service from udp to tcp
| | @{Testcase Configure Data2}= | Set Variable |
| | | ... | config switch acl service custom
| | | ... |     edit  "tcp_count"
| | | ... | 		set tcp-portrange 4000
| | | ... |     end
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set count enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set service "tcp_count"
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data2}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data2} |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
# Check packet loss         
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |
| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |
| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |
| | Log To Console | \n\t${Port1 Tx} -- ${Port2 Rx} |
| | Log To Console | \n\t${Port1 Tx} -- ${Port3 Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port3 Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\t ACL tcp_count Service passed |


# check ACL table count
| | ${Table} | FortiSwitch Command | ${Dut Hostname} | get switch acl counter |
| | ${Header} | Set Variable | ID Packets Bytes description |
| | ${Parse_info} | Create Dictionary | table | ${Table} | header | ${Header} | delimiter | ${Dut Hostname} |
| | ${Parsed_dict} | TableParserInSequence | ${Parse_info} |
| | ${packet_list}= | Get Nested Diction | ${Parsed_dict} | data.Packets | 
| | ${packet_value}= | Get From List | ${packet_list} | 0 |
| | ${packet_value_int}= | Convert To Integer | ${packet_value} |
| | Log To Console | \n\tPort2 Rx: ${Port3 Rx} -- Counter Value: ${packet_value_int} |

| | ${Test Result} | PacketDiff | ${packet_value} | ${Port3 Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |


# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'ACL Service_Count Test Case Complete' |
| | Log To Console | 'Service_count Complete' |


| *Keywords* |
| Echo Message | [Arguments] | ${message to say} |
| | [Documentation] | Echo passing message |
| | Log To Console | ${message to say} |

