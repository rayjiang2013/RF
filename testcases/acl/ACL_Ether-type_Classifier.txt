# -*- coding: robot -*-
| *Setting* | *Value *|
| Documentation | Configure FSW via a telnet Console, then configure device with ACL_Drop_Action |
| Default Tags | ACL | ACL_Ethertype |
| Resource | ACL_Ethertype_resources.txt |
| Suite Setup | Suite Setup Keyword |  ${testbed} | ${tbinfo} | ${tbtopo} |
| Suite Teardown | Suite Teardown Keyword |
| Test Timeout | 20 minutes |

| *Variables*  | *Value* |
# Test case1
| *Test Cases*  | *Value* | *Value* | *Value* |
| Action: Drop, Classifier:Ether-type |
#| | [Tags] | ethertype1 |
| | [Documentation] | Action: Drop, Classifier:Ether-type |
| | @{Testcase Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set drop enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set ether-type 0x0800
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | [Teardown] | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data} |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |
| | Should Be Equal As Numbers | ${Port2 Rx} | 0 | 'ACL Drop Error' |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

| | Log To Console | \n\tPASSED, Drop Action -> Port2Rx All Packets Dropped |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'ACL Drop Test Case Complete' |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.98 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, DE-CONFIGURE SUCCESS, NO TRAFFIC LOSS |

#change port
| | [Documentation] | Action: Drop, Classifier:Ether-type |
| | @{Testcase Configure Data2}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     edit 1
| | | ... |             config action
| | | ... |                 set drop enable
| | | ... |             end
| | | ... |             config classifier
| | | ... |                 set ether-type 0x86DD
| | | ... |             end
| | | ... |             set ingress-interface ${Dut Port1}
| | | ... |     next
| | | ... | end
| | @{Testcase Unset Configure Data2}= | Set Variable |
| | | ... | config switch acl policy
| | | ... |     del 1
| | | ... | end
| | [Teardown] | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data2} |
| | Run Keyword | Test Setup Keyword | ${Dut Hostname} | @{Testcase Configure Data2} |
| | Sleep | 10 seconds |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |

# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |
| | Should Be Equal As Numbers | ${Port3 Rx} | 0 | 'ACL Drop Error' |
| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.49 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |

| | Log To Console | \n\tPASSED, Drop Action -> Port3Rx All Packets Dropped |

# remove ACL configuration
| | Run Keyword | Test Teardown Keyword | ${Dut Hostname} | @{Testcase Unset Configure Data} |
| | Log To Console | 'Sleep for 10 Seconds' |
| | Sleep | 10 seconds |
| | Log To Console | \n\t'ACL Drop Test Case Complete' |

# Send 30 seconds real traffic
| | ${Start Traffic Status} | Ixia Start Traffic |
| | Sleep | 30 seconds |
| | ${Stop Traffic Status} | Ixia Stop Traffic |
# Stop ixia traffic
| | ${Stop Protocols Status} | Ixia Stop Protocols |
| | Sleep | 10 seconds |

# Check ixia packet loss
| | ${Port1 Count} | Ixia Traffic Stats | ${Ixia Port1} |
| | ${Port1 Tx} | Get From Dictionary | ${Port1 Count} | tx_count |

| | ${Port2 Count} | Ixia Traffic Stats | ${Ixia Port2} |
| | ${Port2 Rx} | Get From Dictionary | ${Port2 Count} | rx_count |

| | ${Port3 Count} | Ixia Traffic Stats | ${Ixia Port3} |
| | ${Port3 Rx} | Get From Dictionary | ${Port3 Count} | rx_count |

| | ${Port Rx}= | Evaluate | ${Port2 Rx}+${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port2 Rx:${Port2 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port3 Rx:${Port3 Rx} |
| | Log To Console | \n\t$ Port1 Tx:${Port1 Tx} -- Port Rx:${Port Rx} |

| | ${Test Result} | PacketDiff | ${Port1 Tx} | ${Port Rx} | 0.98 |
| | ${No Packets Loss} | Get From Dictionary | ${Test Result} | result |
| | Should Be Equal As Numbers | ${No Packets Loss} | 1 | 'Traffic loss' |
| | Log To Console | \n\tPASSED, DE-CONFIGURE SUCCESS, NO TRAFFIC LOSS |
