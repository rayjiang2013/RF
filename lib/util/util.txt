# -*- coding: robot -*-
| *Settings* |
| Documentation | Common files for FSW related commands and variables
| Library | String | 
| Library | Collections | 
| Library | OperatingSystem | 

| *Variables* |

| *Keywords* |

# show Switch configurations. Continue show in case see --More--
| Show Switch | [Arguments] | ${dut_name} | ${telnet_lias} |
| | [Documentation] | Show Switch |
| | ${org_index} | Telnet.Switch Connection | ${telnet_lias} |
| | Telnet.Write | "show" |
| | :FOR | ${index} | IN RANGE | 20 |
| | | Sleep | 2 |
| | | ${read_info}= | Telnet.Read |
| | | ${last_line} | Get Line | ${read_info} | -1 |
| | | Log To Console | ${read_info} |
| | | Run Keyword If | '${last_line}' == '${dut_name} # ' | Exit For Loop |
| | | Run Keyword If | '${last_line}' == '--More-- ' | Telnet.Write | "a" |
| | Telnet.Switch Connection | ${org_index} |

# Configure FortiSwitch with cli in dictionary. The key is the switch hostname
# This API can configure multiple devices with single call. The reason we have to divide the
# code is because Robot Framework does not allow nested For loops
| Configure FortiSwitch | [Arguments] | ${config_data_dict} |
| | [Documentation] | Configure FortiSwitch |
| | @{keys} | Get Dictionary Keys | ${config_data_dict} |
| | :FOR | ${key} | IN | @{keys} |
| | | Run Keyword | Write To FortiSwitch | ${config_data_dict} | ${key} |

# THis is the second part of Configure FortiSwitch
| Write To FortiSwitch | [Arguments] | ${config_data_dict} | ${key} |
| | ${org_id} | Telnet.Switch Connection | ${key} |
| | Telnet.Write | \n |
| | Sleep | 1 |
| | ${read_info}= | Telnet.Read |
| | ${last_line} | Get Line | ${read_info} | -1 |
| | Run Keyword If | '${last_line}' == '${key} login:' | Telnet.Write | admin |
| | Sleep | 1 |
| | ${read_info}= | Telnet.Read |
| | Run Keyword If | '${read_info}' == 'Password:' | Telnet.Write | \n |
| | Sleep | 1 |
| | ${read_info}= | Telnet.Read |
| | ${config_data} | Get From Dictionary | ${config_data_dict} | ${key} |
| | @{config_data_list} | Split to lines | ${config_data} |
| | :FOR | ${line} | IN | @{config_data_list} |
| | | Telnet.Write | ${line} |
| | | Sleep | 1 |
| | | ${read_info}= | Telnet.Read |
| | | Log To Console | ${read_info}${line} |
| | Telnet.Switch Connection | ${org_id} |

# Send cli to FortiSwitch via a telnet session
# Return its output on console
| FortiSwitch Command | [Arguments] | ${telnet_lias} | ${cli} |
| | [Documentation] | FortiSwitch Command |
| | ${org_id} | Telnet.Switch Connection | ${telnet_lias} |
| | Telnet.Write | ${cli} |
| | Sleep | 1 |
| | ${read_info}= | Telnet.Read |
| | Log To Console | ${read_info}${cli} |
| | Telnet.Switch Connection | ${org_id} |
| | [Return] | ${read_info} |
