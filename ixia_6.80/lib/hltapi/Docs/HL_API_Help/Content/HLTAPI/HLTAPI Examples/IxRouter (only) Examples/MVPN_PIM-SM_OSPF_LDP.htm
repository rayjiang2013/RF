<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxRouter (only) Examples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>mVPN (MVPN_PIM-SM_OSPF_LDP.tcl)</title>
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxRouter (only) Examples/MVPN_PIM-SM_OSPF_LDP.htm">Open topic with navigation</a>
        </p>
        <div>
            <h3><a name="top"></a>mVPN (MVPN_PIM-SM_OSPF_LDP.tcl)</h3>
            <p class="CodeBlock">          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555260"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555261"></a>
          # Description: #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555262"></a>
          # This sample creates the following MVPN setup. #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555263"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555264"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555265"></a>
                                                               +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555266"></a>
                                                            +--| MVRF1 | MVPN #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555267"></a>
                                                  +-----+ / +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555268"></a>
                                              +---| PE1 |-+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555269"></a>
          # +----+ / +-----+ \ +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555270"></a>
          # | CE |---+ / +--| MVRF2 | MVPN #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555271"></a>
          # +----+ \ +-----+ +----------+ / +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555272"></a>
                --| DUT |---| Provider |--- #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555273"></a>
          # +----+ / +-----+ +----------+ \ +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555274"></a>
          # | CE |---+ \ +--| MVRF1 | MVPN #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555275"></a>
          # +----+ \ +-----+ / +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555276"></a>
                                              +---| PE2 |-+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555277"></a>
                                                  +-----+ \ +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555278"></a>
                                                            +--| MVRF2 | MVPN #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555279"></a>
                                                               +-------+ #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555280"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555281"></a>
          # Protocols used: #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555282"></a>
          # Provider Side EGP - BGP #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555283"></a>
          # Provider Side IGP - OSPF #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555284"></a>
          # Provider Side MPLS Protocol - LDP #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555285"></a>
          # Provider Side Multicast Protocol - PIM/SM #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555286"></a>
          # Customer Side Multicast Protocol - PIM/SM #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555287"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555288"></a>
          # DUT configuration: #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555289"></a>
          # ip vrf 500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555290"></a>
          # rd 1:500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555291"></a>
          # route-target export 1:500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555292"></a>
          # route-target import 1:500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555293"></a>
          # mdt default 239.1.1.1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555294"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555295"></a>
          # ip vrf 501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555296"></a>
          # rd 1:501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555297"></a>
          # route-target export 1:501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555298"></a>
          # route-target import 1:501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555299"></a>
          # mdt default 239.1.1.2 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555300"></a>
          # exit #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555301"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555302"></a>
          # ip multicast-routing #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555303"></a>
          # ip multicast-routing vrf 500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555304"></a>
          # ip multicast-routing vrf 501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555305"></a>
          # mpls label protocol ldp #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555306"></a>
          # no mpls ldp logging neighbor-changes #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555307"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555308"></a>
          # interface Loopback0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555309"></a>
          # ip address 111.111.111.111 255.255.255.255 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555310"></a>
          # ip pim sparse-mode #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555311"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555312"></a>
          # interface Loopback5 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555313"></a>
          # ip address 5.5.5.5 255.255.255.0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555314"></a>
          # ip pim sparse-mode #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555315"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555316"></a>
          # interface GigabitEthernet1/38 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555317"></a>
          # description Provider #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555318"></a>
          # ip address 19.19.19.1 255.255.255.0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555319"></a>
          # ip pim sparse-mode #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555320"></a>
          # tag-switching ip #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555321"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555322"></a>
          # interface GigabitEthernet1/37 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555323"></a>
          # description CustomerSide #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555324"></a>
          # ip address 18.18.18.1 255.255.255.0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555325"></a>
          # ip pim sparse-mode #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555326"></a>
          # tag-switching ip #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555327"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555328"></a>
          # interface GigabitEthernet1/37.500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555329"></a>
          # description CE1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555330"></a>
          # encapsulation dot1Q 500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555331"></a>
          # ip vrf forwarding 500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555332"></a>
          # ip address 21.21.25.1 255.255.255.0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555333"></a>
          # ip pim sparse-mode #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555334"></a>
          # no cdp enable #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555335"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555336"></a>
          # interface GigabitEthernet1/37.501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555337"></a>
          # description CE2 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555338"></a>
          # encapsulation dot1Q 501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555339"></a>
          # ip vrf forwarding 501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555340"></a>
          # ip address 21.21.26.1 255.255.255.0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555341"></a>
          # ip pim sparse-mode #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555342"></a>
          # no cdp enable #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555343"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555344"></a>
          # router ospf 1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555345"></a>
          # router-id 1.1.1.1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555346"></a>
          # log-adjacency-changes detail #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555347"></a>
          # network 111.111.111.111 0.0.0.0 area 0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555348"></a>
          # network 19.19.19.0 0.0.0.255 area 0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555349"></a>
          # network 18.18.18.0 0.0.0.255 area 0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555350"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555351"></a>
          # router bgp 1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555352"></a>
          # bgp router-id 1.1.1.1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555353"></a>
          # bgp cluster-id 1684275457 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555354"></a>
          # bgp log-neighbor-changes #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555355"></a>
          # neighbor 2.2.2.2 remote-as 1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555356"></a>
          # neighbor 2.2.2.2 update-source Loopback0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555357"></a>
          # neighbor 2.2.2.3 remote-as 1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555358"></a>
          # neighbor 2.2.2.3 update-source Loopback0 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555359"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555360"></a>
          # address-family vpnv4 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555361"></a>
          # neighbor 2.2.2.2 activate #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555362"></a>
          # neighbor 2.2.2.2 send-community extended #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555363"></a>
          # neighbor 2.2.2.3 activate #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555364"></a>
          # neighbor 2.2.2.3 send-community extended #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555365"></a>
          # exit-address-family #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555366"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555367"></a>
          # address-family ipv4 vrf 501 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555368"></a>
          # no auto-summary #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555369"></a>
          # no synchronization #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555370"></a>
          # exit-address-family #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555371"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555372"></a>
          # address-family ipv4 vrf 500 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555373"></a>
          # no auto-summary #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555374"></a>
          # no synchronization #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555375"></a>
          # exit-address-family #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555376"></a>
          # exit #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555377"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555378"></a>
          # ip pim rp-address 5.5.5.5 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555379"></a>
          # ip pim vrf 500 rp-address 21.21.25.1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555380"></a>
          # ip pim vrf 501 rp-address 21.21.26.1 #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555381"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555382"></a>
          # Module: #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555383"></a>
          # The sample was tested on a LM1000STXS4 module. #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555384"></a>
                                                                               #</p>
            <p class="CodeBlock"><a name="0_pgfId-3555385"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555386"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555387"></a>
          proc script_increment_ipv4_address {prefix intf_ip_addr_step} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555388"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555389"></a>
              set temp_route_ip_addr_step [split $intf_ip_addr_step .]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555390"></a>
              set step_index 3</p>
            <p class="CodeBlock"><a name="0_pgfId-3555391"></a>
              set octet_number 4</p>
            <p class="CodeBlock"><a name="0_pgfId-3555392"></a>
              while {$octet_number &gt;= 1} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555393"></a>
                  set single_octet_step [lindex $temp_route_ip_addr_step\</p>
            <p class="CodeBlock"><a name="0_pgfId-3555394"></a>
                          $step_index]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555395"></a>
                  set one 0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555396"></a>
                  if {[scan $prefix "%d.%d.%d.%d" a b c d] == 4} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555397"></a>
                      set one [format %u [expr {($a&lt;&lt;24)|($b&lt;&lt;16)|($c&lt;&lt;8)|$d}]]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555398"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555399"></a>
                  set two [expr {$single_octet_step&lt;&lt;(8*(4-$octet_number))}]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555400"></a>
                  set value [expr {$one + $two}]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555401"></a>
                  if [catch {set prefix [format "%s.%s.%s.%s" \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555402"></a>
                              [expr {(($value &gt;&gt; 24) &amp; 0xff)}] \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555403"></a>
                              [expr {(($value &gt;&gt; 16) &amp; 0xff)}] \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555404"></a>
                              [expr {(($value &gt;&gt; 8 ) &amp; 0xff)}] \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555405"></a>
                              [expr {$value &amp; 0xff}]]} prefix] {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555406"></a>
                      set prefix 0.0.0.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555407"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555408"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555409"></a>
                  incr octet_number -1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555410"></a>
                  incr step_index -1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555411"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555412"></a>
              return $prefix</p>
            <p class="CodeBlock"><a name="0_pgfId-3555413"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555414"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555415"></a>
          proc script_increment_ipv4_net {ipAddress {netmask 24} {amount 1}} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555416"></a>
              set ipVal 0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555417"></a>
              if {[scan $ipAddress "%d.%d.%d.%d" a b c d] == 4} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555418"></a>
                  set ipVal [format %u [expr {($a&lt;&lt;24)|($b&lt;&lt;16)|($c&lt;&lt;8)|$d}]]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555419"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555420"></a>
              set ipVal [mpexpr {($ipVal &gt;&gt; (32 - $netmask)) + $amount}]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555421"></a>
              set ipVal [mpexpr {($ipVal &lt;&lt; (32 - $netmask)) &amp; 0xFFFFFFFF}]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555422"></a>
              if [catch {set address [format "%s.%s.%s.%s" \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555423"></a>
                          [expr {(($ipVal &gt;&gt; 24) &amp; 0xff)}] \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555424"></a>
                          [expr {(($ipVal &gt;&gt; 16) &amp; 0xff)}] \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555425"></a>
                          [expr {(($ipVal &gt;&gt; 8 ) &amp; 0xff)}] \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555426"></a>
                          [expr {$ipVal &amp; 0xff}]]} address] {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555427"></a>
                  set address 0.0.0.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555428"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555429"></a>
              return $address</p>
            <p class="CodeBlock"><a name="0_pgfId-3555430"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555431"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555432"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555433"></a>
          package require Ixia</p>
            <p class="CodeBlock"><a name="0_pgfId-3555434"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555435"></a>
          set test_name [info script]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555436"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555437"></a>
          set chassisIP sylvester</p>
            <p class="CodeBlock"><a name="0_pgfId-3555438"></a>
          set port_list [list 4/1 4/2]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555439"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555440"></a>
          # Provider Side parameters</p>
            <p class="CodeBlock"><a name="0_pgfId-3555441"></a>
          set p_ip_addr_start 19.19.19.2</p>
            <p class="CodeBlock"><a name="0_pgfId-3555442"></a>
          set p_ip_addr_step 0.0.0.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555443"></a>
          set p_gw_addr 19.19.19.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555444"></a>
          set p_ip_prefix 24</p>
            <p class="CodeBlock"><a name="0_pgfId-3555445"></a>
          set p_rp_addr_start 5.5.5.5</p>
            <p class="CodeBlock"><a name="0_pgfId-3555446"></a>
          set p_rp_addr_step 0.0.0.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555447"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555448"></a>
          # Set PE Routers parameters</p>
            <p class="CodeBlock"><a name="0_pgfId-3555449"></a>
          set pe_count 2</p>
            <p class="CodeBlock"><a name="0_pgfId-3555450"></a>
          set pe_ip_addr_start 2.2.2.2</p>
            <p class="CodeBlock"><a name="0_pgfId-3555451"></a>
          set pe_ip_addr_step 0.0.0.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555452"></a>
          set pe_dut_ip_addr_start 111.111.111.111</p>
            <p class="CodeBlock"><a name="0_pgfId-3555453"></a>
          set pe_dut_ip_addr_step 0.0.0.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555454"></a>
          set pe_ip_prefix 32</p>
            <p class="CodeBlock"><a name="0_pgfId-3555455"></a>
          set pe_as_number 1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555456"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555457"></a>
          # Set MVPN/MVRF parameters</p>
            <p class="CodeBlock"><a name="0_pgfId-3555458"></a>
          set mvrf_count 2</p>
            <p class="CodeBlock"><a name="0_pgfId-3555459"></a>
          set mvrf_unique 0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555460"></a>
          set rd_type as</p>
            <p class="CodeBlock"><a name="0_pgfId-3555461"></a>
          set rd_number_start $pe_as_number</p>
            <p class="CodeBlock"><a name="0_pgfId-3555462"></a>
          set rd_number_step 0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555463"></a>
          set rd_assigned_number_start 500</p>
            <p class="CodeBlock"><a name="0_pgfId-3555464"></a>
          set rd_assigned_number_step 1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555465"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555466"></a>
          set mvpn_source_addr_start 88.0.0.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555467"></a>
          set mvpn_source_addr_step 0.0.1.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555468"></a>
          set mvpn_source_prefix 32</p>
            <p class="CodeBlock"><a name="0_pgfId-3555469"></a>
          set mvpn_num_sources 1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555470"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555471"></a>
          set mvpn_group_addr_start 228.0.0.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555472"></a>
          set mvpn_group_addr_step 1.0.0.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555473"></a>
          set mvpn_group_prefix 32</p>
            <p class="CodeBlock"><a name="0_pgfId-3555474"></a>
          set mvpn_num_groups 1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555475"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555476"></a>
          set mvpn_rp_addr_start 21.21.25.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555477"></a>
          set mvpn_rp_addr_step 0.0.1.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555478"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555479"></a>
          set mdt_group_addr_start 239.1.1.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555480"></a>
          set mdt_group_addr_step 0.0.0.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555481"></a>
          set mdt_group_prefix 32</p>
            <p class="CodeBlock"><a name="0_pgfId-3555482"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555483"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555484"></a>
          # Set Customer CE Parameters</p>
            <p class="CodeBlock"><a name="0_pgfId-3555485"></a>
          set ce_ip_addr_start 21.21.25.2</p>
            <p class="CodeBlock"><a name="0_pgfId-3555486"></a>
          set ce_ip_addr_step 0.0.1.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555487"></a>
          set ce_ip_prefix 24</p>
            <p class="CodeBlock"><a name="0_pgfId-3555488"></a>
          set ce_gw_addr_start 21.21.25.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555489"></a>
          set ce_gw_addr_step 0.0.1.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555490"></a>
          set ce_vlan_id_start 500</p>
            <p class="CodeBlock"><a name="0_pgfId-3555491"></a>
          set ce_vlan_id_step 1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555492"></a>
          set ce_rp_addr_start 21.21.25.1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555493"></a>
          set ce_rp_addr_step 0.0.1.0</p>
            <p class="CodeBlock"><a name="0_pgfId-3555494"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555495"></a>
          if {$mvrf_unique} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555496"></a>
              set ce_count [mpexpr $pe_count * $mvrf_count]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555497"></a>
          } else {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555498"></a>
              set ce_count $mvrf_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3555499"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555500"></a>
          set total_mvrf_count $ce_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3555501"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555502"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555503"></a>
          # Connect to the chassis, reset to factory defaults and take ownership</p>
            <p class="CodeBlock"><a name="0_pgfId-3555504"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555505"></a>
          set connect_status [::ixia::connect \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555506"></a>
                  -reset \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555507"></a>
                  -device $chassisIP \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555508"></a>
                  -port_list $port_list \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555509"></a>
                  -username ixiaApiUser ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555510"></a>
          if {[keylget connect_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555511"></a>
              return "FAIL - $test_name - [keylget connect_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555512"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555513"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555514"></a>
          set port_handle [list]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555515"></a>
          foreach port $port_list {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555516"></a>
              if {![catch {keylget connect_status port_handle.$chassisIP.$port} \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555517"></a>
                          temp_port]} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555518"></a>
                  lappend port_handle $temp_port</p>
            <p class="CodeBlock"><a name="0_pgfId-3555519"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555520"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555521"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555522"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555523"></a>
          # Configure interfaces in the test</p>
            <p class="CodeBlock"><a name="0_pgfId-3555524"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555525"></a>
          set interface_status [::ixia::interface_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555526"></a>
                  -port_handle $port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555527"></a>
                  -autonegotiation 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555528"></a>
                  -duplex full \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555529"></a>
                  -speed ether1000 ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555530"></a>
          if {[keylget interface_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555531"></a>
              return "FAIL - $test_name - [keylget interface_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555532"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555533"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555534"></a>
          set pe_port_handle [lindex $port_handle 0]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555535"></a>
          set ce_port_handle [lindex $port_handle 1]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555536"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555537"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555538"></a>
          # Configure BGP on PE Routers side</p>
            <p class="CodeBlock"><a name="0_pgfId-3555539"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555540"></a>
          set bgp_routers_status [ixia::emulation_bgp_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555541"></a>
                  -mode reset \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555542"></a>
                  -port_handle $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555543"></a>
                  -count $pe_count \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555544"></a>
                  -local_ip_addr $p_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555545"></a>
                  -remote_ip_addr $p_gw_addr \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555546"></a>
                  -local_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555547"></a>
                  -remote_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555548"></a>
                  -local_loopback_ip_addr $pe_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555549"></a>
                  -local_loopback_ip_addr_step $pe_ip_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555550"></a>
                  -remote_loopback_ip_addr $pe_dut_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555551"></a>
                  -remote_loopback_ip_addr_step $pe_dut_ip_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555552"></a>
                  -local_router_id $pe_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555553"></a>
                  -neighbor_type internal \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555554"></a>
                  -ip_version 4 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555555"></a>
                  -local_as $pe_as_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555556"></a>
                  -active_connect_enable \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555557"></a>
                  -ipv4_unicast_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555558"></a>
                  -ipv4_multicast_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555559"></a>
                  -ipv4_mpls_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555560"></a>
                  -ipv4_mpls_vpn_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555561"></a>
                  -ipv6_unicast_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555562"></a>
                  -ipv6_multicast_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555563"></a>
                  -ipv6_mpls_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555564"></a>
                  -ipv6_mpls_vpn_nlri ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555565"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555566"></a>
          if {[keylget bgp_routers_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555567"></a>
              return "FAIL - $test_name - [keylget bgp_routers_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555568"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555569"></a>
          set pe_bgp_handles [keylget bgp_routers_status handles]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555570"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555571"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555572"></a>
          # Configure BGP mVRFs</p>
            <p class="CodeBlock"><a name="0_pgfId-3555573"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555574"></a>
          set mvpn_source_address $mvpn_source_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555575"></a>
          set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555576"></a>
          set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555577"></a>
          set rd_number $rd_number_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555578"></a>
          set rd_assigned_number $rd_assigned_number_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555579"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555580"></a>
          foreach {bgp_neighbor} $pe_bgp_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555581"></a>
              set mvpn_source_address_start $mvpn_source_address</p>
            <p class="CodeBlock"><a name="0_pgfId-3555582"></a>
              for {set i 1} {$i &lt;= $mvrf_count} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555583"></a>
                  set bgp_route_range_status [::ixia::emulation_bgp_route_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555584"></a>
                          -mode add \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555585"></a>
                          -handle $bgp_neighbor \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555586"></a>
                          -num_sites 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555587"></a>
                          -num_routes $mvpn_num_sources \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555588"></a>
                          -max_route_ranges 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555589"></a>
                          -ip_version 4 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555590"></a>
                          -prefix $mvpn_source_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555591"></a>
                          -prefix_step 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555592"></a>
                          -prefix_from $mvpn_source_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555593"></a>
                          -prefix_to $mvpn_source_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555594"></a>
                          -route_ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555595"></a>
                          -netmask 255.255.255.255 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555596"></a>
                          -default_mdt_ip $mdt_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555597"></a>
                          -default_mdt_ip_incr $mdt_group_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555598"></a>
                          -label_value 16 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555599"></a>
                          -label_step 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555600"></a>
                          -rd_admin_value $rd_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555601"></a>
                          -rd_assign_value $rd_assigned_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555602"></a>
                          -rd_type 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555603"></a>
                          -target_type as \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555604"></a>
                          -target $rd_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555605"></a>
                          -target_assign $rd_assigned_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555606"></a>
                          -import_target_type as \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555607"></a>
                          -import_target $rd_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555608"></a>
                          -import_target_assign $rd_assigned_number \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555609"></a>
                          -ipv4_unicast_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555610"></a>
                          -ipv4_multicast_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555611"></a>
                          -ipv4_mpls_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555612"></a>
                          -ipv4_mpls_vpn_nlri \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555613"></a>
                          -origin_route_enable \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555614"></a>
                          -next_hop_set_mode same \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555615"></a>
                          -next_hop_enable 1 ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555616"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555617"></a>
                  if {[keylget bgp_route_range_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555618"></a>
                      return "FAIL - $test_name - [keylget bgp_route_range_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555619"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555620"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555621"></a>
                  set mvpn_source_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555622"></a>
                          $mvpn_source_address $mvpn_source_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555623"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555624"></a>
                  set mvpn_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555625"></a>
                          $mvpn_group_address $mvpn_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555626"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555627"></a>
                  set mdt_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555628"></a>
                          $mdt_group_address $mdt_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555629"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555630"></a>
                  set rd_number [mpexpr $rd_number + $rd_number_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555631"></a>
                  set rd_assigned_number [mpexpr $rd_assigned_number + \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555632"></a>
                          $rd_assigned_number_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555633"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555634"></a>
              if {$mvrf_unique == 0} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555635"></a>
                  set mvpn_source_address $mvpn_source_address_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555636"></a>
                  set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555637"></a>
                  set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555638"></a>
                  set rd_number $rd_number_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555639"></a>
                  set rd_assigned_number $rd_assigned_number_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555640"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555641"></a>
                  for {set i 0} {$i &lt; $mvpn_num_sources} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555642"></a>
                      set mvpn_source_address [script_increment_ipv4_net \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555643"></a>
                              $mvpn_source_address $mvpn_source_prefix]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555644"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555645"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555646"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555647"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555648"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555649"></a>
          # Create OSPFv2 Provider</p>
            <p class="CodeBlock"><a name="0_pgfId-3555650"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555651"></a>
          set ospf_neighbor_status [ixia::emulation_ospf_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555652"></a>
                  -port_handle $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555653"></a>
                  -reset \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555654"></a>
                  -session_type ospfv2 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555655"></a>
                  -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555656"></a>
                  -count 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555657"></a>
                  -intf_ip_addr $p_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555658"></a>
                  -intf_prefix_length $p_ip_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555659"></a>
                  -neighbor_intf_ip_addr $p_gw_addr \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555660"></a>
                  -router_id $p_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555661"></a>
                  -area_id 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555662"></a>
                  -area_id_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555663"></a>
                  -area_type external-capable \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555664"></a>
                  -authentication_mode null \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555665"></a>
                  -dead_interval 40 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555666"></a>
                  -hello_interval 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555667"></a>
                  -interface_cost 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555668"></a>
                  -network_type broadcast \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555669"></a>
                  -option_bits "0x02" ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555670"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555671"></a>
          if {[keylget ospf_neighbor_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555672"></a>
              return "FAIL - $test_name - [keylget ospf_neighbor_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555673"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555674"></a>
          set provider_ospf_handle [keylget ospf_neighbor_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555675"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555676"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555677"></a>
          # Create OSPFv2 PE Routes</p>
            <p class="CodeBlock"><a name="0_pgfId-3555678"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555679"></a>
          set route_config_status [::ixia::emulation_ospf_topology_route_config\</p>
            <p class="CodeBlock"><a name="0_pgfId-3555680"></a>
                  -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555681"></a>
                  -handle $provider_ospf_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555682"></a>
                  -type summary_routes \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555683"></a>
                  -summary_number_of_prefix $pe_count \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555684"></a>
                  -summary_prefix_start $pe_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555685"></a>
                  -summary_prefix_length $pe_ip_prefix ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555686"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555687"></a>
          if {[keylget route_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555688"></a>
              return "FAIL - $test_name - [keylget route_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555689"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555690"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555691"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555692"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555693"></a>
          # Create LDP Provider</p>
            <p class="CodeBlock"><a name="0_pgfId-3555694"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555695"></a>
          set ldp_routers_status [ixia::emulation_ldp_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555696"></a>
                  -reset \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555697"></a>
                  -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555698"></a>
                  -port_handle $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555699"></a>
                  -count 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555700"></a>
                  -intf_ip_addr $p_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555701"></a>
                  -intf_prefix_length 24 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555702"></a>
                  -gateway_ip_addr $p_gw_addr \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555703"></a>
                  -lsr_id $p_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555704"></a>
                  -label_space 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555705"></a>
                  -label_adv unsolicited \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555706"></a>
                  -peer_discovery link \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555707"></a>
                  -hello_interval 5 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555708"></a>
                  -hello_hold_time 15 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555709"></a>
                  -keepalive_interval 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555710"></a>
                  -keepalive_holdtime 30 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555711"></a>
                  -discard_self_adv_fecs 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555712"></a>
                  -enable_l2vpn_vc_fecs 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555713"></a>
                  -enable_explicit_include_ip_fec 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555714"></a>
                  -enable_remote_connect 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555715"></a>
                  -enable_vc_group_matching 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555716"></a>
                  -targeted_hello_hold_time 45 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555717"></a>
                  -targeted_hello_interval 15 ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555718"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555719"></a>
          if {[keylget ldp_routers_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555720"></a>
              return "FAIL - $test_name - [keylget ldp_routers_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555721"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555722"></a>
          set provider_ldp_handle [keylget ldp_routers_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555723"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555724"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555725"></a>
          # Create LDP PE Routers</p>
            <p class="CodeBlock"><a name="0_pgfId-3555726"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555727"></a>
          set pe_ip_address $pe_ip_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555728"></a>
          for {set i 0} {$i &lt; $pe_count} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555729"></a>
              set route_config_status [ixia::emulation_ldp_route_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555730"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555731"></a>
                      -handle $provider_ldp_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555732"></a>
                      -fec_type ipv4_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555733"></a>
                      -label_msg_type mapping \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555734"></a>
                      -egress_label_mode nextlabel \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555735"></a>
                      -num_lsps 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555736"></a>
                      -fec_ip_prefix_start $pe_ip_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555737"></a>
                      -fec_ip_prefix_length 32 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555738"></a>
                      -packing_enable 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555739"></a>
                      -label_value_start 3 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555740"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555741"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555742"></a>
              if {[keylget route_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555743"></a>
                  return "FAIL - $test_name - [keylget route_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555744"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555745"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555746"></a>
              set pe_ip_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555747"></a>
                      $pe_ip_address $pe_ip_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555748"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555749"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555750"></a>
          ##############################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555751"></a>
          # Configure PIM, P and PE neighbors</p>
            <p class="CodeBlock"><a name="0_pgfId-3555752"></a>
          ##############################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555753"></a>
          set pim_config_status [::ixia::emulation_pim_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555754"></a>
                  -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555755"></a>
                  -reset \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555756"></a>
                  -port_handle $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555757"></a>
                  -count 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555758"></a>
                  -ip_version 4 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555759"></a>
                  -intf_ip_addr $p_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555760"></a>
                  -intf_ip_addr_step $p_ip_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555761"></a>
                  -intf_ip_prefix_length $p_ip_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555762"></a>
                  -dr_priority 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555763"></a>
                  -bidir_capable 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555764"></a>
                  -hello_interval 30 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555765"></a>
                  -hello_holdtime 105 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555766"></a>
                  -join_prune_interval 60 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555767"></a>
                  -join_prune_holdtime 180 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555768"></a>
                  -prune_delay_enable 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555769"></a>
                  -prune_delay 500 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555770"></a>
                  -override_interval 2500 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555771"></a>
                  -gateway_intf_ip_addr $p_gw_addr \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555772"></a>
                  -gateway_intf_ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555773"></a>
                  -prune_delay_tbit 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555774"></a>
                  -send_generation_id 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555775"></a>
                  -generation_id_mode constant \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555776"></a>
                  -mvpn_enable 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555777"></a>
                  -mvpn_pe_ip $pe_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555778"></a>
                  -mvpn_pe_ip_incr $pe_ip_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555779"></a>
                  -mvpn_pe_count $pe_count \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555780"></a>
                  -mvrf_count $mvrf_count \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555781"></a>
                  -mvrf_unique 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555782"></a>
                  -default_mdt_ip $mdt_group_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555783"></a>
                  -default_mdt_ip_incr $mdt_group_addr_step ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555784"></a>
          if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555785"></a>
              return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555786"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555787"></a>
          set provider_pim_handle [lindex [keylget pim_config_status handle] 0]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555788"></a>
          set pe_pim_handles [lrange [keylget pim_config_status handle] 1 end]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555789"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555790"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555791"></a>
          # Create PIM MVPN sources on each PE</p>
            <p class="CodeBlock"><a name="0_pgfId-3555792"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555793"></a>
          set mvpn_rp_address $mvpn_rp_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555794"></a>
          set mvpn_source_address $mvpn_source_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555795"></a>
          set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555796"></a>
          foreach {pe_pim_handle} $pe_pim_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555797"></a>
              # Create multicast source pool</p>
            <p class="CodeBlock"><a name="0_pgfId-3555798"></a>
              set pim_config_status [::ixia::emulation_multicast_source_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555799"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555800"></a>
                      -num_sources $mvpn_num_sources \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555801"></a>
                      -ip_addr_start $mvpn_source_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555802"></a>
                      -ip_addr_step $mvpn_source_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555803"></a>
                      -ip_prefix_len $mvpn_source_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555804"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555805"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555806"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555807"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555808"></a>
              set mvpn_source_pool_handle [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555809"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555810"></a>
              # Create multicast group pool</p>
            <p class="CodeBlock"><a name="0_pgfId-3555811"></a>
              set pim_config_status [::ixia::emulation_multicast_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555812"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555813"></a>
                      -num_groups $mvpn_num_groups \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555814"></a>
                      -ip_addr_start $mvpn_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555815"></a>
                      -ip_addr_step $mvpn_group_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555816"></a>
                      -ip_prefix_len $mvpn_group_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555817"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555818"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555819"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555820"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555821"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555822"></a>
              set mvpn_group_pool_handle [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555823"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555824"></a>
              # Create PIM Source</p>
            <p class="CodeBlock"><a name="0_pgfId-3555825"></a>
              set pim_config_status [::ixia::emulation_pim_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555826"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555827"></a>
                      -session_handle $pe_pim_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555828"></a>
                      -group_pool_handle $mvpn_group_pool_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555829"></a>
                      -source_pool_handle $mvpn_source_pool_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555830"></a>
                      -rp_ip_addr $mvpn_rp_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555831"></a>
                      -rp_ip_addr_step $mvpn_rp_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555832"></a>
                      -group_pool_mode register \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555833"></a>
                      -join_prune_aggregation_factor 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555834"></a>
                      -wildcard_group 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555835"></a>
                      -s_g_rpt_group 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555836"></a>
                      -rate_control 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555837"></a>
                      -interval 100 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555838"></a>
                      -join_prune_per_interval 99 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555839"></a>
                      -register_per_interval 101 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555840"></a>
                      -register_stop_per_interval 102 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555841"></a>
                      -flap_interval 60 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555842"></a>
                      -spt_switchover 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555843"></a>
                      -source_group_mapping fully_meshed \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555844"></a>
                      -switch_over_interval 5 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555845"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555846"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555847"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555848"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555849"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555850"></a>
              if {$mvrf_unique == 0} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555851"></a>
                  set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555852"></a>
                  for {set i 0} {$i &lt; $mvpn_num_sources} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555853"></a>
                      set mvpn_source_address [script_increment_ipv4_net \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555854"></a>
                              $mvpn_source_address $mvpn_source_prefix]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555855"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555856"></a>
              } else {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555857"></a>
                  for {set i 0} {$i &lt; $mvrf_count} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555858"></a>
                      set mvpn_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555859"></a>
                              $mvpn_group_address $mvpn_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555860"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555861"></a>
                      set mvpn_source_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555862"></a>
                              $mvpn_source_address $mvpn_source_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555863"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555864"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555865"></a>
              set mvpn_rp_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555866"></a>
                      $mvpn_rp_address $mvpn_rp_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555867"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555868"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555869"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555870"></a>
          # Create PIM MDT sources on each PE</p>
            <p class="CodeBlock"><a name="0_pgfId-3555871"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555872"></a>
          set mdt_source_address $pe_ip_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555873"></a>
          set mdt_source_addr_step $pe_ip_addr_step</p>
            <p class="CodeBlock"><a name="0_pgfId-3555874"></a>
          set mdt_source_prefix $pe_ip_prefix</p>
            <p class="CodeBlock"><a name="0_pgfId-3555875"></a>
          set mdt_num_sources 1</p>
            <p class="CodeBlock"><a name="0_pgfId-3555876"></a>
          set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555877"></a>
          foreach {pe_pim_handle} $pe_pim_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555878"></a>
              # Create multicat source</p>
            <p class="CodeBlock"><a name="0_pgfId-3555879"></a>
              set pim_config_status [::ixia::emulation_multicast_source_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555880"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555881"></a>
                      -num_sources $mdt_num_sources \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555882"></a>
                      -ip_addr_start $mdt_source_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555883"></a>
                      -ip_addr_step $mdt_source_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555884"></a>
                      -ip_prefix_len $mdt_source_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555885"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555886"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555887"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555888"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555889"></a>
              set mdt_source_pool_handle [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555890"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555891"></a>
              # Create multicast group</p>
            <p class="CodeBlock"><a name="0_pgfId-3555892"></a>
              set pim_config_status [::ixia::emulation_multicast_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555893"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555894"></a>
                      -num_groups $mvrf_count \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555895"></a>
                      -ip_addr_start $mdt_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555896"></a>
                      -ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555897"></a>
                      -ip_prefix_len 32 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555898"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555899"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555900"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555901"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555902"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555903"></a>
              set mdt_group_pool_handle [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555904"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555905"></a>
              # Create PIM Source</p>
            <p class="CodeBlock"><a name="0_pgfId-3555906"></a>
              set pim_config_status [::ixia::emulation_pim_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555907"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555908"></a>
                      -session_handle $pe_pim_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555909"></a>
                      -group_pool_handle $mdt_group_pool_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555910"></a>
                      -source_pool_handle $mdt_source_pool_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555911"></a>
                      -rp_ip_addr $p_rp_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555912"></a>
                      -rp_ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555913"></a>
                      -group_pool_mode register \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555914"></a>
                      -join_prune_aggregation_factor 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555915"></a>
                      -wildcard_group 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555916"></a>
                      -s_g_rpt_group 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555917"></a>
                      -rate_control 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555918"></a>
                      -interval 100 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555919"></a>
                      -join_prune_per_interval 99 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555920"></a>
                      -register_per_interval 101 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555921"></a>
                      -register_stop_per_interval 102 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555922"></a>
                      -register_tx_iteration_gap 6000 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555923"></a>
                      -flap_interval 60 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555924"></a>
                      -spt_switchover 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555925"></a>
                      -source_group_mapping fully_meshed \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555926"></a>
                      -switch_over_interval 5 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555927"></a>
                      -send_null_register 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555928"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555929"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555930"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555931"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555932"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555933"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555934"></a>
              if {$mvrf_unique == 0} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555935"></a>
                  set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555936"></a>
                  for {set i 0} {$i &lt; $mdt_num_sources} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555937"></a>
                      set mdt_source_address [script_increment_ipv4_net \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555938"></a>
                              $mdt_source_address $mdt_source_prefix]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555939"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555940"></a>
              } else {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555941"></a>
                  for {set i 0} {$i &lt; $mvrf_count} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555942"></a>
                      set mdt_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555943"></a>
                              $mdt_group_address $mdt_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555944"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555945"></a>
                      set mvpn_source_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555946"></a>
                              $mdt_source_address $mdt_source_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555947"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555948"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555949"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555950"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555951"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555952"></a>
          # Create PIM Provider groups</p>
            <p class="CodeBlock"><a name="0_pgfId-3555953"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555954"></a>
          set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3555955"></a>
          for {set i 0} {$i &lt; $total_mvrf_count} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555956"></a>
              set pim_config_status [::ixia::emulation_multicast_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555957"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555958"></a>
                      -num_groups 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555959"></a>
                      -ip_addr_start $mdt_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555960"></a>
                      -ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555961"></a>
                      -ip_prefix_len 32 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555962"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555963"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555964"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555965"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555966"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555967"></a>
              set mdt_group_pool_handle [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555968"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555969"></a>
              set pim_config_status [::ixia::emulation_pim_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555970"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555971"></a>
                      -session_handle $provider_pim_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555972"></a>
                      -group_pool_handle $mdt_group_pool_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555973"></a>
                      -rp_ip_addr $p_rp_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555974"></a>
                      -rp_ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555975"></a>
                      -join_prune_aggregation_factor 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555976"></a>
                      -s_g_rpt_group 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555977"></a>
                      -rate_control 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555978"></a>
                      -interval 100 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555979"></a>
                      -join_prune_per_interval 99 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555980"></a>
                      -register_per_interval 101 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555981"></a>
                      -register_stop_per_interval 102 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555982"></a>
                      -flap_interval 60 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555983"></a>
                      -spt_switchover 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555984"></a>
                      -source_group_mapping fully_meshed \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555985"></a>
                      -switch_over_interval 5 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555986"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555987"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555988"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3555989"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3555990"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555991"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3555992"></a>
              set mdt_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3555993"></a>
                      $mdt_group_address $mdt_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3555994"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3555995"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3555996"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555997"></a>
          # Configure PIM CE Routers</p>
            <p class="CodeBlock"><a name="0_pgfId-3555998"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3555999"></a>
          set pim_config_status [::ixia::emulation_pim_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556000"></a>
                  -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556001"></a>
                  -reset \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556002"></a>
                  -port_handle $ce_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556003"></a>
                  -count $ce_count \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556004"></a>
                  -ip_version 4 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556005"></a>
                  -intf_ip_addr $ce_ip_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556006"></a>
                  -intf_ip_addr_step $ce_ip_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556007"></a>
                  -vlan_id $ce_vlan_id_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556008"></a>
                  -vlan_id_step $ce_vlan_id_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556009"></a>
                  -dr_priority 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556010"></a>
                  -bidir_capable 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556011"></a>
                  -hello_interval 30 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556012"></a>
                  -hello_holdtime 105 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556013"></a>
                  -join_prune_interval 60 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556014"></a>
                  -join_prune_holdtime 180 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556015"></a>
                  -prune_delay_enable 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556016"></a>
                  -prune_delay 500 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556017"></a>
                  -override_interval 2500 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556018"></a>
                  -gateway_intf_ip_addr $ce_gw_addr_start \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556019"></a>
                  -gateway_intf_ip_addr_step $ce_gw_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556020"></a>
                  -prune_delay_tbit 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556021"></a>
                  -send_generation_id 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556022"></a>
                  -generation_id_mode constant ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556023"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556024"></a>
          if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556025"></a>
              return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556026"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556027"></a>
          set ce_pim_handles [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556028"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556029"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556030"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3556031"></a>
          # Create CE PIM groups</p>
            <p class="CodeBlock"><a name="0_pgfId-3556032"></a>
          ################################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3556033"></a>
          set mvpn_source_address $mvpn_source_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556034"></a>
          set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556035"></a>
          set mvpn_rp_address $mvpn_rp_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556036"></a>
          foreach {ce_pim_handle} $ce_pim_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556037"></a>
              set pim_config_status [::ixia::emulation_multicast_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556038"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556039"></a>
                      -num_groups 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556040"></a>
                      -ip_addr_start $mvpn_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556041"></a>
                      -ip_addr_step $mvpn_group_addr_step \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556042"></a>
                      -ip_prefix_len $mvpn_group_prefix \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556043"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556044"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556045"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556046"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556047"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556048"></a>
              set mvpn_group_pool_handle [keylget pim_config_status handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556049"></a>
              set pim_config_status [::ixia::emulation_pim_group_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556050"></a>
                      -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556051"></a>
                      -session_handle $ce_pim_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556052"></a>
                      -group_pool_handle $mvpn_group_pool_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556053"></a>
                      -rp_ip_addr $mvpn_rp_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556054"></a>
                      -rp_ip_addr_step 0.0.0.0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556055"></a>
                      -join_prune_aggregation_factor 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556056"></a>
                      -s_g_rpt_group 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556057"></a>
                      -rate_control 1 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556058"></a>
                      -interval 100 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556059"></a>
                      -join_prune_per_interval 99 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556060"></a>
                      -register_per_interval 101 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556061"></a>
                      -register_stop_per_interval 102 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556062"></a>
                      -flap_interval 60 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556063"></a>
                      -spt_switchover 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556064"></a>
                      -source_group_mapping fully_meshed \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556065"></a>
                      -switch_over_interval 5 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556066"></a>
                      ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556067"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556068"></a>
              if {[keylget pim_config_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556069"></a>
                  return "FAIL - $test_name - [keylget pim_config_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556070"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556071"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556072"></a>
              set mvpn_rp_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556073"></a>
                      $mvpn_rp_address $mvpn_rp_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556074"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556075"></a>
              set mvpn_source_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556076"></a>
                      $mvpn_source_address $mvpn_source_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556077"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556078"></a>
              set mvpn_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556079"></a>
                      $mvpn_group_address $mvpn_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556080"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556081"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556082"></a>
          set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556083"></a>
          set pe_ip_address $pe_ip_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556084"></a>
          set mvpn_source_address $mvpn_source_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556085"></a>
          set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556086"></a>
          for {set i 0} {$i &lt; $pe_count} {incr i} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556087"></a>
              for {set j 0} {$j &lt; $mvrf_count} {incr j} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556088"></a>
                  set traffic_status [ixia::traffic_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556089"></a>
                          -mode create \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556090"></a>
                          -port_handle 	 $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556091"></a>
                          -frame_size 100 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556092"></a>
                          -l3_protocol 	 ipv4	 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556093"></a>
                          -l4_protocol 	 gre \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556094"></a>
                          -ip_src_addr 	 $pe_ip_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556095"></a>
                          -ip_dst_addr 	 $mdt_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556096"></a>
                          -gre_version 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556097"></a>
                          -inner_protocol ipv4 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556098"></a>
                          -inner_ip_src_addr $mvpn_source_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556099"></a>
                          -inner_ip_dst_addr $mvpn_group_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556100"></a>
                          -rate_percent 10 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556101"></a>
                          -enable_time_stamp 0 \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556102"></a>
                          -mac_dst_mode discovery ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556103"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556104"></a>
                  if {[keylget traffic_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556105"></a>
                      return "FAIL - $test_name - [keylget traffic_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556106"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556107"></a>
                  set mvpn_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556108"></a>
                          $mvpn_group_address $mvpn_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556109"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556110"></a>
                  set mvpn_source_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556111"></a>
                          $mvpn_source_address $mvpn_source_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556112"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556113"></a>
                  set mdt_group_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556114"></a>
                          $mdt_group_address $mdt_group_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556115"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556116"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556117"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556118"></a>
              set pe_ip_address [script_increment_ipv4_address \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556119"></a>
                      $pe_ip_address $pe_ip_addr_step]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556120"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556121"></a>
              if {$mvrf_unique == 0} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556122"></a>
                  set mdt_group_address $mdt_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556123"></a>
                  set mvpn_group_address $mvpn_group_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556124"></a>
                  set mvpn_source_address $mvpn_source_addr_start</p>
            <p class="CodeBlock"><a name="0_pgfId-3556125"></a>
                  for {set k 0} {$k &lt; $mvpn_num_sources} {incr k} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556126"></a>
                      set mvpn_source_address [script_increment_ipv4_net \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556127"></a>
                              $mvpn_source_address $mvpn_source_prefix]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556128"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556129"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556130"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556131"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556132"></a>
          set interface_status [::ixia::interface_config \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556133"></a>
                  -port_handle $port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556134"></a>
                  -arp_send_req 1 ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556135"></a>
          if {[keylget interface_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556136"></a>
              return "FAIL - $test_name - [keylget interface_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556137"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556138"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556139"></a>
          # Start BGP protocol</p>
            <p class="CodeBlock"><a name="0_pgfId-3556140"></a>
          foreach {bgp_neighbor} $pe_bgp_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556141"></a>
              set bgp_control_status [ixia::emulation_bgp_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556142"></a>
                      -handle $bgp_neighbor \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556143"></a>
                      -mode start ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556144"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556145"></a>
              if {[keylget bgp_control_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556146"></a>
                  return "FAIL - $test_name - [keylget bgp_control_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556147"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556148"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556149"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556150"></a>
          # Start OSPF protocol</p>
            <p class="CodeBlock"><a name="0_pgfId-3556151"></a>
          set ospf_control_status [ixia::emulation_ospf_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556152"></a>
                  -handle $provider_ospf_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556153"></a>
                  -mode start ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556154"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556155"></a>
          if {[keylget ospf_control_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556156"></a>
              return "FAIL - $test_name - [keylget ospf_control_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556157"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556158"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556159"></a>
          # Start LDP protocol</p>
            <p class="CodeBlock"><a name="0_pgfId-3556160"></a>
          set ldp_control_status [ixia::emulation_ldp_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556161"></a>
                  -port_handle $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556162"></a>
                  -mode start ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556163"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556164"></a>
          if {[keylget ldp_control_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556165"></a>
              return "FAIL - $test_name - [keylget ldp_control_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556166"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556167"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556168"></a>
          # Start PIM protocol</p>
            <p class="CodeBlock"><a name="0_pgfId-3556169"></a>
          set pim_control_status [ixia::emulation_pim_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556170"></a>
                  -handle $provider_pim_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556171"></a>
                  -mode start ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556172"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556173"></a>
          if {[keylget pim_control_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556174"></a>
              return "FAIL - $test_name - [keylget pim_control_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556175"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556176"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556177"></a>
          foreach {pim_neighbor} $pe_pim_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556178"></a>
              set pim_control_status [ixia::emulation_pim_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556179"></a>
                      -handle $pim_neighbor \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556180"></a>
                      -mode start ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556181"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556182"></a>
              if {[keylget pim_control_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556183"></a>
                  return "FAIL - $test_name - [keylget pim_control_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556184"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556185"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556186"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556187"></a>
          foreach {pim_neighbor} $ce_pim_handles {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556188"></a>
              set pim_control_status [ixia::emulation_pim_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556189"></a>
                      -handle $pim_neighbor \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556190"></a>
                      -mode start ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556191"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556192"></a>
              if {[keylget pim_control_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556193"></a>
                  return "FAIL - $test_name - [keylget pim_control_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556194"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556195"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556196"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556197"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556198"></a>
          # Wait 100 seconds for BGP sessions to establish</p>
            <p class="CodeBlock"><a name="0_pgfId-3556199"></a>
          after 100000</p>
            <p class="CodeBlock"><a name="0_pgfId-3556200"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556201"></a>
          set port_handle [concat $pe_port_handle $ce_port_handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556202"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556203"></a>
          # Clear all statistics on ports</p>
            <p class="CodeBlock"><a name="0_pgfId-3556204"></a>
          set traffic_status [ixia::traffic_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556205"></a>
                  -action clear_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556206"></a>
                  -port_handle $port_handle ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556207"></a>
          if {[keylget traffic_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556208"></a>
              return "FAIL - $test_name - [keylget traffic_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556209"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556210"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556211"></a>
          # Start traffic on TX ports</p>
            <p class="CodeBlock"><a name="0_pgfId-3556212"></a>
          set traffic_status [ixia::traffic_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556213"></a>
                  -action run \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556214"></a>
                  -port_handle $pe_port_handle ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556215"></a>
          if {[keylget traffic_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556216"></a>
              return "FAIL - $test_name - [keylget traffic_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556217"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556218"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556219"></a>
          # Procedure to print stats</p>
            <p class="CodeBlock"><a name="0_pgfId-3556220"></a>
          proc post_stats {port_handle label key_list stat_key {stream ""}} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556221"></a>
              puts -nonewline [format "%-30s" $label]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556222"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556223"></a>
              foreach port $port_handle {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556224"></a>
                  if {$stream != ""} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556225"></a>
                      set key $port.stream.$stream.$stat_key</p>
            <p class="CodeBlock"><a name="0_pgfId-3556226"></a>
                  } else {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556227"></a>
                      set key $port.$stat_key</p>
            <p class="CodeBlock"><a name="0_pgfId-3556228"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556229"></a>
            </p>
            <p class="CodeBlock"><a name="0_pgfId-3556230"></a>
                  if {[llength [keylget key_list $key]] &gt; 1} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556231"></a>
                      puts -nonewline "[format "%-16s" N/A]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556232"></a>
                  } else {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556233"></a>
                      puts -nonewline "[format "%-16s" [keylget key_list $key]]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556234"></a>
                  }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556235"></a>
              }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556236"></a>
              puts ""</p>
            <p class="CodeBlock"><a name="0_pgfId-3556237"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556238"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556239"></a>
          # Wait for TX port to send traffic</p>
            <p class="CodeBlock"><a name="0_pgfId-3556240"></a>
          after 10000</p>
            <p class="CodeBlock"><a name="0_pgfId-3556241"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556242"></a>
          # Stop traffic on the TX port</p>
            <p class="CodeBlock"><a name="0_pgfId-3556243"></a>
          set traffic_stop_status [ixia::traffic_control \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556244"></a>
                  -port_handle $pe_port_handle \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556245"></a>
                  -action stop ]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556246"></a>
          if {[keylget traffic_stop_status status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556247"></a>
              return "FAIL - $test_name - [keylget traffic_stop_status log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556248"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556249"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556250"></a>
          ###############################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3556251"></a>
          # Retrieve stats after stopped</p>
            <p class="CodeBlock"><a name="0_pgfId-3556252"></a>
          ###############################################################################</p>
            <p class="CodeBlock"><a name="0_pgfId-3556253"></a>
          # Get aggregrate stats for all ports</p>
            <p class="CodeBlock"><a name="0_pgfId-3556254"></a>
          set aggregate_stats [ixia::traffic_stats -port_handle $port_handle]</p>
            <p class="CodeBlock"><a name="0_pgfId-3556255"></a>
          if {[keylget aggregate_stats status] != $SUCCESS} {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556256"></a>
              return "FAIL - $test_name - [keylget aggregate_stats log]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556257"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556258"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556259"></a>
          puts "\n************************* STATISTICS **************************"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556260"></a>
          puts -nonewline "[format "%-30s" " "]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556261"></a>
          foreach port $port_handle {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556262"></a>
              puts -nonewline "[format "%-16s" $port]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556263"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556264"></a>
          puts ""</p>
            <p class="CodeBlock"><a name="0_pgfId-3556265"></a>
          puts -nonewline "[format "%-30s" " "]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556266"></a>
          foreach port $port_handle {</p>
            <p class="CodeBlock"><a name="0_pgfId-3556267"></a>
              puts -nonewline "[format "%-16s" "-----"]"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556268"></a>
          }</p>
            <p class="CodeBlock"><a name="0_pgfId-3556269"></a>
          puts ""</p>
            <p class="CodeBlock"><a name="0_pgfId-3556270"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556271"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556272"></a>
          post_stats $port_handle "Elapsed Time" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556273"></a>
                  aggregate.tx.elapsed_time</p>
            <p class="CodeBlock"><a name="0_pgfId-3556274"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556275"></a>
          post_stats $port_handle "Packets Tx" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556276"></a>
                  aggregate.tx.pkt_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556277"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556278"></a>
          post_stats $port_handle "Bytes Tx" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556279"></a>
                  aggregate.tx.pkt_byte_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556280"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556281"></a>
          post_stats $port_handle "Bits Tx" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556282"></a>
                  aggregate.tx.pkt_bit_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556283"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556284"></a>
          post_stats $port_handle "Packets Rx" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556285"></a>
                  aggregate.rx.pkt_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556286"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556287"></a>
          post_stats $port_handle "Collisions" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556288"></a>
                  aggregate.rx.collisions_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556289"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556290"></a>
          post_stats $port_handle "Dribble Errors" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556291"></a>
                  aggregate.rx.dribble_errors_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556292"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556293"></a>
          post_stats $port_handle "CRCs" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556294"></a>
                  aggregate.rx.crc_errors_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556295"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556296"></a>
          post_stats $port_handle "Oversizes" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556297"></a>
                  aggregate.rx.oversize_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556298"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556299"></a>
          post_stats $port_handle "Undersizes" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556300"></a>
                  aggregate.rx.undersize_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556301"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556302"></a>
          post_stats $port_handle "Data Integrity Frames" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556303"></a>
                  aggregate.rx.data_int_frames_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556304"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556305"></a>
          post_stats $port_handle "Data Integrity Error" $aggregate_stats \</p>
            <p class="CodeBlock"><a name="0_pgfId-3556306"></a>
                  aggregate.rx.data_int_errors_count</p>
            <p class="CodeBlock"><a name="0_pgfId-3556307"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556308"></a>
          puts "***************************************************************\n"</p>
            <p class="CodeBlock"><a name="0_pgfId-3556309"></a>
          &#160;</p>
            <p class="CodeBlock"><a name="0_pgfId-3556310"></a>
          return "SUCCESS - $test_name - [clock format [clock seconds]]"</p>
        </div>
    </body>
</html>