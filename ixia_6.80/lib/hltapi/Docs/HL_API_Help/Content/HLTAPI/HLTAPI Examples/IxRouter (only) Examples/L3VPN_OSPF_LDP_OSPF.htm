<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxRouter (only) Examples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>L3VPN (L3VPN_OSPF_LDP_OSPF.tcl)</title>
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxRouter (only) Examples/L3VPN_OSPF_LDP_OSPF.htm">Open topic with navigation</a>
        </p>
        <h3>L3VPN (L3VPN_OSPF_LDP_OSPF.tcl)</h3>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554672"></a>
          # Description: #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554673"></a>
          # This sample creates a L3VPN setup. It uses two Ixia ports. One port is #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554674"></a>
          # used as a PE and P router. One port is used as CE router. #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554675"></a>
          # Streams are generated on both ports and then started. #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554676"></a>
                                                                               #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554677"></a>
          ------ ----- ----- ------ #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554678"></a>
          # | PE |-----| P |---------| DUT |--------| CE | #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554679"></a>
          ------ ----- | ----- | ------ #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554680"></a>
                                 | | #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554681"></a>
                Ixia port 1 | Cisco 6500 | Ixia port 2 #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554682"></a>
                                                                               #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554683"></a>
          # PE runs mBGP #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554684"></a>
          # P runs LDP and OSPF #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554685"></a>
          # CE runs OSPF #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554686"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554687"></a>
          # conf t</p>
        <p class="CodeBlock"><a name="0_pgfId-3554688"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554689"></a>
          # ip cef</p>
        <p class="CodeBlock"><a name="0_pgfId-3554690"></a>
          # ip vrf vpn901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554691"></a>
          # description vpn901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554692"></a>
          # rd 901:1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554693"></a>
          # route-target export 901:1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554694"></a>
          # route-target import 901:1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554695"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554696"></a>
          # ip multicast-routing</p>
        <p class="CodeBlock"><a name="0_pgfId-3554697"></a>
          # mpls label protocol ldp</p>
        <p class="CodeBlock"><a name="0_pgfId-3554698"></a>
          # mpls traffic-eng tunnels</p>
        <p class="CodeBlock"><a name="0_pgfId-3554699"></a>
          # tag-switching tdp discovery directed-hello accept</p>
        <p class="CodeBlock"><a name="0_pgfId-3554700"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554701"></a>
          # interface Loopback0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554702"></a>
          # ip address 110.0.110.1 255.255.255.255</p>
        <p class="CodeBlock"><a name="0_pgfId-3554703"></a>
          # no ip directed-broadcast</p>
        <p class="CodeBlock"><a name="0_pgfId-3554704"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554705"></a>
          # interface GigabitEthernet0/2</p>
        <p class="CodeBlock"><a name="0_pgfId-3554706"></a>
          # no ip address</p>
        <p class="CodeBlock"><a name="0_pgfId-3554707"></a>
          # no ip directed-broadcast</p>
        <p class="CodeBlock"><a name="0_pgfId-3554708"></a>
          # load-interval 30</p>
        <p class="CodeBlock"><a name="0_pgfId-3554709"></a>
          # duplex auto</p>
        <p class="CodeBlock"><a name="0_pgfId-3554710"></a>
          # speed auto</p>
        <p class="CodeBlock"><a name="0_pgfId-3554711"></a>
          # media-type rj45</p>
        <p class="CodeBlock"><a name="0_pgfId-3554712"></a>
          # negotiation auto</p>
        <p class="CodeBlock"><a name="0_pgfId-3554713"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554714"></a>
          # interface GigabitEthernet0/2.1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554715"></a>
          # description vpn901_ce</p>
        <p class="CodeBlock"><a name="0_pgfId-3554716"></a>
          # encapsulation dot1Q 901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554717"></a>
          # ip vrf forwarding vpn901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554718"></a>
          # ip address 100.27.0.1 255.255.255.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554719"></a>
          # no ip directed-broadcast</p>
        <p class="CodeBlock"><a name="0_pgfId-3554720"></a>
          # no cdp enable</p>
        <p class="CodeBlock"><a name="0_pgfId-3554721"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554722"></a>
          # interface GigabitEthernet0/3</p>
        <p class="CodeBlock"><a name="0_pgfId-3554723"></a>
          # ip address 100.28.0.1 255.255.255.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554724"></a>
          # no ip directed-broadcast</p>
        <p class="CodeBlock"><a name="0_pgfId-3554725"></a>
          # ip ospf network broadcast</p>
        <p class="CodeBlock"><a name="0_pgfId-3554726"></a>
          # load-interval 30</p>
        <p class="CodeBlock"><a name="0_pgfId-3554727"></a>
          # duplex auto</p>
        <p class="CodeBlock"><a name="0_pgfId-3554728"></a>
          # speed auto</p>
        <p class="CodeBlock"><a name="0_pgfId-3554729"></a>
          # media-type rj45</p>
        <p class="CodeBlock"><a name="0_pgfId-3554730"></a>
          # negotiation auto</p>
        <p class="CodeBlock"><a name="0_pgfId-3554731"></a>
          # mpls label protocol ldp</p>
        <p class="CodeBlock"><a name="0_pgfId-3554732"></a>
          # tag-switching ip</p>
        <p class="CodeBlock"><a name="0_pgfId-3554733"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554734"></a>
          # router ospf 101 vrf vpn901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554735"></a>
          # log-adjacency-changes</p>
        <p class="CodeBlock"><a name="0_pgfId-3554736"></a>
          # network 100.27.0.0 0.0.0.255 area 0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554737"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554738"></a>
          # router ospf 901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554739"></a>
          # mpls traffic-eng router-id Loopback0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554740"></a>
          # mpls traffic-eng area 0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554741"></a>
          # log-adjacency-changes</p>
        <p class="CodeBlock"><a name="0_pgfId-3554742"></a>
          # network 100.28.0.0 0.0.0.255 area 0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554743"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554744"></a>
          # router bgp 1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554745"></a>
          # no bgp default ipv4-unicast</p>
        <p class="CodeBlock"><a name="0_pgfId-3554746"></a>
          # bgp log-neighbor-changes</p>
        <p class="CodeBlock"><a name="0_pgfId-3554747"></a>
          # neighbor 110.0.110.100 remote-as 1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554748"></a>
          # neighbor 110.0.110.100 update-source Loopback0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554749"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554750"></a>
          # address-family vpnv4</p>
        <p class="CodeBlock"><a name="0_pgfId-3554751"></a>
          # neighbor 110.0.110.100 activate</p>
        <p class="CodeBlock"><a name="0_pgfId-3554752"></a>
          # neighbor 110.0.110.100 send-community extended</p>
        <p class="CodeBlock"><a name="0_pgfId-3554753"></a>
          # exit-address-family</p>
        <p class="CodeBlock"><a name="0_pgfId-3554754"></a>
          #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554755"></a>
          # address-family ipv4 vrf vpn901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554756"></a>
          # redistribute ospf 101 match internal external 1 external 2</p>
        <p class="CodeBlock"><a name="0_pgfId-3554757"></a>
          # no synchronization</p>
        <p class="CodeBlock"><a name="0_pgfId-3554758"></a>
          # exit-address-family</p>
        <p class="CodeBlock"><a name="0_pgfId-3554759"></a>
          # end</p>
        <p class="CodeBlock"><a name="0_pgfId-3554760"></a>
          ################################################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554761"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554762"></a>
          package require Ixia</p>
        <p class="CodeBlock"><a name="0_pgfId-3554763"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554764"></a>
          set test_name [info script]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554765"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554766"></a>
          set chassisIP sylvester</p>
        <p class="CodeBlock"><a name="0_pgfId-3554767"></a>
          set port_list [list 1/1 1/2]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554768"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554769"></a>
          set pe_ip_address 110.0.110.100</p>
        <p class="CodeBlock"><a name="0_pgfId-3554770"></a>
          set bgp_peer_ip 110.0.110.1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554771"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554772"></a>
          set p_ip_address 100.28.0.2</p>
        <p class="CodeBlock"><a name="0_pgfId-3554773"></a>
          set p_prefix_len 24</p>
        <p class="CodeBlock"><a name="0_pgfId-3554774"></a>
          set p_gateway_ip 100.28.0.1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554775"></a>
          set p_mac_address 0000.0002.0003</p>
        <p class="CodeBlock"><a name="0_pgfId-3554776"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554777"></a>
          set ce_ip_address 100.27.0.2</p>
        <p class="CodeBlock"><a name="0_pgfId-3554778"></a>
          set ce_prefix_len 24</p>
        <p class="CodeBlock"><a name="0_pgfId-3554779"></a>
          set ce_gateway_ip 100.27.0.1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554780"></a>
          set ce_vlan_id 901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554781"></a>
          set ce_mac_address 0000.0001.0002</p>
        <p class="CodeBlock"><a name="0_pgfId-3554782"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554783"></a>
          set bgp_router_id 1.2.3.4</p>
        <p class="CodeBlock"><a name="0_pgfId-3554784"></a>
          set bgp_as 1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554785"></a>
          set ospf_router_id 1.2.3.4</p>
        <p class="CodeBlock"><a name="0_pgfId-3554786"></a>
          set ospf_area_id 0.0.0.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554787"></a>
          set p_lsr_id 1.2.3.4</p>
        <p class="CodeBlock"><a name="0_pgfId-3554788"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554789"></a>
          set rd_target_type 0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554790"></a>
          set rd_admin_value 901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554791"></a>
          set rd_assign_value 1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554792"></a>
          set vrf_target_type "as"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554793"></a>
          set vrf_admin_value 901</p>
        <p class="CodeBlock"><a name="0_pgfId-3554794"></a>
          set vrf_assign_value 1</p>
        <p class="CodeBlock"><a name="0_pgfId-3554795"></a>
          set vrf_network 77.77.78.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554796"></a>
          set vrf_prefix 255.255.255.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554797"></a>
          set vrf_num_routes 2</p>
        <p class="CodeBlock"><a name="0_pgfId-3554798"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554799"></a>
          set ospf_ce_router_id 5.6.7.8</p>
        <p class="CodeBlock"><a name="0_pgfId-3554800"></a>
          set ospf_ce_area_id 0.0.0.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554801"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554802"></a>
          set c_network1 67.67.68.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554803"></a>
          set c_prefix_len1 24</p>
        <p class="CodeBlock"><a name="0_pgfId-3554804"></a>
          set c_num_prefixes1 3</p>
        <p class="CodeBlock"><a name="0_pgfId-3554805"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554806"></a>
          set c_network2 57.57.58.0</p>
        <p class="CodeBlock"><a name="0_pgfId-3554807"></a>
          set c_prefix_len2 24</p>
        <p class="CodeBlock"><a name="0_pgfId-3554808"></a>
          set c_num_prefixes2 2</p>
        <p class="CodeBlock"><a name="0_pgfId-3554809"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554810"></a>
          # Connect to the chassis,reset to factory defaults and take ownership</p>
        <p class="CodeBlock"><a name="0_pgfId-3554811"></a>
          set connect_status [::ixia::connect \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554812"></a>
                  -reset \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554813"></a>
                  -device $chassisIP \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554814"></a>
                  -port_list $port_list \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554815"></a>
                  -username ixiaApiUser]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554816"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554817"></a>
          if {[keylget connect_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554818"></a>
              return "FAIL - $test_name - [keylget connect_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554819"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554820"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554821"></a>
          set port_handle [list]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554822"></a>
          foreach port $port_list {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554823"></a>
              if {![catch {keylget connect_status port_handle.$chassisIP.$port} \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554824"></a>
                          temp_port]} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554825"></a>
                  lappend port_handle $temp_port</p>
        <p class="CodeBlock"><a name="0_pgfId-3554826"></a>
              }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554827"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554828"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554829"></a>
          set pe_port [lindex $port_handle 0]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554830"></a>
          set ce_port [lindex $port_handle 1]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554831"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554832"></a>
          # Initialize ports</p>
        <p class="CodeBlock"><a name="0_pgfId-3554833"></a>
          set intf_status [::ixia::interface_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554834"></a>
                  -port_handle "$pe_port $ce_port" \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554835"></a>
                  -autonegotiation 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554836"></a>
                  -transmit_mode advanced ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554837"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554838"></a>
          #################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554839"></a>
          # Configure OSPFv2 neighbor on P/PE port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554840"></a>
          #################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554841"></a>
          set ospf_neighbor_status [ixia::emulation_ospf_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554842"></a>
                  -port_handle $pe_port \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554843"></a>
                  -reset \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554844"></a>
                  -session_type ospfv2 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554845"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554846"></a>
                  -count 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554847"></a>
                  -mac_address_init $p_mac_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554848"></a>
                  -intf_ip_addr $p_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554849"></a>
                  -intf_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554850"></a>
                  -router_id $ospf_router_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554851"></a>
                  -router_id_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554852"></a>
                  -neighbor_intf_ip_addr $p_gateway_ip \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554853"></a>
                  -neighbor_intf_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554854"></a>
                  -loopback_ip_addr $pe_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554855"></a>
                  -loopback_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554856"></a>
                  -area_id $ospf_area_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554857"></a>
                  -area_id_step 0.0.0.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554858"></a>
                  -area_type external-capable \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554859"></a>
                  -network_type broadcast ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554860"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554861"></a>
          if {[keylget ospf_neighbor_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554862"></a>
              return "FAIL - $test_name - [keylget ospf_neighbor_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554863"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554864"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554865"></a>
          set ospf_handle [keylget ospf_neighbor_status handle]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554866"></a>
          ##################### End of OSPF PE configuration ##################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554867"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554868"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554869"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554870"></a>
          # Configure LDP Neighbor on P/PE port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554871"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554872"></a>
          set ldp_routers_status [ixia::emulation_ldp_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554873"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554874"></a>
                  -port_handle $pe_port \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554875"></a>
                  -label_adv unsolicited \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554876"></a>
                  -peer_discovery link \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554877"></a>
                  -count 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554878"></a>
                  -intf_ip_addr $p_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554879"></a>
                  -intf_prefix_length $p_prefix_len \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554880"></a>
                  -intf_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554881"></a>
                  -lsr_id $p_lsr_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554882"></a>
                  -label_space 0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554883"></a>
                  -lsr_id_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554884"></a>
                  -mac_address_init $p_mac_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554885"></a>
                  -gateway_ip_addr $p_gateway_ip \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554886"></a>
                  -gateway_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554887"></a>
                  -reset ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554888"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554889"></a>
          if {[keylget ldp_routers_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554890"></a>
              return "FAIL - $test_name - [keylget ldp_routers_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554891"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554892"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554893"></a>
          set ldp_handle [keylget ldp_routers_status handle]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554894"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554895"></a>
          #################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554896"></a>
          # Configure ipv4_prefix fec type routes #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554897"></a>
          #################################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554898"></a>
          set ldp_routers_status [ixia::emulation_ldp_route_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554899"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554900"></a>
                  -handle $ldp_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554901"></a>
                  -fec_type ipv4_prefix \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554902"></a>
                  -label_msg_type mapping \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554903"></a>
                  -fec_ip_prefix_start $pe_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554904"></a>
                  -fec_ip_prefix_length 32 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554905"></a>
                  -egress_label_mode imnull ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554906"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554907"></a>
          ##################### End of LDP PE configuration ##################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554908"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554909"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554910"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554911"></a>
          # Configure BGP Neighbor on PE port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554912"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554913"></a>
          set bgp_router_status [ixia::emulation_bgp_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554914"></a>
                  -mode reset \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554915"></a>
                  -port_handle 	 $pe_port \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554916"></a>
                  -local_ip_addr $p_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554917"></a>
                  -remote_ip_addr $p_gateway_ip \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554918"></a>
                  -local_addr_step 0.0.0.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554919"></a>
                  -local_loopback_ip_addr $pe_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554920"></a>
                  -remote_loopback_ip_addr $bgp_peer_ip \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554921"></a>
                  -local_loopback_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554922"></a>
                  -count 	 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554923"></a>
                  -mac_address_start $p_mac_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554924"></a>
                  -local_router_id $bgp_router_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554925"></a>
                  -neighbor_type internal \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554926"></a>
                  -ip_version 4 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554927"></a>
                  -local_as $bgp_as \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554928"></a>
                  -local_as_mode fixed \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554929"></a>
                  -active_connect_enable \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554930"></a>
                  -ipv4_mpls_vpn_nlri ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554931"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554932"></a>
          if {[keylget bgp_router_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554933"></a>
              return "FAIL - $test_name - [keylget bgp_router_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554934"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554935"></a>
          set bgp_neighbor_handle [keylget bgp_router_status handles]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554936"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554937"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554938"></a>
          # Configure L3 VPN Site on the BGP Neighbor #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554939"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554940"></a>
          set bgp_route_range_status [::ixia::emulation_bgp_route_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554941"></a>
                  -mode add \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554942"></a>
                  -handle $bgp_neighbor_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554943"></a>
                  -ip_version 4 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554944"></a>
                  -prefix $vrf_network \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554945"></a>
                  -prefix_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554946"></a>
                  -netmask $vrf_prefix \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554947"></a>
                  -label_value 55 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554948"></a>
                  -num_sites 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554949"></a>
                  -num_routes $vrf_num_routes \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554950"></a>
                  -label_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554951"></a>
                  -rd_type $rd_target_type \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554952"></a>
                  -rd_admin_value $rd_admin_value \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554953"></a>
                  -rd_assign_value $rd_assign_value \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554954"></a>
                  -rd_admin_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554955"></a>
                  -rd_assign_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554956"></a>
                  -target_type $vrf_target_type \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554957"></a>
                  -target $vrf_admin_value \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554958"></a>
                  -target_assign $vrf_assign_value \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554959"></a>
                  -import_target_type $vrf_target_type \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554960"></a>
                  -import_target $vrf_admin_value \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554961"></a>
                  -import_target_assign $vrf_assign_value \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554962"></a>
                  -local_pref 0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554963"></a>
                  -next_hop_enable 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554964"></a>
                  -origin_route_enable \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554965"></a>
                  -enable_traditional_nlri 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554966"></a>
                  -ipv4_mpls_vpn_nlri ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554967"></a>
          if {[keylget bgp_route_range_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554968"></a>
              return "FAIL - $test_name - [keylget bgp_route_range_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554969"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554970"></a>
          ##################### End of iBGP PE configuration ##################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554971"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554972"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554973"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554974"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554975"></a>
          # Configure OSPFv2 neighbor on CE port #</p>
        <p class="CodeBlock"><a name="0_pgfId-3554976"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3554977"></a>
          set ospf_neighbor_status [ixia::emulation_ospf_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554978"></a>
                  -port_handle $ce_port \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554979"></a>
                  -reset \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554980"></a>
                  -session_type ospfv2 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554981"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554982"></a>
                  -count 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554983"></a>
                  -mac_address_init $ce_mac_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554984"></a>
                  -intf_ip_addr $ce_ip_address \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554985"></a>
                  -intf_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554986"></a>
                  -router_id $ospf_ce_router_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554987"></a>
                  -router_id_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554988"></a>
                  -neighbor_intf_ip_addr $ce_gateway_ip \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554989"></a>
                  -neighbor_intf_ip_addr_step 0.0.1.0 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554990"></a>
                  -vlan_id $ce_vlan_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554991"></a>
                  -area_id $ospf_ce_area_id \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554992"></a>
                  -area_id_step 0.0.0.1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554993"></a>
                  -area_type external-capable \</p>
        <p class="CodeBlock"><a name="0_pgfId-3554994"></a>
                  -network_type broadcast ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3554995"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3554996"></a>
          if {[keylget ospf_neighbor_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3554997"></a>
              return "FAIL - $test_name - [keylget ospf_neighbor_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3554998"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3554999"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555000"></a>
          set ospf_ce_handle [keylget ospf_neighbor_status handle]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555001"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555002"></a>
          ###############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555003"></a>
          # Configure two route ranges on OSPF neighbor #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555004"></a>
          ###############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555005"></a>
          set ospf_route_status [::ixia::emulation_ospf_topology_route_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555006"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555007"></a>
                  -handle $ospf_ce_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555008"></a>
                  -type summary_routes \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555009"></a>
                  -summary_prefix_start $c_network1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555010"></a>
                  -summary_prefix_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555011"></a>
                  -summary_prefix_length $c_prefix_len1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555012"></a>
                  -summary_number_of_prefix $c_num_prefixes1 ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555013"></a>
          if {[keylget ospf_route_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555014"></a>
              return "FAIL - $test_name - [keylget ospf_route_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555015"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555016"></a>
          set ospf_route_status [::ixia::emulation_ospf_topology_route_config \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555017"></a>
                  -mode create \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555018"></a>
                  -handle $ospf_ce_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555019"></a>
                  -type summary_routes \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555020"></a>
                  -summary_prefix_start $c_network2 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555021"></a>
                  -summary_prefix_step 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555022"></a>
                  -summary_prefix_length $c_prefix_len2 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555023"></a>
                  -summary_number_of_prefix $c_num_prefixes2 ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555024"></a>
          if {[keylget ospf_route_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555025"></a>
              return "FAIL - $test_name - [keylget ospf_route_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555026"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555027"></a>
          ##################### End of OSPF CE configuration ##################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555028"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555029"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555030"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555031"></a>
          # START OSPF (PE) on #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555032"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555033"></a>
          set ospf_emulation_status [::ixia::emulation_ospf_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555034"></a>
                  -handle $ospf_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555035"></a>
                  -mode start ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555036"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555037"></a>
          if {[keylget ospf_emulation_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555038"></a>
              return "FAIL - $test_name - [keylget ospf_emulation_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555039"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555040"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555041"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555042"></a>
          # START LDP on #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555043"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555044"></a>
          set ldp_emulation_status [::ixia::emulation_ldp_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555045"></a>
                  -handle $ldp_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555046"></a>
                  -mode start ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555047"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555048"></a>
          if {[keylget ldp_emulation_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555049"></a>
              return "FAIL - $test_name - [keylget ldp_emulation_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555050"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555051"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555052"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555053"></a>
          # START OSPF (CE) on #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555054"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555055"></a>
          set ospf_emulation_status [::ixia::emulation_ospf_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555056"></a>
                  -handle $ospf_ce_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555057"></a>
                  -mode start ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555058"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555059"></a>
          if {[keylget ospf_emulation_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555060"></a>
              return "FAIL - $test_name - [keylget ospf_emulation_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555061"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555062"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555063"></a>
          after 40000</p>
        <p class="CodeBlock"><a name="0_pgfId-3555064"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555065"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555066"></a>
          # START BGP (PE) on #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555067"></a>
          ######################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555068"></a>
          set bgp_emulation_status [::ixia::emulation_bgp_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555069"></a>
                  -handle $bgp_neighbor_handle \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555070"></a>
                  -mode start ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555071"></a>
          if {[keylget bgp_emulation_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555072"></a>
              return "FAIL - $test_name - [keylget bgp_emulation_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555073"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555074"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555075"></a>
          after 60000</p>
        <p class="CodeBlock"><a name="0_pgfId-3555076"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555077"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555078"></a>
          # Generate traffic on PE and CE ports #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555079"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555080"></a>
          set stream_status [::ixia::l3vpn_generate_stream \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555081"></a>
                  -pe_port_handle $pe_port \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555082"></a>
                  -ce_port_handle $ce_port \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555083"></a>
                  -stream_generation both \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555084"></a>
                  -pe_label_protocol ldp \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555085"></a>
                  -ce_routing_protocol ospf \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555086"></a>
                  -reset \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555087"></a>
                  -length_mode random \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555088"></a>
                  -l3_length_min 128 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555089"></a>
                  -l3_length_max 1024 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555090"></a>
                  -enable_pgid 1 \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555091"></a>
                  -pgid_value 1234 ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555092"></a>
          if {[keylget stream_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555093"></a>
              return "FAIL - $test_name - [keylget stream_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555094"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555095"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555096"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555097"></a>
          # Start traffic on PE and CE ports #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555098"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555099"></a>
          # Clear stats before sending traffic</p>
        <p class="CodeBlock"><a name="0_pgfId-3555100"></a>
          set clear_stats_status [ixia::traffic_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555101"></a>
                  -port_handle "$pe_port $ce_port" \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555102"></a>
                  -action clear_stats ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555103"></a>
          if {[keylget clear_stats_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555104"></a>
              return "FAIL - $test_name - [keylget clear_stats_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555105"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555106"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555107"></a>
          set traffic_status [::ixia::traffic_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555108"></a>
                  -port_handle "$pe_port $ce_port" \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555109"></a>
                  -action sync_run ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555110"></a>
          if {[keylget traffic_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555111"></a>
              return "FAIL - $test_name - [keylget traffic_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555112"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555113"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555114"></a>
          after 40000</p>
        <p class="CodeBlock"><a name="0_pgfId-3555115"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555116"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555117"></a>
          # Stop traffic on PE and CE ports #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555118"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555119"></a>
          set traffic_status [::ixia::traffic_control \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555120"></a>
                  -port_handle "$pe_port $ce_port" \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555121"></a>
                  -action stop ]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555122"></a>
          if {[keylget traffic_status status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555123"></a>
              return "FAIL - $test_name - [keylget traffic_status log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555124"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555125"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555126"></a>
          after 5000</p>
        <p class="CodeBlock"><a name="0_pgfId-3555127"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555128"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555129"></a>
          # Print traffic stats #</p>
        <p class="CodeBlock"><a name="0_pgfId-3555130"></a>
          #############################################</p>
        <p class="CodeBlock"><a name="0_pgfId-3555131"></a>
          set pe_stats [ixia::traffic_stats -port_handle $pe_port -mode aggregate]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555132"></a>
          if {[keylget pe_stats status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555133"></a>
              return "FAIL - $test_name - [keylget pe_stats log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555134"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555135"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555136"></a>
          set ce_stats [ixia::traffic_stats -port_handle $ce_port -mode aggregate]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555137"></a>
          if {[keylget ce_stats status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555138"></a>
              return "FAIL - $test_name - [keylget ce_stats log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555139"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555140"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555141"></a>
          set pe_transmit [keylget pe_stats $pe_port.aggregate.tx.pkt_count]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555142"></a>
          set ce_transmit [keylget ce_stats $ce_port.aggregate.tx.pkt_count]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555143"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555144"></a>
          set pe_stats [ixia::traffic_stats -port_handle $pe_port -packet_group_id 1234]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555145"></a>
          if {[keylget pe_stats status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555146"></a>
              return "FAIL - $test_name - [keylget pe_stats log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555147"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555148"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555149"></a>
          set ce_stats [ixia::traffic_stats -port_handle $ce_port -packet_group_id 1234]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555150"></a>
          if {[keylget ce_stats status] != $SUCCESS} {</p>
        <p class="CodeBlock"><a name="0_pgfId-3555151"></a>
              return "FAIL - $test_name - [keylget ce_stats log]"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555152"></a>
          }</p>
        <p class="CodeBlock"><a name="0_pgfId-3555153"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555154"></a>
          set pe_receive [keylget pe_stats $pe_port.pgid.rx.pkt_count.1234]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555155"></a>
          set ce_receive [keylget ce_stats $ce_port.pgid.rx.pkt_count.1234]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555156"></a>
          &#160;</p>
        <p class="CodeBlock"><a name="0_pgfId-3555157"></a>
          puts " PE port CE port"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555158"></a>
          puts "-------------------------------------------------------"</p>
        <p class="CodeBlock"><a name="0_pgfId-3555159"></a>
          puts [format "Frames sent %12s %12s" \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555160"></a>
                  $pe_transmit $ce_transmit]</p>
        <p class="CodeBlock"><a name="0_pgfId-3555161"></a>
          puts [format "Frames received %12s %12s" \</p>
        <p class="CodeBlock"><a name="0_pgfId-3555162"></a>
                  $pe_receive $ce_receive]</p>
    </body>
</html>