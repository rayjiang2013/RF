<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Appendix|IxNetwork (only) Examples|PYTHON_Samples">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>NGPF Specific Procedures (NGPF_specific_procedures.py)</title>
        <link href="../../../Resources/Stylesheets/Advanced_Information_Manager.css" rel="stylesheet" type="text/css" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../HL_API_Help.htm#HLTAPI/HLTAPI Examples/IxNetwork (only) Examples/NGPF_Specific_Procedures.htm">Open topic with navigation</a>
        </p>
        <h3>NGPF Specific Procedures (NGPF_specific_procedures.py)</h3>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Description:</p>
        <p class="CodeBlock">#    This script configures a scenario with 2 topologies:     #</p>
        <p class="CodeBlock"># - Topology 1 with Ethernet and IPv4 stacks     #</p>
        <p class="CodeBlock"># - Topology 2 with Ethernet and IPv4 stacks     #</p>
        <p class="CodeBlock"># - uses the file pattern for multivalue_config procedure     #</p>
        <p class="CodeBlock"># The script does:   #</p>
        <p class="CodeBlock"># - start/stop protocol</p>
        <p class="CodeBlock"># - collect and display IPv4 and Ethernet statistics #</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock"># Module:</p>
        <p class="CodeBlock"># The sample was tested on a 1GE LSM XMVDC16NG module. #</p>
        <p class="CodeBlock">#</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">from pprint import pprint</p>
        <p class="CodeBlock">import os, sys</p>
        <p class="CodeBlock">import time</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># Append paths to python APIs</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock"># sys.path.append('/path/to/hltapi/library/common/ixiangpf/python')</p>
        <p class="CodeBlock"># sys.path.append('/path/to/ixnetwork/api/python')</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">from ixiatcl import IxiaTcl</p>
        <p class="CodeBlock">from ixiahlt import IxiaHlt</p>
        <p class="CodeBlock">from ixiangpf import IxiaNgpf</p>
        <p class="CodeBlock">from ixiaerror import IxiaError</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ixiatcl = IxiaTcl()</p>
        <p class="CodeBlock">ixiahlt = IxiaHlt(ixiatcl)</p>
        <p class="CodeBlock">ixiangpf = IxiaNgpf(ixiahlt)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">try:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('', {})</p>
        <p class="CodeBlock">except (NameError,):</p>
        <p class="CodeBlock" style="margin-left: 25px;">def ErrorHandler(cmd, retval):</p>
        <p class="CodeBlock" style="margin-left: 50px;">global ixiatcl</p>
        <p class="CodeBlock" style="margin-left: 50px;">err = ixiatcl.tcl_error_info()</p>
        <p class="CodeBlock" style="margin-left: 50px;">log = retval['log']</p>
        <p class="CodeBlock" style="margin-left: 50px;">additional_info = '&gt; command: %s\n&gt; tcl errorInfo: %s\n&gt; log: %s' % (cmd, err, log)</p>
        <p class="CodeBlock" style="margin-left: 50px;">raise IxiaError(IxiaError.COMMAND_FAIL, additional_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">chassis_ip = "ixro-hlt-xm2-09"</p>
        <p class="CodeBlock">tcl_server = "ixro-hlt-xm2-09"</p>
        <p class="CodeBlock">ixnetwork_tcl_server = 'localhost'</p>
        <p class="CodeBlock">port_list = ['2/1', '2/2']</p>
        <p class="CodeBlock">cfgErrors = 0</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "Printing connection variables ... "</p>
        <p class="CodeBlock">print 'chassis_ip =  %s' % chassis_ip</p>
        <p class="CodeBlock">print "tcl_server = %s " % tcl_server</p>
        <p class="CodeBlock">print "ixnetwork_tcl_server = %s" % ixnetwork_tcl_server</p>
        <p class="CodeBlock">print "port_list = %s " % port_list</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">## CONNECT AND PRINT CONNECTION RESULT ##</p>
        <p class="CodeBlock">################################################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">connect_result = ixiangpf.connect(</p>
        <p class="CodeBlock" style="margin-left: 50px;">ixnetwork_tcl_server = ixnetwork_tcl_server,</p>
        <p class="CodeBlock" style="margin-left: 50px;">tcl_server = tcl_server,</p>
        <p class="CodeBlock" style="margin-left: 50px;">device = chassis_ip,</p>
        <p class="CodeBlock" style="margin-left: 50px;">port_list = port_list,</p>
        <p class="CodeBlock" style="margin-left: 50px;">break_locks = 1,</p>
        <p class="CodeBlock" style="margin-left: 50px;">reset = 1,</p>
        <p class="CodeBlock" style="margin-left: 25px;">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if connect_result['status'] != '1':</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('connect', connect_result)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print " Printing connection result"</p>
        <p class="CodeBlock">pprint(connect_result)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ports = connect_result['vport_list'].split()</p>
        <p class="CodeBlock">############################################################</p>
        <p class="CodeBlock">##  CREATING FIRST TOPOLOGY WITH ETHERNET AND IPV4 STACKS ##</p>
        <p class="CodeBlock">############################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_1 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name      = "{Topology 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle        = ports[0],</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if topology_1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('topology_config', topology_1)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_1_handle = topology_1['topology_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">deviceGroup_1 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_handle              = topology_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_name            = "{Device Group 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier      = "10",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_enabled         = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if deviceGroup_1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('topology_config', deviceGroup_1)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">deviceGroup_1_handle = deviceGroup_1['device_group_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv1 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "00.11.01.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "00.00.00.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "00.00.01.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = topology_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv1)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_1_handle = mv1['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv2 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern           = "custom",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step         = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner        = topology_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled      = "0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv2)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_2_handle = mv2['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv3 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">multivalue_handle      = multivalue_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_start           = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_step            = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv3['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv3)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">custom_1_handle = mv3['custom_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv4 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_handle               = custom_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_value      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_count      = "3",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv4['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv4)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">increment_1_handle = mv4['increment_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">interface_1 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                = "{Ethernet 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle              = deviceGroup_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mtu                          = "1500",</p>
        <p class="CodeBlock" style="margin-left: 25px;">src_mac_addr                 = multivalue_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan                         = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id                      = multivalue_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_step                 = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_count                = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_tpid                    = "0x8100",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority_step      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">use_vpn_parameters           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">site_id                      = "0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if interface_1['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('interface_config', interface_1)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ethernet_1_handle = interface_1['ethernet_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv5 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern           = "custom",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step         = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner        = topology_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled      = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv5['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv5)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_3_handle = mv5['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv6 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">multivalue_handle      = multivalue_3_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_start           = "100.1.0.2",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_step            = "0.0.1.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv6['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv6)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">custom_2_handle = mv6['custom_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv7 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_handle               = custom_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_value      = "0.0.0.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_count      = "3",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv7['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv7)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">increment_2_handle = mv7['increment_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv8 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                 = "custom",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step               = "0.0.0.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner              = topology_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled            = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_value           = "100.1.3.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_value_step      = "100.1.3.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_index           = "10",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_index_step      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_count           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv8['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv8)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_4_handle = mv8['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv9 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">multivalue_handle      = multivalue_4_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_start           = "100.1.0.5",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_step            = "0.0.1.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv9['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv9)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">custom_3_handle = mv9['custom_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv10 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_handle               = custom_3_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_value      = "0.0.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_count      = "3",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv10['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv10)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">increment_3_handle = mv10['increment_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">interface_2 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                     = "{IPv4 1}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle                   = ethernet_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_resolve_gateway              = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac           = "00.00.00.00.02.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac_step      = "00.00.00.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">gateway                           = multivalue_4_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">intf_ip_addr                      = multivalue_3_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">netmask                           = "255.255.255.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if interface_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('interface_config', interface_2)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_1_handle = interface_2['ipv4_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">#############################################################</p>
        <p class="CodeBlock">##  CREATING SECOND TOPOLOGY WITH ETHERNET AND IPV4 STACKS ##</p>
        <p class="CodeBlock">#############################################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_2 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_name      = "{Topology 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">port_handle        = ports[1],</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if topology_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('topology_config', topology_2)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">topology_2_handle = topology_2['topology_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">deviceGroup_2 = ixiangpf.topology_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">topology_handle              = topology_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_name            = "{Device Group 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_multiplier      = "10",</p>
        <p class="CodeBlock" style="margin-left: 25px;">device_group_enabled         = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if deviceGroup_2['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('topology_config', deviceGroup_2)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">deviceGroup_2_handle = deviceGroup_2['device_group_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv11 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                = "counter",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_start          = "00.12.01.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_step           = "00.00.00.00.00.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">counter_direction      = "increment",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step              = "00.00.01.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner             = topology_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv11['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv11)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_5_handle = mv11['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv12 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern           = "custom",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step         = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner        = topology_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled      = "0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv12['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv12)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_6_handle = mv12['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv13 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">multivalue_handle      = multivalue_6_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_start           = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_step            = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv13['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv13)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">custom_4_handle = mv13['custom_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv14 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_handle               = custom_4_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_value      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_count      = "3",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv14['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv14)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">increment_4_handle = mv14['increment_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">interface_3 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                = "{Ethernet 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle              = deviceGroup_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mtu                          = "1500",</p>
        <p class="CodeBlock" style="margin-left: 25px;">src_mac_addr                 = multivalue_5_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan                         = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id                      = multivalue_6_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_step                 = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_id_count                = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_tpid                    = "0x8100",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">vlan_user_priority_step      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">use_vpn_parameters           = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">site_id                      = "0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if interface_3['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('interface_config', interface_3)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ethernet_2_handle = interface_3['ethernet_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv15 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern                 = "custom",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step               = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner              = topology_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled            = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_value           = "100.1.3.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_value_step      = "100.1.3.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_index           = "10",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_index_step      = "0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">overlay_count           = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv15['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv15)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_7_handle = mv15['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv16 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">multivalue_handle      = multivalue_7_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_start           = "100.1.0.5",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_step            = "0.0.1.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv16['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv16)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">custom_5_handle = mv16['custom_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv17 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_handle               = custom_5_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_value      = "0.0.0.1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_count      = "3",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv17['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv17)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">increment_5_handle = mv17['increment_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv18 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">pattern           = "custom",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_step         = "0.1.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_owner        = topology_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">nest_enabled      = "1",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv18['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv18)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">multivalue_8_handle = mv18['multivalue_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv19 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">multivalue_handle      = multivalue_8_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_start           = "100.1.0.2",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_step            = "0.0.1.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv19['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', mv19)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">custom_6_handle = mv19['custom_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">mv20 = ixiangpf.multivalue_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_handle               = custom_6_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_value      = "0.0.0.0",</p>
        <p class="CodeBlock" style="margin-left: 25px;">custom_increment_count      = "3",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if mv20['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('multivalue_config', m20)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">increment_6_handle = mv20['increment_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">interface_4 = ixiangpf.interface_config(</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_name                     = "{IPv4 2}",</p>
        <p class="CodeBlock" style="margin-left: 25px;">protocol_handle                   = ethernet_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_resolve_gateway              = "1",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac           = "00.00.00.00.01.01",</p>
        <p class="CodeBlock" style="margin-left: 25px;">ipv4_manual_gateway_mac_step      = "00.00.00.00.00.00",</p>
        <p class="CodeBlock" style="margin-left: 25px;">gateway                           = multivalue_8_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">intf_ip_addr                      = multivalue_7_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">netmask                           = "255.255.255.0",</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if interface_4['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('interface_config', interface_4)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_2_handle = interface_4['ipv4_handle']</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">#############################</p>
        <p class="CodeBlock">##  STARTING ALL PROTOCOLS ##</p>
        <p class="CodeBlock">#############################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nStarting all protocols ... "</p>
        <p class="CodeBlock">start = ixiangpf.test_control(action='start_all_protocols')</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if start['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('test_control', start)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nSleeping for 30 seconds ... "</p>
        <p class="CodeBlock">time.sleep(30)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">#############################</p>
        <p class="CodeBlock">##  STOPPING ALL PROTOCOLS ##</p>
        <p class="CodeBlock">#############################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\nStopping all protocols ... "</p>
        <p class="CodeBlock">stop = ixiangpf.test_control(action='stop_all_protocols')</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if stop['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('test_control', stop)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">####################################</p>
        <p class="CodeBlock">##  RETRIEVE AND PRINT STATISTICS ##</p>
        <p class="CodeBlock">####################################</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;Gather and print ethernet and ipv4 protocol_info stats (mode = aggregate) ...\n\n"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">eth_1_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ethernet_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'aggregate',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if eth_1_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', eth_1_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;Ethernet info (port 0) ... \n"</p>
        <p class="CodeBlock">pprint(eth_1_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">eth_2_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ethernet_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'aggregate',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if eth_2_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', eth_2_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;Ethernet info (port 1) ... \n"</p>
        <p class="CodeBlock">pprint(eth_2_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_1_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ipv4_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'aggregate',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if ipv4_1_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', ipv4_1_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;IPv4 info (port 0) ... \n"</p>
        <p class="CodeBlock">pprint(ipv4_1_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_2_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ipv4_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'aggregate',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if ipv4_2_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', ipv4_2_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;IPv4 info (port 1) ... \n"</p>
        <p class="CodeBlock">pprint(ipv4_2_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;Gather and print ethernet and ipv4 protocol_info stats (mode = handles) ...\n\n"</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">eth_3_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ethernet_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'handles',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if eth_3_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', eth_3_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;Ethernet info (port 0) ... \n"</p>
        <p class="CodeBlock">pprint(eth_3_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">eth_4_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ethernet_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'handles',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if eth_4_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', eth_4_info)</p>
        <p class="CodeBlock">print "\n====&gt;Ethernet info (port 1) ... \n"</p>
        <p class="CodeBlock">pprint(eth_4_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_3_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ipv4_1_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'handles',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">if ipv4_3_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', ipv4_3_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;IPv4 info (port 0) ... \n"</p>
        <p class="CodeBlock">pprint(ipv4_3_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">ipv4_4_info = ixiangpf.protocol_info(</p>
        <p class="CodeBlock" style="margin-left: 25px;">handle = ipv4_2_handle,</p>
        <p class="CodeBlock" style="margin-left: 25px;">mode = 'handles',</p>
        <p class="CodeBlock">)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">if ipv4_4_info['status'] != IxiaHlt.SUCCESS:</p>
        <p class="CodeBlock" style="margin-left: 25px;">ErrorHandler('protocol_info', ipv4_4_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n====&gt;IPv4 info (port 1) ... \n"</p>
        <p class="CodeBlock">pprint(ipv4_4_info)</p>
        <p class="CodeBlock">&#160;</p>
        <p class="CodeBlock">print "\n\nScript ended SUCCESSFULLY!"</p>
    </body>
</html>