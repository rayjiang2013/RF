<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="HL_API_Help.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="High Level API Basics|About HLPAPI|HLPAPI Basics">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" /><title>Namespaces and Packaging</title>
        <link href="../../Resources/Stylesheets/Advanced_Information_Manager.css" rel="stylesheet" type="text/css" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../HL_API_Help.htm#HL_API/About_HLP/General_Syntax_Usage_Perl_Wrappers.htm">Open topic with navigation</a>
        </p>
        <h1>General Syntax and Usage of the Perl Wrappers</h1>
        <p>The following section discusses the HLT API for Perl translation of Ixia Low Level TCL APIs.</p>
        <h3>General HLP Call Syntax</h3>
        <p>All HLP calls have the following general format:</p>
        <p style="font-family: monospace;">my $result = ixiahlt::GENERALCOMMANDCATEGORY_GENERALCOMMANDTYPE(</p>
        <blockquote>
            <p style="font-family: monospace;">'-optionO',  'value0'</p>
            <p style="font-family: monospace;">...</p>
            <p style="font-family: monospace;">'-optionN', 'valueN'</p>
        </blockquote>
        <p style="font-family: monospace;">);</p>
        <p>Additionally, you can pass the option, values parameter sequence, as a Perl anonymous hash as follows</p>
        <p style="font-family: monospace;">my $result = ixiahlt::GENERALCOMMANDCATEGORY_GENERALCOMMANDTYPE({</p>
        <blockquote>
            <p style="font-family: monospace;">optionO =&gt;  'value0',</p>
            <p style="font-family: monospace;">...</p>
            <p style="font-family: monospace;">optionN =&gt; 'valueN'</p>
        </blockquote>
        <p style="font-family: monospace;">});</p>
        <h4>General Result Interpretation</h4>
        <p>Each HLP call writes information to a global call status block. This status block can have one or more items that are accesible by keys. The special HLP subs that allow access to the status block are as follows:</p>
        <ul>
            <li value="1">ixiahlt::status_item_keys(): return all the keys currently available in the status block</li>
            <li value="2">ixiahlt::status_item(): return the value for a particular keyed item</li>
        </ul>
        <p>In addition, an HLT call returns as a return value, which is the value for the most important key or value written in the status block for a particular call. The most important key depends on the particular call.</p>
        <ul>
            <li value="1">for miscellaneous commands, it is usually status</li>
            <li value="2">for ixiahlt::XXX_config commands, it is usually handles or handle</li>
            <li value="3">for ixiahlt:::xxx_status() commands, it is usually the entire status block in a keyed list format</li>
        </ul>
        <p class="Note">The status block is overwritten with each subsequent HLP call similar to errno in the C language.</p>
        <h4>ixiahlt::status_item_keys()</h4>
        <p><span style="font-family: monospace;">my @list_of_available_status_item_keys = ixiahlt::status_item_keys();</span>
        </p>
        <h4>ixiahlt::status_item()</h4>
        <p><span style="font-family: monospace;">my $individual_status_item = ixiahlt::status_item('keyX');</span>
        </p>
        <h6>EXAMPLE:</h6>
        <p>## //vport/protocolStack/ethernet/dcbxEndpoint/range/dcbxRange</p>
        <p style="font-family: monospace;">ixnHLT_logger(q(dcbxrange_config: //vport:&lt;1&gt;/protocolStack/ethernet:&lt;1&gt;/dcbxEndpoint:&lt;1&gt;/range:&lt;1&gt;/dcbxRange...));</p>
        <p style="font-family: monospace;">$_result_ = ixiahlt::dcbxrange_config({</p>
        <blockquote>
            <p style="font-family: monospace;">mode =&gt; 'create',</p>
            <p style="font-family: monospace;">parent_handle =&gt; $ixnHLT{'PORT-HANDLE,//vport:&lt;1&gt;'},</p>
            <p style="font-family: monospace;">style =&gt; '//vport/protocolStack/ethernet/dcbxEndpoint/range',</p>
            <p style="font-family: monospace;">enabled =&gt; 'True',</p>
            <p style="font-family: monospace;">name =&gt; 'DCBX-R3',</p>
            <p style="font-family: monospace;">chassis_id =&gt; '2E:1E:50:1F:00:00',</p>
            <p style="font-family: monospace;">port_id_sub_type =&gt; 0,</p>
            <p style="font-family: monospace;">port_id_mac_address =&gt; '12:EA:1B:36:00:00',</p>
            <p style="font-family: monospace;">port_id_interface_name =&gt; '&lt;interface name&gt;',</p>
            <p style="font-family: monospace;">tx_interval =&gt; 30,</p>
            <p style="font-family: monospace;">hold_time =&gt; 4,</p>
            <p style="font-family: monospace;">tx_delay =&gt; 2,</p>
            <p style="font-family: monospace;">dcbx_enable =&gt; 'True',</p>
            <p style="font-family: monospace;">fast_init_enable =&gt; 'True',</p>
            <p style="font-family: monospace;">oui =&gt; '00.1B.21',</p>
            <p style="font-family: monospace;">dcbx_subtype =&gt; 1,</p>
            <p style="font-family: monospace;">control_tlv_max_version =&gt; 255,</p>
            <p style="font-family: monospace;">mac_range_count =&gt; 1,</p>
            <p style="font-family: monospace;">mac_range_increment_by =&gt; '00:00:00:00:00:01',</p>
            <p style="font-family: monospace;">mac_range_mac =&gt; '54:85:B2:DC:00:00',</p>
            <p style="font-family: monospace;">mac_range_name =&gt; 'MAC-R3',</p>
            <p style="font-family: monospace;">mac_range_mtu =&gt; 1500,</p>
            <p style="font-family: monospace;">mac_range_enabled =&gt; 'True',</p>
            <p style="font-family: monospace;">vlan_range_inner_first_id =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_inner_increment =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_enabled =&gt; 'False',</p>
            <p style="font-family: monospace;">vlan_range_unique_count =&gt; 4094,</p>
            <p style="font-family: monospace;">vlan_range_name =&gt; 'VLAN-R3',</p>
            <p style="font-family: monospace;">vlan_range_increment_step =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_priority =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_inner_enable =&gt; 'False',</p>
            <p style="font-family: monospace;">vlan_range_inner_unique_count =&gt; 4094,</p>
            <p style="font-family: monospace;">vlan_range_first_id =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_increment =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_inner_increment_step =&gt; 1,</p>
            <p style="font-family: monospace;">vlan_range_id_incr_mode =&gt; 2,</p>
            <p style="font-family: monospace;">vlan_range_inner_priority =&gt; 1</p>
        </blockquote>
        <p style="font-family: monospace;">});</p>
        <p style="font-family: monospace;">my @status_keys=ixiahlt::status_item_keys(); # put in @status_keys all the top level keys in the HLP global status block print("handles created for dcbxrange_config are: " .  ixiahlt::status_item('handles') . "\n");</p>
        <p class="Note">There are some commands that do not have _GENERALCOMMANDTYPE, such as ixiahlt::connect.</p>
    </body>
</html>